



The "main_code.lua" file is our equivalent to the code tab in NetLogo. It is the place 
where the user must write the code.


The collections are the basis of the simulation.

You can create collections of agents, links or patches.
You have two ways of create and populate a collection:

1. ->   new_collection = Collection( {this is a list of agents,links,or patches} )

2. ->   new_collection = Collection()
        create_n( number_of_agents,  function()  
            return Agent({
                [param1] = val_1
                [param2] = val_2
                ...
            })

        end)

Once the collection is created and populated we can work with it:


ask(  
    n_of( 2, new_collection:with( lambda '|x| x.param1 < 3' ) ), function(x)  
    
        x.param2 = 0
    
    end)


"ask" is a function that recives a set of agents and applies a function to all of them, in 
this case an anonimous function 'function(x) x.param2 = 0 end'

"n_of" is a function that randomly selects n agents in a set of agents

"with" is an internal function of collections, it's a filter that returns the elements of a 
collection that satisfy a condition (lambda expression in this case, but we can also use 
anonymous functions: function(x) your_check_condition end )




We are simulating the netlogo interface params with a config_file from where we can read 
relevant parameters such as the number of iterations (ticks) the size of the patches grid, etc.


In utilities.lua you can find a set of functions ready to use, some of them are inspired by 
netlogo functions. Check this file to know the functions you can use in your main_code.lua file