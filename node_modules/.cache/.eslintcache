[{"/home/one/NIN/nin_0.3.2/src/index.js":"1","/home/one/NIN/nin_0.3.2/src/serviceWorker.js":"2","/home/one/NIN/nin_0.3.2/src/App.js":"3","/home/one/NIN/nin_0.3.2/src/components/CreatePanel/CreatePanel.js":"4","/home/one/NIN/nin_0.3.2/src/components/Page/Page.js":"5","/home/one/NIN/nin_0.3.2/src/components/InputBoolean/InputBoolean.js":"6","/home/one/NIN/nin_0.3.2/src/components/InputSlider/InputSlider.js":"7","/home/one/NIN/nin_0.3.2/src/components/Body/Body.js":"8","/home/one/NIN/nin_0.3.2/src/components/Header/Header.js":"9","/home/one/NIN/nin_0.3.2/src/components/Footer/Footer.js":"10","/home/one/NIN/nin_0.3.2/src/components/Sidebar/Sidebar.js":"11","/home/one/NIN/nin_0.3.2/src/components/D3/Chart/Chart.js":"12","/home/one/NIN/nin_0.3.2/src/components/Mqtt/index.js":"13","/home/one/NIN/nin_0.3.2/src/components/Mqtt/Publisher/publisherLogic.js":"14","/home/one/NIN/nin_0.3.2/src/components/Mqtt/Publisher/Publisher.js":"15","/home/one/NIN/nin_0.3.2/src/components/Mqtt/Receiver/Receiver.js":"16","/home/one/NIN/nin_0.3.2/src/components/Mqtt/Connection/Connection.js":"17","/home/one/NIN/nin_0.3.2/src/components/Mqtt/Subscriber/Subscriber.js":"18","/home/one/NIN/nin_0.3.2/src/components/CreatePanel/createPanelLogic.js":"19"},{"size":443,"mtime":1620032428879,"results":"20","hashOfConfig":"21"},{"size":4612,"mtime":1616339718965,"results":"22","hashOfConfig":"21"},{"size":296,"mtime":1621403949327,"results":"23","hashOfConfig":"21"},{"size":1873,"mtime":1621403443328,"results":"24","hashOfConfig":"21"},{"size":617,"mtime":1616339718969,"results":"25","hashOfConfig":"21"},{"size":1007,"mtime":1619679424056,"results":"26","hashOfConfig":"21"},{"size":1551,"mtime":1619679442604,"results":"27","hashOfConfig":"21"},{"size":343,"mtime":1621403770041,"results":"28","hashOfConfig":"21"},{"size":297,"mtime":1621403846354,"results":"29","hashOfConfig":"21"},{"size":299,"mtime":1621403826190,"results":"30","hashOfConfig":"21"},{"size":1148,"mtime":1621403929924,"results":"31","hashOfConfig":"21"},{"size":2238,"mtime":1620632874659,"results":"32","hashOfConfig":"21"},{"size":2687,"mtime":1620632326018,"results":"33","hashOfConfig":"21"},{"size":2019,"mtime":1620324748163,"results":"34","hashOfConfig":"21"},{"size":1541,"mtime":1620630653525,"results":"35","hashOfConfig":"21"},{"size":3022,"mtime":1620632864483,"results":"36","hashOfConfig":"21"},{"size":1687,"mtime":1620632282982,"results":"37","hashOfConfig":"21"},{"size":1171,"mtime":1620632322992,"results":"38","hashOfConfig":"21"},{"size":276,"mtime":1621403426479,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9hhs8l",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/one/NIN/nin_0.3.2/src/index.js",[],"/home/one/NIN/nin_0.3.2/src/serviceWorker.js",[],["83","84"],"/home/one/NIN/nin_0.3.2/src/App.js",[],"/home/one/NIN/nin_0.3.2/src/components/CreatePanel/CreatePanel.js",[],"/home/one/NIN/nin_0.3.2/src/components/Page/Page.js",[],"/home/one/NIN/nin_0.3.2/src/components/InputBoolean/InputBoolean.js",[],"/home/one/NIN/nin_0.3.2/src/components/InputSlider/InputSlider.js",[],"/home/one/NIN/nin_0.3.2/src/components/Body/Body.js",[],"/home/one/NIN/nin_0.3.2/src/components/Header/Header.js",[],"/home/one/NIN/nin_0.3.2/src/components/Footer/Footer.js",[],"/home/one/NIN/nin_0.3.2/src/components/Sidebar/Sidebar.js",[],"/home/one/NIN/nin_0.3.2/src/components/D3/Chart/Chart.js",["85","86"],"import React, { useState } from 'react';\nimport { scaleOrdinal, scaleLinear } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { line as d3Line, curveBasis } from 'd3-shape';\nimport { min, max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\n\nimport './chart.css';\n\n\nconst Chart = (props) => {\n\n\tconst svgWidth \t= 500;\n\tconst svgHeight = 300;\n\n\tconst margin \t= { top: 20, right: 80, bottom: 30, left: 50 };\n\tconst width \t= svgWidth - margin.left - margin.right;\n\tconst height \t= svgHeight - margin.top - margin.bottom;\n\n\tconst x \t\t= scaleLinear().range([0, width]);\n\tconst y \t\t= scaleLinear().range([height, 0]);\n\tconst z \t\t= scaleOrdinal(schemeCategory10);\n\n\tconst line = d3Line()\n\t\t.curve(curveBasis)\n\t\t.x(d => x(d.time))\n\t\t.y(d => y(d.value));\n\n\tconst [data, updateData] = useState(props.data);\n\t\n\n\tx.domain([\n\t\tmin(data, c => min(c.values, d => d.time)),\n\t\tmax(data, c => max(c.values, d => d.time)),\n\t]);\n\ty.domain([\n\t\tmin(data, c => min(c.values, d => d.value)),\n\t\tmax(data, c => max(c.values, d => d.value)),\n\t]);\n\tz.domain(data.map(c => c.id));\n\n\tif ( y.domain()[0] - y.domain()[1] == 0 ) {y.domain([0,1])}\n\n\treturn(\n\t\t<>\n\t\t\t<svg width={svgWidth} height={svgHeight}>\n\t\t\t\t<g transform={`translate(${margin.left}, ${margin.top})`}>\n\t\t\t\t\t<g\n\t\t\t\t\t\tclassName=\"axis axis--x\"\n\t\t\t\t\t\ttransform={`translate(0, ${height})`}\n\t\t\t\t\t\tref={node => select(node).call(axisBottom(x))}\n\t\t\t\t\t/>\n\t\t\t\t\t<g className=\"axis axis--y\" ref={node => select(node).call(axisLeft(y))}>\n\t\t\t\t\t\t<text transform=\"rotate(-90)\" y=\"6\" dy=\"0.71em\" fill=\"#000\">\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t</text>\n\t\t\t\t\t</g>\n\t\t\t\t\t{data.map(trackedVar => {\n\t\t\t\t\t\tconst [lastD] = trackedVar.values.slice(-1);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<g className=\"trackedVar\" key={trackedVar.id}>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName=\"line\"\n\t\t\t\t\t\t\t\t\td={line(trackedVar.values)}\n\t\t\t\t\t\t\t\t\tstyle={{ stroke: z(trackedVar.id) }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\ttransform={`translate(${x(lastD.time)}, ${y(lastD.value)})`}\n\t\t\t\t\t\t\t\t\tx={3}\n\t\t\t\t\t\t\t\t\tdy=\"0.35em\"\n\t\t\t\t\t\t\t\t\tstyle={{ font: '10px sans-serif' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{trackedVar.id}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t</>\n\t);\n};\n\nexport default Chart\n\n","/home/one/NIN/nin_0.3.2/src/components/Mqtt/index.js",[],"/home/one/NIN/nin_0.3.2/src/components/Mqtt/Publisher/publisherLogic.js",[],"/home/one/NIN/nin_0.3.2/src/components/Mqtt/Publisher/Publisher.js",["87"],"import React, { useContext } from 'react';\nimport { Card, Form, Input, Row, Col, Button, Slider } from 'antd';\nimport { NewContext} from '../index'\n\nimport {\n\tmodelLoad, \n\tmodelSetup,\n\tmodelStep,\n\tmodelRun,\n\tmodelSpeed,\n\tmodelViewStats,\n\tmodelViewWindows,\n\tmodelViewFamilies,\n\tmodelViewGrid,\n} from './publisherLogic' \n\nconst Publisher = ({ publish }) => {\n\tconst [form] = Form.useForm();\n\tconst {state, dispatch} = useContext(NewContext);\n\t\n\tconst PublishForm = (\n\t\t<Form layout=\"vertical\"\tname=\"basic\" form={form} >\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8} >\n\t\t\t\t\t<Input type='file' onChange={(value) => modelLoad(value,publish)}/>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8} >\n\t\t\t\t\t{/* <Button onClick={modelLoad}>\tLoad\t</Button> */}\n\t\t\t\t\t<Button onClick={()=>modelSetup(publish,dispatch)}>\tSetup\t</Button>\n\t\t\t\t\t<Button onClick={()=>modelStep(publish)}> \t\t\tStep\t</Button>\n\t\t\t\t\t<Button onClick={()=>modelRun(publish)}> \t\t\tRun \t</Button>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<label>Speed:</label>\n\t\t\t\t\t<Slider min={1} max={10} defaultValue={10} onChange={(val)=>modelSpeed(val,publish)} />\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8} >\n\t\t\t\t\t<Button onClick={()=>modelViewStats(publish)}> \t  view Stats\t</Button>\n\t\t\t\t\t<Button onClick={()=>modelViewWindows(publish)}>  view Windows \t</Button>\n\t\t\t\t\t<Button onClick={()=>modelViewFamilies(publish)}> view Families\t</Button>\n\t\t\t\t\t<Button onClick={()=>modelViewGrid(publish)}> \t  view Grid \t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t)\n\n\treturn (\n\t\t<Card title=\"Control Panel\" >\n\t\t\t{PublishForm}\n\t\t</Card>\n\t);\n}\n\nexport default Publisher;\n","/home/one/NIN/nin_0.3.2/src/components/Mqtt/Receiver/Receiver.js",["88","89","90","91"],"import React, { useEffect, useState, useContext } from 'react';\nimport { Card, List } from 'antd';\nimport createWindow from '../../CreatePanel/CreatePanel'\nimport Chart from '../../D3/Chart/Chart'\nimport { NewContext } from '../index'\n\nimport './receiver.css'\n\nconst Receiver = ({ payload, publish }) => {\n\tconst {state, dispatch} \t  = useContext(NewContext);\n\tconst [init, setInit]         = useState(false);\n\tconst [messages, setMessages] = useState([]);\n\n\t// \"monitors\" is a Map of Array of Maps. Each one of this Arrays contains the information to build a graphical monitor.\n\t// This maps have two keys -> \"id\" is the name of the var we want to track and \"values\" are a list of maps, each one of them containing two keys -> time (x axis) and a value (y axis) associated to this time. \n\t// When component is created, \"monitors\" is an empty Array, but it will be populated with the mqtt messagges.\n\n\t// const monitors = { \n\t// \t\t'var_1':  [ {time: 0, value: 11}, {time: 1, value: 20}, ... ] ,\n\t// \t\t'var_2':  [ {time: 0, value: 11}, {time: 1, value: 20}, ... ]\n\t// };\n\tconst [monitors, setmonitors] = useState({});\n\n\tuseEffect( () => {\n\t\tif (state.setupClicked) {\n\t\t\tsetmonitors({});\n\t\t\tdispatch({type: 'unSetup'});\n\t\t}\n\t}, [state]);\n\n\t// At the moment, two posible topics:\n\t// - from_server/panel_info\n\t// - from_server/update\n\tconst topicOption = {\n\n\t\t'from_server/panel_info': (jsonObj) => {\n\t\t\tfor (const [k,v] of Object.entries(jsonObj) ) {\n\t\t\t\tif (k !== 'Monitor') {\n\t\t\t\t\tcreateWindow(v, publish)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'from_server/update': (jsonObj) => {\n\t\t\tif (Object.keys(monitors).length === 0) {\n\t\t\t\tsetInit(true)\n\n\t\t\t\tfor (const [k,v] of Object.entries(jsonObj) ) {\n\t\t\t\t\tmonitors[k] = [{time: 0, value:v}];\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tfor (const [k,v] of Object.entries(jsonObj) ) {\n\n\t\t\t\t\tconst targetVar \t= monitors[k];\n\n\t\t\t\t\tconst lastElement  \t= targetVar[targetVar.length -1];\n\t\t\t\t\tconst newTime  \t\t= lastElement.time + 1;\n\t\t\t\t\tconst newInput\t\t= {time: newTime, value:v};\n\t\t\t\t\ttargetVar.push(newInput)\t\n\t\t\t\t}\n\t\t\t\t// console.log(monitors['app_rescued'].length)\n\t\t\t}\t\t\t\n\t\t},\n\n\t}\n\n\tuseEffect(() => {\n\t\tif (payload.topic) {\n\t\t\tconst jsonObject = JSON.parse(payload.message);\n\t\t\tsetMessages(messages => [...messages, payload]);\n\n\t\t\ttopicOption[payload.topic](jsonObject);\n\t\t}\n\t}, [payload]);\n\n\tconst renderListItem = (item) => (\n\t\t<List.Item>\n\t\t\t<List.Item.Meta\n\t\t\t\ttitle={item.topic}\n\t\t\t\tdescription={item.message}\n\t\t\t/>\n\t\t</List.Item>\n\t);\n\n\treturn (\n\t\t<Card title=\"Receiver\">\n\t\t\t{/* When Uncommented, incoming MQTT messages are displayed */}\n\t\t\t{/* <List\n\t\t\t\tsize=\"small\"\n\t\t\t\tbordered\n\t\t\t\tdataSource={messages}\n\t\t\t\t// renderItem={renderListItem}\n\t\t\t\tstyle={{maxHeight:'15em' ,overflow:'scroll'}}\n\t\t\t/> */}\n\t\t\t{ init && \n\t\t\t\t<div id='allMonitorsDiv'>\n\t\t\t\t\t{Object.keys(monitors).map(function(key) {\n\t\t\t\t\t\tconst newMonitor = [{id:key, values:monitors[key]}]\n\t\t\t\t\t\treturn <div key={key} className='monitorDiv'> <Chart data={newMonitor} /> </div>;\n\t\t\t\t  \t})}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t</Card>\n\t);\n}\n\nexport default Receiver;\n","/home/one/NIN/nin_0.3.2/src/components/Mqtt/Connection/Connection.js",[],"/home/one/NIN/nin_0.3.2/src/components/Mqtt/Subscriber/Subscriber.js",["92","93"],"import React, { useContext } from 'react';\nimport { Card, Form, Input, Row, Col, Button, Select } from 'antd';\n\nconst Subscriber = ({ sub, unSub, showUnsub }) => {\n\tconst [form] = Form.useForm();\n\n\tconst record = {\n\t\ttopic: 'from_server/#',\n\t\tqos: 0,\n\t};\n\n\tconst onFinish = (values) => {\n\t\tconst withQos = values\n\t\twithQos.qos = record.qos\n\t\tsub(withQos);\n\t};\n\n\tconst handleUnsub = () => {\n\t\tconst values = form.getFieldsValue();\n\t\tunSub(values);\n\t};\n\n\tconst SubForm = (\n\t\t<Form\n\t\t\tlayout=\"vertical\"\n\t\t\tname=\"basic\"\n\t\t\tform={form}\n\t\t\tinitialValues={record}\n\t\t\tonFinish={onFinish}\n\t\t>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Topic\"\n\t\t\t\t\t\tname=\"topic\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col span={8} >\n\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\tSubscribe\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowUnsub ?\n\t\t\t\t\t\t\t\t<Button type=\"danger\" style={{ marginLeft: '10px' }} onClick={handleUnsub}>\n\t\t\t\t\t\t\t\t\tUnsubscribe\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t)\n\n\treturn (\n\t\t<Card >\n\t\t\t{SubForm}\n\t\t</Card>\n\t);\n}\n\nexport default Subscriber;\n","/home/one/NIN/nin_0.3.2/src/components/CreatePanel/createPanelLogic.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":30,"column":15,"nodeType":"100","messageId":"101","endLine":30,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":43,"column":37,"nodeType":"104","messageId":"105","endLine":43,"endColumn":39},{"ruleId":"98","severity":1,"message":"106","line":19,"column":9,"nodeType":"100","messageId":"101","endLine":19,"endColumn":14},{"ruleId":"98","severity":1,"message":"107","line":12,"column":9,"nodeType":"100","messageId":"101","endLine":12,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":29,"column":5,"nodeType":"110","endLine":29,"endColumn":12,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":75,"column":5,"nodeType":"110","endLine":75,"endColumn":14,"suggestions":"113"},{"ruleId":"98","severity":1,"message":"114","line":77,"column":8,"nodeType":"100","messageId":"101","endLine":77,"endColumn":22},{"ruleId":"98","severity":1,"message":"115","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":27},{"ruleId":"98","severity":1,"message":"116","line":2,"column":47,"nodeType":"100","messageId":"101","endLine":2,"endColumn":53},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'updateData' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'state' is assigned a value but never used.","'messages' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["119"],"React Hook useEffect has a missing dependency: 'topicOption'. Either include it or remove the dependency array.",["120"],"'renderListItem' is assigned a value but never used.","'useContext' is defined but never used.","'Select' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [dispatch, state]",{"range":"125","text":"126"},"Update the dependencies array to be: [payload, topicOption]",{"range":"127","text":"128"},[1226,1233],"[dispatch, state]",[2283,2292],"[payload, topicOption]"]