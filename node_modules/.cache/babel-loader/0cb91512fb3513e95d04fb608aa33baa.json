{"ast":null,"code":"/**\n * jsPanel - A JavaScript library to create highly configurable multifunctional floating panels that can also be used as modal, tooltip, hint or contextmenu\n * @version v4.11.4\n * @homepage https://jspanel.de/\n * @license MIT\n * @author Stefan Sträßer - info@jspanel.de\n * @github https://github.com/Flyer53/jsPanel4.git\n */\nimport { jsPanel } from '../../jspanel.js';\n/**\r\n * If option.dragit is enabled on a modal AND an already open panel has option.syncMargins set to true the modal somehow inherits\r\n * the option.dragit.containment setting of the already open panel. Reason unknown!\r\n * Workaround: Set option.dragit.containment to a suitable value on the modal.\r\n */\n\nif (!jsPanel.modal) {\n  jsPanel.modal = {\n    version: '1.2.5',\n    date: '2020-04-26 23:23',\n    defaults: {\n      closeOnEscape: true,\n      closeOnBackdrop: true,\n      dragit: false,\n      headerControls: 'closeonly',\n      resizeit: false,\n      syncMargins: false\n    },\n    addBackdrop: function addBackdrop(id) {\n      var modalCount = document.getElementsByClassName('jsPanel-modal-backdrop').length,\n          mb = document.createElement('div');\n      mb.id = 'jsPanel-modal-backdrop-' + id;\n\n      if (modalCount === 0) {\n        mb.className = 'jsPanel-modal-backdrop';\n      } else if (modalCount > 0) {\n        mb.className = 'jsPanel-modal-backdrop jsPanel-modal-backdrop-multi';\n      }\n\n      mb.style.zIndex = this.ziModal.next();\n      return mb;\n    },\n    removeBackdrop: function removeBackdrop(id) {\n      var mb = document.getElementById(\"jsPanel-modal-backdrop-\".concat(id));\n      mb.classList.add('jsPanel-modal-backdrop-out');\n      var delay = parseFloat(getComputedStyle(mb).animationDuration) * 1000;\n      window.setTimeout(function () {\n        document.body.removeChild(mb);\n      }, delay);\n    },\n    create: function create() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.paneltype = 'modal';\n\n      if (!options.id) {\n        options.id = \"jsPanel-\".concat(jsPanel.idCounter += 1);\n      } else if (typeof options.id === 'function') {\n        options.id = options.id();\n      }\n\n      var opts = options,\n          backdrop = this.addBackdrop(opts.id);\n\n      if (options.config) {\n        opts = Object.assign({}, options.config, options);\n        delete opts.config;\n      }\n\n      opts = Object.assign({}, this.defaults, opts, {\n        container: 'window'\n      });\n      document.body.append(backdrop);\n      return jsPanel.create(opts, function (modal) {\n        modal.style.zIndex = jsPanel.modal.ziModal.next();\n        modal.header.style.cursor = 'default';\n        modal.footer.style.cursor = 'default'; // close modal on click in backdrop\n\n        if (opts.closeOnBackdrop) {\n          jsPanel.pointerup.forEach(function (evt) {\n            document.getElementById(\"jsPanel-modal-backdrop-\".concat(opts.id)).addEventListener(evt, function () {\n              modal.close(null, true);\n            });\n          });\n        } // remove modal backdrop when modal is closed\n        // callback should be the first item in the onclosed array\n\n\n        modal.options.onclosed.unshift(function removeModalBackdrop() {\n          jsPanel.modal.removeBackdrop(opts.id); // must return true in order to have the next callbacks (added via modal config) in the array execute as well\n\n          return true;\n        });\n      });\n    }\n  };\n\n  jsPanel.modal.ziModal = function () {\n    var val = jsPanel.ziBase + 10000;\n    return {\n      next: function next() {\n        return val++;\n      }\n    };\n  }();\n}","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/node_modules/jspanel4/es6module/extensions/modal/jspanel.modal.js"],"names":["jsPanel","modal","version","date","defaults","closeOnEscape","closeOnBackdrop","dragit","headerControls","resizeit","syncMargins","addBackdrop","id","modalCount","document","getElementsByClassName","length","mb","createElement","className","style","zIndex","ziModal","next","removeBackdrop","getElementById","classList","add","delay","parseFloat","getComputedStyle","animationDuration","window","setTimeout","body","removeChild","create","options","paneltype","idCounter","opts","backdrop","config","Object","assign","container","append","header","cursor","footer","pointerup","forEach","evt","addEventListener","close","onclosed","unshift","removeModalBackdrop","val","ziBase"],"mappings":"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","sourcesContent":["/**\n * jsPanel - A JavaScript library to create highly configurable multifunctional floating panels that can also be used as modal, tooltip, hint or contextmenu\n * @version v4.11.4\n * @homepage https://jspanel.de/\n * @license MIT\n * @author Stefan Sträßer - info@jspanel.de\n * @github https://github.com/Flyer53/jsPanel4.git\n */\n\nimport {jsPanel} from '../../jspanel.js';\n\n/**\r\n * If option.dragit is enabled on a modal AND an already open panel has option.syncMargins set to true the modal somehow inherits\r\n * the option.dragit.containment setting of the already open panel. Reason unknown!\r\n * Workaround: Set option.dragit.containment to a suitable value on the modal.\r\n */\r\n\r\nif (!jsPanel.modal) {\r\n\r\n    jsPanel.modal = {\r\n\r\n        version: '1.2.5',\r\n        date: '2020-04-26 23:23',\r\n\r\n        defaults: {\r\n            closeOnEscape:  true,\r\n            closeOnBackdrop:true,\r\n            dragit:         false,\r\n            headerControls: 'closeonly',\r\n            resizeit:       false,\r\n            syncMargins:    false\r\n        },\r\n\r\n        addBackdrop(id) {\r\n            let modalCount = document.getElementsByClassName('jsPanel-modal-backdrop').length,\r\n                mb = document.createElement('div');\r\n            mb.id = 'jsPanel-modal-backdrop-' + id;\r\n            if (modalCount === 0) {\r\n                mb.className = 'jsPanel-modal-backdrop';\r\n            } else if (modalCount > 0) {\r\n                mb.className = 'jsPanel-modal-backdrop jsPanel-modal-backdrop-multi';\r\n            }\r\n            mb.style.zIndex = this.ziModal.next();\r\n            return mb;\r\n        },\r\n\r\n        removeBackdrop(id) {\r\n            let mb = document.getElementById(`jsPanel-modal-backdrop-${id}`);\r\n            mb.classList.add('jsPanel-modal-backdrop-out');\r\n            let delay = parseFloat(getComputedStyle(mb).animationDuration) * 1000;\r\n            window.setTimeout(function() {\r\n                document.body.removeChild(mb);\r\n            }, delay);\r\n        },\r\n\r\n        create(options = {}) {\r\n            options.paneltype = 'modal';\r\n            if (!options.id) {\r\n                options.id = `jsPanel-${jsPanel.idCounter += 1}`;\r\n            } else if (typeof options.id === 'function') {\r\n                options.id = options.id();\r\n            }\r\n\r\n            let opts = options,\r\n                backdrop = this.addBackdrop(opts.id);\r\n            if (options.config) {\r\n                opts = Object.assign({}, options.config, options);\r\n                delete opts.config;\r\n            }\r\n            opts = Object.assign({}, this.defaults, opts, {container: 'window'});\r\n\r\n            document.body.append(backdrop);\r\n\r\n            return jsPanel.create(opts, modal => {\r\n                modal.style.zIndex = jsPanel.modal.ziModal.next();\r\n                modal.header.style.cursor = 'default';\r\n                modal.footer.style.cursor = 'default';\r\n                // close modal on click in backdrop\r\n                if (opts.closeOnBackdrop) {\r\n                    jsPanel.pointerup.forEach(function (evt) {\r\n                        document.getElementById(`jsPanel-modal-backdrop-${opts.id}`).addEventListener(evt, function () {\r\n                            modal.close(null, true);\r\n                        });\r\n                    });\r\n                }\r\n                // remove modal backdrop when modal is closed\r\n                // callback should be the first item in the onclosed array\r\n                modal.options.onclosed.unshift(function removeModalBackdrop() {\r\n                    jsPanel.modal.removeBackdrop(opts.id);\r\n                    // must return true in order to have the next callbacks (added via modal config) in the array execute as well\r\n                    return true;\r\n                });\r\n            });\r\n\r\n        }\r\n\r\n    };\r\n\r\n    jsPanel.modal.ziModal = (() => {\r\n        let val = jsPanel.ziBase + 10000;\r\n        return {\r\n            next: function() {\r\n                return val++;\r\n            }\r\n        };\r\n    })();\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}