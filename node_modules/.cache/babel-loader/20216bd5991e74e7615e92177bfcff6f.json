{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport devWarning from '../_util/devWarning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport var ANT_MARK = 'internalMark';\n\nvar LocaleProvider = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocaleProvider, _React$Component);\n\n  var _super = _createSuper(LocaleProvider);\n\n  function LocaleProvider(props) {\n    var _this;\n\n    _classCallCheck(this, LocaleProvider);\n\n    _this = _super.call(this, props);\n    changeConfirmLocale(props.locale && props.locale.Modal);\n    devWarning(props._ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale');\n    return _this;\n  }\n\n  _createClass(LocaleProvider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      changeConfirmLocale(this.props.locale && this.props.locale.Modal);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var locale = this.props.locale;\n\n      if (prevProps.locale !== locale) {\n        changeConfirmLocale(locale && locale.Modal);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      changeConfirmLocale();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          locale = _this$props.locale,\n          children = _this$props.children;\n      return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n        value: _extends(_extends({}, locale), {\n          exist: true\n        })\n      }, children);\n    }\n  }]);\n\n  return LocaleProvider;\n}(React.Component);\n\nexport { LocaleProvider as default };\nLocaleProvider.defaultProps = {\n  locale: {}\n};","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/node_modules/antd/es/locale-provider/index.js"],"names":["_extends","_classCallCheck","_createClass","_inherits","_createSuper","React","devWarning","changeConfirmLocale","LocaleContext","ANT_MARK","LocaleProvider","_React$Component","_super","props","_this","call","locale","Modal","_ANT_MARK__","key","value","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","_this$props","children","createElement","Provider","exist","Component","default","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAO,IAAIC,QAAQ,GAAG,cAAf;;AAEP,IAAIC,cAAc,GAAG,aAAa,UAAUC,gBAAV,EAA4B;AAC5DR,EAAAA,SAAS,CAACO,cAAD,EAAiBC,gBAAjB,CAAT;;AAEA,MAAIC,MAAM,GAAGR,YAAY,CAACM,cAAD,CAAzB;;AAEA,WAASA,cAAT,CAAwBG,KAAxB,EAA+B;AAC7B,QAAIC,KAAJ;;AAEAb,IAAAA,eAAe,CAAC,IAAD,EAAOS,cAAP,CAAf;;AAEAI,IAAAA,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBF,KAAlB,CAAR;AACAN,IAAAA,mBAAmB,CAACM,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACG,MAAN,CAAaC,KAA9B,CAAnB;AACAX,IAAAA,UAAU,CAACO,KAAK,CAACK,WAAN,KAAsBT,QAAvB,EAAiC,gBAAjC,EAAmD,+GAAnD,CAAV;AACA,WAAOK,KAAP;AACD;;AAEDZ,EAAAA,YAAY,CAACQ,cAAD,EAAiB,CAAC;AAC5BS,IAAAA,GAAG,EAAE,mBADuB;AAE5BC,IAAAA,KAAK,EAAE,SAASC,iBAAT,GAA6B;AAClCd,MAAAA,mBAAmB,CAAC,KAAKM,KAAL,CAAWG,MAAX,IAAqB,KAAKH,KAAL,CAAWG,MAAX,CAAkBC,KAAxC,CAAnB;AACD;AAJ2B,GAAD,EAK1B;AACDE,IAAAA,GAAG,EAAE,oBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASE,kBAAT,CAA4BC,SAA5B,EAAuC;AAC5C,UAAIP,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAAxB;;AAEA,UAAIO,SAAS,CAACP,MAAV,KAAqBA,MAAzB,EAAiC;AAC/BT,QAAAA,mBAAmB,CAACS,MAAM,IAAIA,MAAM,CAACC,KAAlB,CAAnB;AACD;AACF;AARA,GAL0B,EAc1B;AACDE,IAAAA,GAAG,EAAE,sBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASI,oBAAT,GAAgC;AACrCjB,MAAAA,mBAAmB;AACpB;AAJA,GAd0B,EAmB1B;AACDY,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,SAASK,MAAT,GAAkB;AACvB,UAAIC,WAAW,GAAG,KAAKb,KAAvB;AAAA,UACIG,MAAM,GAAGU,WAAW,CAACV,MADzB;AAAA,UAEIW,QAAQ,GAAGD,WAAW,CAACC,QAF3B;AAGA,aAAO,aAAatB,KAAK,CAACuB,aAAN,CAAoBpB,aAAa,CAACqB,QAAlC,EAA4C;AAC9DT,QAAAA,KAAK,EAAEpB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKgB,MAAL,CAAT,EAAuB;AACpCc,UAAAA,KAAK,EAAE;AAD6B,SAAvB;AAD+C,OAA5C,EAIjBH,QAJiB,CAApB;AAKD;AAXA,GAnB0B,CAAjB,CAAZ;;AAiCA,SAAOjB,cAAP;AACD,CAlDiC,CAkDhCL,KAAK,CAAC0B,SAlD0B,CAAlC;;AAoDA,SAASrB,cAAc,IAAIsB,OAA3B;AACAtB,cAAc,CAACuB,YAAf,GAA8B;AAC5BjB,EAAAA,MAAM,EAAE;AADoB,CAA9B","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport devWarning from '../_util/devWarning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport var ANT_MARK = 'internalMark';\n\nvar LocaleProvider = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocaleProvider, _React$Component);\n\n  var _super = _createSuper(LocaleProvider);\n\n  function LocaleProvider(props) {\n    var _this;\n\n    _classCallCheck(this, LocaleProvider);\n\n    _this = _super.call(this, props);\n    changeConfirmLocale(props.locale && props.locale.Modal);\n    devWarning(props._ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale');\n    return _this;\n  }\n\n  _createClass(LocaleProvider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      changeConfirmLocale(this.props.locale && this.props.locale.Modal);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var locale = this.props.locale;\n\n      if (prevProps.locale !== locale) {\n        changeConfirmLocale(locale && locale.Modal);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      changeConfirmLocale();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          locale = _this$props.locale,\n          children = _this$props.children;\n      return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n        value: _extends(_extends({}, locale), {\n          exist: true\n        })\n      }, children);\n    }\n  }]);\n\n  return LocaleProvider;\n}(React.Component);\n\nexport { LocaleProvider as default };\nLocaleProvider.defaultProps = {\n  locale: {}\n};"]},"metadata":{},"sourceType":"module"}