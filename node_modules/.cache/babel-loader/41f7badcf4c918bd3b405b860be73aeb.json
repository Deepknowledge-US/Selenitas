{"ast":null,"code":"export function modelLoad(value) {\n  const removeElementsByClass = className => {\n    const elements = document.getElementsByClassName(className);\n\n    while (elements.length > 0) {\n      elements[0].parentNode.removeChild(elements[0]);\n    }\n  }; // At the moment, new panels are created with class 'panel_div', we need to remove this elements before create new ones\n\n\n  removeElementsByClass('jsPanel'); // In the Lua side, models must be created in a folder named as the model file and this folder must be placed inside the Resources folder\n\n  const fileName = value.target.files[0].name;\n  const dirName = fileName.split('.')[0]; // At the moment, the separator is \"|\"\n\n  publish({\n    topic: 'from_client',\n    qos: 0,\n    payload: 'Load|' + dirName + '/' + fileName\n  });\n}\n;\nexport function modelSetup(publish, dispatch) {\n  dispatch({\n    type: 'setup'\n  });\n  publish({\n    topic: 'from_client',\n    qos: 0,\n    payload: 'Setup'\n  });\n}\n;\nexport function modelStep(publish) {\n  publish({\n    topic: 'from_client',\n    qos: 0,\n    payload: 'Step'\n  });\n}\n;\nexport function modelRun(publish) {\n  publish({\n    topic: 'from_client',\n    qos: 0,\n    payload: 'Run'\n  });\n}\n;\nexport function modelSpeed(publish, value) {\n  publish({\n    topic: 'from_client',\n    qos: 0,\n    payload: 'Speed:' + value\n  });\n}\n;\nexport function modelViewStats(publish) {\n  publish({\n    topic: 'from_client',\n    qos: 0,\n    payload: 'ToggleView:Stats'\n  });\n}\n;\nexport function modelViewWindows(publish) {\n  publish({\n    topic: 'from_client',\n    qos: 0,\n    payload: 'ToggleView:Windows'\n  });\n}\n;\nexport function modelViewFamilies(publish) {\n  publish({\n    topic: 'from_client',\n    qos: 0,\n    payload: 'ToggleView:Families'\n  });\n}\n;\nexport function modelViewGrid(publish) {\n  publish({\n    topic: 'from_client',\n    qos: 0,\n    payload: 'ToggleView:Grid'\n  });\n}\n;","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/components/Hook/Publisher/publisherLogic.js"],"names":["modelLoad","value","removeElementsByClass","className","elements","document","getElementsByClassName","length","parentNode","removeChild","fileName","target","files","name","dirName","split","publish","topic","qos","payload","modelSetup","dispatch","type","modelStep","modelRun","modelSpeed","modelViewStats","modelViewWindows","modelViewFamilies","modelViewGrid"],"mappings":"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","sourcesContent":["export function modelLoad(value){\n\n\tconst removeElementsByClass = (className) => {\n\t\tconst elements = document.getElementsByClassName(className);\n\t\twhile(elements.length > 0){\n\t\t\telements[0].parentNode.removeChild(elements[0]);\n\t\t}\n\t}\n\n\t// At the moment, new panels are created with class 'panel_div', we need to remove this elements before create new ones\n\tremoveElementsByClass('jsPanel')\n\n\t// In the Lua side, models must be created in a folder named as the model file and this folder must be placed inside the Resources folder\n\tconst fileName \t= value.target.files[0].name\n\tconst dirName \t= fileName.split('.')[0]\n\n\t// At the moment, the separator is \"|\"\n\tpublish({\n\t\ttopic: 'from_client',\n\t\tqos: 0,\n\t\tpayload: 'Load|' + dirName + '/' + fileName\n\t})\n};\n\nexport function modelSetup(publish, dispatch) {\n\tdispatch({type: 'setup'});\n\tpublish({\n\t\ttopic: 'from_client',\n\t\tqos: 0,\n\t\tpayload: 'Setup'\n\t});\n};\n\nexport function modelStep(publish){\n\tpublish({\n\t\ttopic: 'from_client',\n\t\tqos: 0,\n\t\tpayload: 'Step'\n\t})\n};\n\nexport function modelRun(publish){\n\tpublish({\n\t\ttopic: 'from_client',\n\t\tqos: 0,\n\t\tpayload: 'Run'\n\t})\n};\n\nexport function modelSpeed(publish, value){\n\tpublish({\n\t\ttopic: 'from_client',\n\t\tqos: 0,\n\t\tpayload: 'Speed:'+ value\n\t})\n};\n\nexport function modelViewStats(publish){\n\tpublish({\n\t\ttopic: 'from_client',\n\t\tqos: 0,\n\t\tpayload: 'ToggleView:Stats'\n\t})\n};\n\nexport function modelViewWindows(publish){\n\tpublish({\n\t\ttopic: 'from_client',\n\t\tqos: 0,\n\t\tpayload: 'ToggleView:Windows'\n\t})\n};\n\nexport function modelViewFamilies(publish){\n\tpublish({\n\t\ttopic: 'from_client',\n\t\tqos: 0,\n\t\tpayload: 'ToggleView:Families'\n\t})\n};\n\nexport function modelViewGrid(publish){\n\tpublish({\n\t\ttopic: 'from_client',\n\t\tqos: 0,\n\t\tpayload: 'ToggleView:Grid'\n\t})\n};\n\n"]},"metadata":{},"sourceType":"module"}