{"ast":null,"code":"'use strict';\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar symbol = Symbol.for('BufferList');\n\nfunction BufferList(buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf);\n  }\n\n  BufferList._init.call(this, buf);\n}\n\nBufferList._init = function _init(buf) {\n  Object.defineProperty(this, symbol, {\n    value: true\n  });\n  this._bufs = [];\n  this.length = 0;\n\n  if (buf) {\n    this.append(buf);\n  }\n};\n\nBufferList.prototype._new = function _new(buf) {\n  return new BufferList(buf);\n};\n\nBufferList.prototype._offset = function _offset(offset) {\n  if (offset === 0) {\n    return [0, 0];\n  }\n\n  var tot = 0;\n\n  for (var i = 0; i < this._bufs.length; i++) {\n    var _t = tot + this._bufs[i].length;\n\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot];\n    }\n\n    tot = _t;\n  }\n};\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  var bufferId = blOffset[0];\n  var offset = blOffset[1];\n\n  for (var i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length;\n  }\n\n  return offset;\n};\n\nBufferList.prototype.get = function get(index) {\n  if (index > this.length || index < 0) {\n    return undefined;\n  }\n\n  var offset = this._offset(index);\n\n  return this._bufs[offset[0]][offset[1]];\n};\n\nBufferList.prototype.slice = function slice(start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length;\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length;\n  }\n\n  return this.copy(null, 0, start, end);\n};\n\nBufferList.prototype.copy = function copy(dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0;\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length;\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0);\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0);\n  }\n\n  var copy = !!dst;\n\n  var off = this._offset(srcStart);\n\n  var len = srcEnd - srcStart;\n  var bytes = len;\n  var bufoff = copy && dstStart || 0;\n  var start = off[1]; // copy/slice everything\n\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1 ? this._bufs[0] : Buffer.concat(this._bufs, this.length);\n    } // copy, need to copy individual buffers\n\n\n    for (var i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff);\n\n      bufoff += this._bufs[i].length;\n    }\n\n    return dst;\n  } // easy, cheap case where it's a subset of one of the buffers\n\n\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes) : this._bufs[off[0]].slice(start, start + bytes);\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len);\n  }\n\n  for (var _i = off[0]; _i < this._bufs.length; _i++) {\n    var l = this._bufs[_i].length - start;\n\n    if (bytes > l) {\n      this._bufs[_i].copy(dst, bufoff, start);\n\n      bufoff += l;\n    } else {\n      this._bufs[_i].copy(dst, bufoff, start, start + bytes);\n\n      bufoff += l;\n      break;\n    }\n\n    bytes -= l;\n\n    if (start) {\n      start = 0;\n    }\n  } // safeguard so that we don't return uninitialized memory\n\n\n  if (dst.length > bufoff) return dst.slice(0, bufoff);\n  return dst;\n};\n\nBufferList.prototype.shallowSlice = function shallowSlice(start, end) {\n  start = start || 0;\n  end = typeof end !== 'number' ? this.length : end;\n\n  if (start < 0) {\n    start += this.length;\n  }\n\n  if (end < 0) {\n    end += this.length;\n  }\n\n  if (start === end) {\n    return this._new();\n  }\n\n  var startOffset = this._offset(start);\n\n  var endOffset = this._offset(end);\n\n  var buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1);\n\n  if (endOffset[1] === 0) {\n    buffers.pop();\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1]);\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1]);\n  }\n\n  return this._new(buffers);\n};\n\nBufferList.prototype.toString = function toString(encoding, start, end) {\n  return this.slice(start, end).toString(encoding);\n};\n\nBufferList.prototype.consume = function consume(bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes); // do nothing if not a positive number\n\n  if (Number.isNaN(bytes) || bytes <= 0) return this;\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length;\n      this.length -= this._bufs[0].length;\n\n      this._bufs.shift();\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes);\n      this.length -= bytes;\n      break;\n    }\n  }\n\n  return this;\n};\n\nBufferList.prototype.duplicate = function duplicate() {\n  var copy = this._new();\n\n  for (var i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i]);\n  }\n\n  return copy;\n};\n\nBufferList.prototype.append = function append(buf) {\n  if (buf == null) {\n    return this;\n  }\n\n  if (buf.buffer) {\n    // append a view of the underlying ArrayBuffer\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength));\n  } else if (Array.isArray(buf)) {\n    for (var i = 0; i < buf.length; i++) {\n      this.append(buf[i]);\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    for (var _i2 = 0; _i2 < buf._bufs.length; _i2++) {\n      this.append(buf._bufs[_i2]);\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString();\n    }\n\n    this._appendBuffer(Buffer.from(buf));\n  }\n\n  return this;\n};\n\nBufferList.prototype._appendBuffer = function appendBuffer(buf) {\n  this._bufs.push(buf);\n\n  this.length += buf.length;\n};\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset;\n    offset = undefined;\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.');\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search]);\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding);\n  } else if (this._isBufferList(search)) {\n    search = search.slice();\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength);\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search);\n  }\n\n  offset = Number(offset || 0);\n\n  if (isNaN(offset)) {\n    offset = 0;\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset;\n  }\n\n  if (offset < 0) {\n    offset = 0;\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset;\n  }\n\n  var blOffset = this._offset(offset);\n\n  var blIndex = blOffset[0]; // index of which internal buffer we're working on\n\n  var buffOffset = blOffset[1]; // offset of the internal buffer we're working on\n  // scan over each buffer\n\n  for (; blIndex < this._bufs.length; blIndex++) {\n    var buff = this._bufs[blIndex];\n\n    while (buffOffset < buff.length) {\n      var availableWindow = buff.length - buffOffset;\n\n      if (availableWindow >= search.length) {\n        var nativeSearchResult = buff.indexOf(search, buffOffset);\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult]);\n        }\n\n        buffOffset = buff.length - search.length + 1; // end of native search window\n      } else {\n        var revOffset = this._reverseOffset([blIndex, buffOffset]);\n\n        if (this._match(revOffset, search)) {\n          return revOffset;\n        }\n\n        buffOffset++;\n      }\n    }\n\n    buffOffset = 0;\n  }\n\n  return -1;\n};\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false;\n  }\n\n  for (var searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n(function () {\n  var methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  };\n\n  for (var m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength);\n        };\n      } else {\n        BufferList.prototype[m] = function () {\n          var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          return this.slice(offset, offset + methods[m])[m](0);\n        };\n      }\n    })(m);\n  }\n})(); // Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\n\n\nBufferList.prototype._isBufferList = function _isBufferList(b) {\n  return b instanceof BufferList || BufferList.isBufferList(b);\n};\n\nBufferList.isBufferList = function isBufferList(b) {\n  return b != null && b[symbol];\n};\n\nmodule.exports = BufferList;","map":{"version":3,"sources":["/home/one/node_modules/bl/BufferList.js"],"names":["require","Buffer","symbol","Symbol","for","BufferList","buf","_init","call","Object","defineProperty","value","_bufs","length","append","prototype","_new","_offset","offset","tot","i","_t","_reverseOffset","blOffset","bufferId","get","index","undefined","slice","start","end","copy","dst","dstStart","srcStart","srcEnd","alloc","off","len","bytes","bufoff","concat","allocUnsafe","l","shallowSlice","startOffset","endOffset","buffers","pop","toString","encoding","consume","Math","trunc","Number","isNaN","shift","duplicate","buffer","_appendBuffer","from","byteOffset","byteLength","Array","isArray","_isBufferList","appendBuffer","push","indexOf","search","TypeError","isBuffer","blIndex","buffOffset","buff","availableWindow","nativeSearchResult","revOffset","_match","searchOffset","methods","readDoubleBE","readDoubleLE","readFloatBE","readFloatLE","readInt32BE","readInt32LE","readUInt32BE","readUInt32LE","readInt16BE","readInt16LE","readUInt16BE","readUInt16LE","readInt8","readUInt8","readIntBE","readIntLE","readUIntBE","readUIntLE","m","b","isBufferList","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst symbol = Symbol.for('BufferList')\n\nfunction BufferList (buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf)\n  }\n\n  BufferList._init.call(this, buf)\n}\n\nBufferList._init = function _init (buf) {\n  Object.defineProperty(this, symbol, { value: true })\n\n  this._bufs = []\n  this.length = 0\n\n  if (buf) {\n    this.append(buf)\n  }\n}\n\nBufferList.prototype._new = function _new (buf) {\n  return new BufferList(buf)\n}\n\nBufferList.prototype._offset = function _offset (offset) {\n  if (offset === 0) {\n    return [0, 0]\n  }\n\n  let tot = 0\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0]\n  let offset = blOffset[1]\n\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n\n  return offset\n}\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n\n  const offset = this._offset(index)\n\n  return this._bufs[offset[0]][offset[1]]\n}\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length\n  }\n\n  return this.copy(null, 0, start, end)\n}\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0)\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0)\n  }\n\n  const copy = !!dst\n  const off = this._offset(srcStart)\n  const len = srcEnd - srcStart\n  let bytes = len\n  let bufoff = (copy && dstStart) || 0\n  let start = off[1]\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n  }\n\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start) {\n      start = 0\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0) {\n    start += this.length\n  }\n\n  if (end < 0) {\n    end += this.length\n  }\n\n  if (start === end) {\n    return this._new()\n  }\n\n  const startOffset = this._offset(start)\n  const endOffset = this._offset(end)\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] === 0) {\n    buffers.pop()\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1])\n  }\n\n  return this._new(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n\n  return this\n}\n\nBufferList.prototype.duplicate = function duplicate () {\n  const copy = this._new()\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i])\n  }\n\n  return copy\n}\n\nBufferList.prototype.append = function append (buf) {\n  if (buf == null) {\n    return this\n  }\n\n  if (buf.buffer) {\n    // append a view of the underlying ArrayBuffer\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\n  } else if (Array.isArray(buf)) {\n    for (let i = 0; i < buf.length; i++) {\n      this.append(buf[i])\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    for (let i = 0; i < buf._bufs.length; i++) {\n      this.append(buf._bufs[i])\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString()\n    }\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (this._isBufferList(search)) {\n    search = search.slice()\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  const blOffset = this._offset(offset)\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex]\n\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset\n\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\n\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n\n        buffOffset++\n      }\n    }\n\n    buffOffset = 0\n  }\n\n  return -1\n}\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false\n    }\n  }\n  return true\n}\n\n;(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  }\n\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferList || BufferList.isBufferList(b)\n}\n\nBufferList.isBufferList = function isBufferList (b) {\n  return b != null && b[symbol]\n}\n\nmodule.exports = BufferList\n"]},"metadata":{},"sourceType":"script"}