{"ast":null,"code":"var _jsxFileName = \"/home/one/NIN/nin_0.3.2/src/components/Mqtt/Connection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection = ({\n  connect,\n  disconnect,\n  connectBtn\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  const record = {\n    host: '127.0.0.1',\n    clientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n    port: 8083,\n    topic: 'from_client/#'\n  };\n\n  const onFinish = values => {\n    const {\n      host,\n      port\n    } = values; // const qos = 0;\n\n    const url = `ws://${host}:${port}/mqtt`;\n    const options = {\n      keepalive: 30,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false\n      },\n      rejectUnauthorized: false\n    };\n    options.clientId = record.clientId;\n    connect(url, options);\n  };\n\n  const handleConnect = () => {\n    form.submit();\n  };\n\n  const handleDisconnect = () => {\n    disconnect();\n  };\n\n  const ConnectionForm = /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"vertical\",\n    name: \"basic\",\n    form: form,\n    initialValues: record,\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 20,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Host\",\n          name: \"host\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Port\",\n          name: \"port\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 20,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: handleConnect,\n          children: connectBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          danger: true,\n          onClick: handleDisconnect,\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Connection\",\n    children: ConnectionForm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Connection, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Connection;\nexport default Connection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/components/Mqtt/Connection.js"],"names":["React","Card","Button","Form","Input","Row","Col","Connection","connect","disconnect","connectBtn","form","useForm","record","host","clientId","Math","random","toString","substr","port","topic","onFinish","values","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","payload","qos","retain","rejectUnauthorized","handleConnect","submit","handleDisconnect","ConnectionForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\n\nconst Connection = ({ connect, disconnect, connectBtn }) => {\n\tconst [form] = Form.useForm();\n\tconst record = {\n\t\thost: '127.0.0.1',\n\t\tclientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n\t\tport: 8083,\n\t\ttopic: 'from_client/#'\n\t};\n\tconst onFinish = (values) => {\n\t\tconst { host, port } = values;\n\t\t// const qos = 0;\n\t\tconst url = `ws://${host}:${port}/mqtt`;\n\t\tconst options = {\n\t\t\tkeepalive: 30,\n\t\t\tprotocolId: 'MQTT',\n\t\t\tprotocolVersion: 4,\n\t\t\tclean: true,\n\t\t\treconnectPeriod: 1000,\n\t\t\tconnectTimeout: 30 * 1000,\n\t\t\twill: {\n\t\t\t\ttopic: 'WillMsg',\n\t\t\t\tpayload: 'Connection Closed abnormally..!',\n\t\t\t\tqos: 0,\n\t\t\t\tretain: false\n\t\t\t},\n\t\t\trejectUnauthorized: false\n\t\t};\n\t\toptions.clientId = record.clientId;\n\t\t\n\t\tconnect(url, options);\n\t};\n\n\tconst handleConnect = () => {\n\t\tform.submit();\n\t};\n\n\tconst handleDisconnect = () => {\n\t\tdisconnect();\n\t};\n\n\tconst ConnectionForm = (\n\t\t<Form\n\t\t\tlayout=\"vertical\"\n\t\t\tname=\"basic\"\n\t\t\tform={form}\n\t\t\tinitialValues={record}\n\t\t\tonFinish={onFinish}\n\t\t>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Host\"\n\t\t\t\t\t\tname=\"host\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Port\"\n\t\t\t\t\t\tname=\"port\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\t\t\t\t\n\t\t\t\t\t<Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>\n\t\t\t\t\t<Button danger onClick={handleDisconnect}>Disconnect</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t)\n\n\treturn (\n\t\t<Card title=\"Connection\" >\n\t\t\t{ConnectionForm}\n\t\t</Card>\n\t);\n}\n\nexport default Connection;\n"]},"metadata":{},"sourceType":"module"}