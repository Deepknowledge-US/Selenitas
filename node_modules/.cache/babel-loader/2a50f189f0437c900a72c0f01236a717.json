{"ast":null,"code":"var _jsxFileName = \"/home/one/NIN/nin_0.3.2/src/components/Hook/Receiver.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, List } from 'antd';\nimport createWindow from '../CreatePanel/CreatePanel';\nimport Chart from '../D3/Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Receiver = ({\n  payload,\n  publish\n}) => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [monitors, setMonitors] = useState([]);\n  useEffect(() => {\n    if (payload.topic) {\n      setMessages(messages => [...messages, payload]);\n\n      if (payload.topic.includes('panel_info')) {\n        console.log('--- start panel_info ---');\n        const jsonObject = JSON.parse(payload.message);\n\n        for (const [k, v] of Object.entries(jsonObject)) {\n          if (k === 'Monitor') {\n            console.log('Creando ventana: ', k);\n          }\n\n          createWindow(v, publish);\n        }\n\n        console.log('--- end ---');\n      } else if (payload.topic.includes('update')) {\n        console.log('--- start update ---');\n        const jsonObject = JSON.parse(payload.message);\n\n        for (const [k, v] of Object.entries(jsonObject)) {\n          console.log('\\nk', k, '\\nv', v);\n        }\n\n        console.log('--- end ---');\n      }\n    }\n  }, [payload, publish]);\n\n  const renderListItem = item => /*#__PURE__*/_jsxDEV(List.Item, {\n    children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n      title: item.topic,\n      description: item.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this); // Datos de prueba. Tenemos una lista de variables a representar.\n  // Cada entrada de esta lista es un map con 2 pares: \n  // id:nombre_variable, values:Lista_de_valores (que a su vez es un map con 2 pares -> time (valor en eje x) y valor de ese instante (valor en eje y)  )\n\n\n  const values_1 = {\n    id: 'a_var_to_track',\n    values: [{\n      time: 0,\n      value: 1\n    }]\n  };\n  const values_2 = {\n    id: 'acum_values',\n    values: [{\n      time: 0,\n      value: 1\n    }]\n  };\n  const initialData = [values_1, values_2];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Receiver\",\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      size: \"small\",\n      bordered: true,\n      dataSource: messages,\n      renderItem: renderListItem,\n      style: {\n        maxHeight: '15em',\n        overflow: 'scroll'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      data: initialData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Receiver, \"mrAzo8ACRrvgsigbl3Q6A9zPXZs=\");\n\n_c = Receiver;\nexport default Receiver;\n\nvar _c;\n\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/components/Hook/Receiver.js"],"names":["React","useEffect","useState","Card","List","createWindow","Chart","Receiver","payload","publish","messages","setMessages","monitors","setMonitors","topic","includes","console","log","jsonObject","JSON","parse","message","k","v","Object","entries","renderListItem","item","values_1","id","values","time","value","values_2","initialData","maxHeight","overflow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, List } from 'antd';\nimport createWindow from '../CreatePanel/CreatePanel'\nimport Chart from '../D3/Chart/Chart'\n\nconst Receiver = ({ payload, publish }) => {\n\tconst [messages, setMessages] = useState([])\n\tconst [monitors, setMonitors] = useState([])\n\n\tuseEffect(() => {\n\t\tif (payload.topic) {\n\t\t\tsetMessages(messages => [...messages, payload]);\n\t\t\tif (payload.topic.includes('panel_info') ) {\n\n\t\t\t\tconsole.log('--- start panel_info ---');\n\t\t\t\tconst jsonObject = JSON.parse(payload.message);\n\n\t\t\t\tfor (const [k,v] of Object.entries(jsonObject) ) {\n\t\t\t\t\tif (k === 'Monitor') {console.log('Creando ventana: ', k)}\n\t\t\t\t\tcreateWindow(v, publish)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('--- end ---');\n\t\t\t}\n\t\t\telse if ( payload.topic.includes('update') ) {\n\n\t\t\t\tconsole.log('--- start update ---');\n\t\t\t\tconst jsonObject = JSON.parse(payload.message);\n\t\t\t\tfor (const [k,v] of Object.entries(jsonObject) ) {\n\t\t\t\t\tconsole.log('\\nk',k,'\\nv',v)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('--- end ---');\n\t\t\t}\n\t\t}\n\t}, [payload, publish]);\n\n\tconst renderListItem = (item) => (\n\t\t<List.Item>\n\t\t\t<List.Item.Meta\n\t\t\t\ttitle={item.topic}\n\t\t\t\tdescription={item.message}\n\t\t\t/>\n\t\t</List.Item>\n\t);\n\n\t// Datos de prueba. Tenemos una lista de variables a representar.\n\t// Cada entrada de esta lista es un map con 2 pares: \n\t// id:nombre_variable, values:Lista_de_valores (que a su vez es un map con 2 pares -> time (valor en eje x) y valor de ese instante (valor en eje y)  )\n\tconst values_1 = {\n\t\tid: 'a_var_to_track',\n\t\tvalues: [\n\t\t\t{time: 0, value:1},\n\t\t]\n\t};\n\n\tconst values_2 = {\n\t\tid: 'acum_values',\n\t\tvalues: [\n\t\t\t{time: 0, value: 1},\n\t\t]\n\t};\n\n\tconst initialData = [\n\t\tvalues_1,\n\t\tvalues_2\n\t];\n\n\treturn (\n\t\t<Card title=\"Receiver\">\n\t\t\t<List\n\t\t\t\tsize=\"small\"\n\t\t\t\tbordered\n\t\t\t\tdataSource={messages}\n\t\t\t\trenderItem={renderListItem}\n\t\t\t\tstyle={{maxHeight:'15em' ,overflow:'scroll'}}\n\t\t\t/>\n\t\t\t<Chart data={initialData} />\n\t\t</Card>\n\t);\n}\n\nexport default Receiver;\n"]},"metadata":{},"sourceType":"module"}