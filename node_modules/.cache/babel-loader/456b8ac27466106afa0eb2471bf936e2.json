{"ast":null,"code":"'use strict';\n\nconst DuplexStream = require('readable-stream').Duplex;\n\nconst inherits = require('inherits');\n\nconst BufferList = require('./BufferList');\n\nfunction BufferListStream(callback) {\n  if (!(this instanceof BufferListStream)) {\n    return new BufferListStream(callback);\n  }\n\n  if (typeof callback === 'function') {\n    this._callback = callback;\n\n    const piper = function piper(err) {\n      if (this._callback) {\n        this._callback(err);\n\n        this._callback = null;\n      }\n    }.bind(this);\n\n    this.on('pipe', function onPipe(src) {\n      src.on('error', piper);\n    });\n    this.on('unpipe', function onUnpipe(src) {\n      src.removeListener('error', piper);\n    });\n    callback = null;\n  }\n\n  BufferList._init.call(this, callback);\n\n  DuplexStream.call(this);\n}\n\ninherits(BufferListStream, DuplexStream);\nObject.assign(BufferListStream.prototype, BufferList.prototype);\n\nBufferListStream.prototype._new = function _new(callback) {\n  return new BufferListStream(callback);\n};\n\nBufferListStream.prototype._write = function _write(buf, encoding, callback) {\n  this._appendBuffer(buf);\n\n  if (typeof callback === 'function') {\n    callback();\n  }\n};\n\nBufferListStream.prototype._read = function _read(size) {\n  if (!this.length) {\n    return this.push(null);\n  }\n\n  size = Math.min(size, this.length);\n  this.push(this.slice(0, size));\n  this.consume(size);\n};\n\nBufferListStream.prototype.end = function end(chunk) {\n  DuplexStream.prototype.end.call(this, chunk);\n\n  if (this._callback) {\n    this._callback(null, this.slice());\n\n    this._callback = null;\n  }\n};\n\nBufferListStream.prototype._destroy = function _destroy(err, cb) {\n  this._bufs.length = 0;\n  this.length = 0;\n  cb(err);\n};\n\nBufferListStream.prototype._isBufferList = function _isBufferList(b) {\n  return b instanceof BufferListStream || b instanceof BufferList || BufferListStream.isBufferList(b);\n};\n\nBufferListStream.isBufferList = BufferList.isBufferList;\nmodule.exports = BufferListStream;\nmodule.exports.BufferListStream = BufferListStream;\nmodule.exports.BufferList = BufferList;","map":{"version":3,"sources":["/home/one/node_modules/bl/bl.js"],"names":["DuplexStream","require","Duplex","inherits","BufferList","BufferListStream","callback","_callback","piper","err","bind","on","onPipe","src","onUnpipe","removeListener","_init","call","Object","assign","prototype","_new","_write","buf","encoding","_appendBuffer","_read","size","length","push","Math","min","slice","consume","end","chunk","_destroy","cb","_bufs","_isBufferList","b","isBufferList","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst DuplexStream = require('readable-stream').Duplex\nconst inherits = require('inherits')\nconst BufferList = require('./BufferList')\n\nfunction BufferListStream (callback) {\n  if (!(this instanceof BufferListStream)) {\n    return new BufferListStream(callback)\n  }\n\n  if (typeof callback === 'function') {\n    this._callback = callback\n\n    const piper = function piper (err) {\n      if (this._callback) {\n        this._callback(err)\n        this._callback = null\n      }\n    }.bind(this)\n\n    this.on('pipe', function onPipe (src) {\n      src.on('error', piper)\n    })\n    this.on('unpipe', function onUnpipe (src) {\n      src.removeListener('error', piper)\n    })\n\n    callback = null\n  }\n\n  BufferList._init.call(this, callback)\n  DuplexStream.call(this)\n}\n\ninherits(BufferListStream, DuplexStream)\nObject.assign(BufferListStream.prototype, BufferList.prototype)\n\nBufferListStream.prototype._new = function _new (callback) {\n  return new BufferListStream(callback)\n}\n\nBufferListStream.prototype._write = function _write (buf, encoding, callback) {\n  this._appendBuffer(buf)\n\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nBufferListStream.prototype._read = function _read (size) {\n  if (!this.length) {\n    return this.push(null)\n  }\n\n  size = Math.min(size, this.length)\n  this.push(this.slice(0, size))\n  this.consume(size)\n}\n\nBufferListStream.prototype.end = function end (chunk) {\n  DuplexStream.prototype.end.call(this, chunk)\n\n  if (this._callback) {\n    this._callback(null, this.slice())\n    this._callback = null\n  }\n}\n\nBufferListStream.prototype._destroy = function _destroy (err, cb) {\n  this._bufs.length = 0\n  this.length = 0\n  cb(err)\n}\n\nBufferListStream.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferListStream || b instanceof BufferList || BufferListStream.isBufferList(b)\n}\n\nBufferListStream.isBufferList = BufferList.isBufferList\n\nmodule.exports = BufferListStream\nmodule.exports.BufferListStream = BufferListStream\nmodule.exports.BufferList = BufferList\n"]},"metadata":{},"sourceType":"script"}