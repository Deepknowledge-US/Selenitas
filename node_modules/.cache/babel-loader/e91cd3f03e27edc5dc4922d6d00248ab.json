{"ast":null,"code":"var _classCallCheck = require(\"/home/one/NIN/nin_0.3.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/one/NIN/nin_0.3.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/one/NIN/nin_0.3.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/one/NIN/nin_0.3.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar writeToStream = require('./writeToStream');\n\nvar EventEmitter = require('events');\n\nfunction generate(packet, opts) {\n  var stream = new Accumulator();\n  writeToStream(packet, stream, opts);\n  return stream.concat();\n}\n\nvar Accumulator = /*#__PURE__*/function (_EventEmitter) {\n  \"use strict\";\n\n  _inherits(Accumulator, _EventEmitter);\n\n  var _super = _createSuper(Accumulator);\n\n  function Accumulator() {\n    var _this;\n\n    _classCallCheck(this, Accumulator);\n\n    _this = _super.call(this);\n    _this._array = new Array(20);\n    _this._i = 0;\n    return _this;\n  }\n\n  _createClass(Accumulator, [{\n    key: \"write\",\n    value: function write(chunk) {\n      this._array[this._i++] = chunk;\n      return true;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var length = 0;\n      var lengths = new Array(this._array.length);\n      var list = this._array;\n      var pos = 0;\n      var i;\n\n      for (i = 0; i < list.length && list[i] !== undefined; i++) {\n        if (typeof list[i] !== 'string') lengths[i] = list[i].length;else lengths[i] = Buffer.byteLength(list[i]);\n        length += lengths[i];\n      }\n\n      var result = Buffer.allocUnsafe(length);\n\n      for (i = 0; i < list.length && list[i] !== undefined; i++) {\n        if (typeof list[i] !== 'string') {\n          list[i].copy(result, pos);\n          pos += lengths[i];\n        } else {\n          result.write(list[i], pos);\n          pos += lengths[i];\n        }\n      }\n\n      return result;\n    }\n  }]);\n\n  return Accumulator;\n}(EventEmitter);\n\nmodule.exports = generate;","map":{"version":3,"sources":["/home/one/node_modules/mqtt-packet/generate.js"],"names":["writeToStream","require","EventEmitter","generate","packet","opts","stream","Accumulator","concat","_array","Array","_i","chunk","length","lengths","list","pos","i","undefined","Buffer","byteLength","result","allocUnsafe","copy","write","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA7B;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAA5B;;AAEA,SAASE,QAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;AAC/B,MAAMC,MAAM,GAAG,IAAIC,WAAJ,EAAf;AACAP,EAAAA,aAAa,CAACI,MAAD,EAASE,MAAT,EAAiBD,IAAjB,CAAb;AACA,SAAOC,MAAM,CAACE,MAAP,EAAP;AACD;;IAEKD,W;;;;;;;AACJ,yBAAe;AAAA;;AAAA;;AACb;AACA,UAAKE,MAAL,GAAc,IAAIC,KAAJ,CAAU,EAAV,CAAd;AACA,UAAKC,EAAL,GAAU,CAAV;AAHa;AAId;;;;WAED,eAAOC,KAAP,EAAc;AACZ,WAAKH,MAAL,CAAY,KAAKE,EAAL,EAAZ,IAAyBC,KAAzB;AACA,aAAO,IAAP;AACD;;;WAED,kBAAU;AACR,UAAIC,MAAM,GAAG,CAAb;AACA,UAAMC,OAAO,GAAG,IAAIJ,KAAJ,CAAU,KAAKD,MAAL,CAAYI,MAAtB,CAAhB;AACA,UAAME,IAAI,GAAG,KAAKN,MAAlB;AACA,UAAIO,GAAG,GAAG,CAAV;AACA,UAAIC,CAAJ;;AAEA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,IAAI,CAACF,MAAT,IAAmBE,IAAI,CAACE,CAAD,CAAJ,KAAYC,SAA3C,EAAsDD,CAAC,EAAvD,EAA2D;AACzD,YAAI,OAAOF,IAAI,CAACE,CAAD,CAAX,KAAmB,QAAvB,EAAiCH,OAAO,CAACG,CAAD,CAAP,GAAaF,IAAI,CAACE,CAAD,CAAJ,CAAQJ,MAArB,CAAjC,KACKC,OAAO,CAACG,CAAD,CAAP,GAAaE,MAAM,CAACC,UAAP,CAAkBL,IAAI,CAACE,CAAD,CAAtB,CAAb;AAELJ,QAAAA,MAAM,IAAIC,OAAO,CAACG,CAAD,CAAjB;AACD;;AAED,UAAMI,MAAM,GAAGF,MAAM,CAACG,WAAP,CAAmBT,MAAnB,CAAf;;AAEA,WAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,IAAI,CAACF,MAAT,IAAmBE,IAAI,CAACE,CAAD,CAAJ,KAAYC,SAA3C,EAAsDD,CAAC,EAAvD,EAA2D;AACzD,YAAI,OAAOF,IAAI,CAACE,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC/BF,UAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQM,IAAR,CAAaF,MAAb,EAAqBL,GAArB;AACAA,UAAAA,GAAG,IAAIF,OAAO,CAACG,CAAD,CAAd;AACD,SAHD,MAGO;AACLI,UAAAA,MAAM,CAACG,KAAP,CAAaT,IAAI,CAACE,CAAD,CAAjB,EAAsBD,GAAtB;AACAA,UAAAA,GAAG,IAAIF,OAAO,CAACG,CAAD,CAAd;AACD;AACF;;AAED,aAAOI,MAAP;AACD;;;;EAvCuBnB,Y;;AA0C1BuB,MAAM,CAACC,OAAP,GAAiBvB,QAAjB","sourcesContent":["const writeToStream = require('./writeToStream')\nconst EventEmitter = require('events')\n\nfunction generate (packet, opts) {\n  const stream = new Accumulator()\n  writeToStream(packet, stream, opts)\n  return stream.concat()\n}\n\nclass Accumulator extends EventEmitter {\n  constructor () {\n    super()\n    this._array = new Array(20)\n    this._i = 0\n  }\n\n  write (chunk) {\n    this._array[this._i++] = chunk\n    return true\n  }\n\n  concat () {\n    let length = 0\n    const lengths = new Array(this._array.length)\n    const list = this._array\n    let pos = 0\n    let i\n\n    for (i = 0; i < list.length && list[i] !== undefined; i++) {\n      if (typeof list[i] !== 'string') lengths[i] = list[i].length\n      else lengths[i] = Buffer.byteLength(list[i])\n\n      length += lengths[i]\n    }\n\n    const result = Buffer.allocUnsafe(length)\n\n    for (i = 0; i < list.length && list[i] !== undefined; i++) {\n      if (typeof list[i] !== 'string') {\n        list[i].copy(result, pos)\n        pos += lengths[i]\n      } else {\n        result.write(list[i], pos)\n        pos += lengths[i]\n      }\n    }\n\n    return result\n  }\n}\n\nmodule.exports = generate\n"]},"metadata":{},"sourceType":"script"}