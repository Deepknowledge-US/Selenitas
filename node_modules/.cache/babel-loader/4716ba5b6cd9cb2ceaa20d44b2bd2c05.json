{"ast":null,"code":"var _jsxFileName = \"/home/one/NIN/nin_0.3.2/src/components/Hook/Receiver.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, List } from 'antd';\nimport createWindow from '../CreatePanel/CreatePanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Receiver = ({\n  payload,\n  publish\n}) => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (payload.topic) {\n      setMessages(messages => [...messages, payload]);\n\n      if (payload.topic.includes('panel_info')) {\n        console.log('--- start ---');\n        const jsonObject = JSON.parse(payload.message);\n\n        for (const [k, v] of Object.entries(jsonObject)) {\n          if (k === 'Monitor') {\n            console.log('Creando ventana: ', k);\n          }\n\n          createWindow(v, publish);\n        }\n\n        console.log('--- end ---');\n      }\n    }\n  }, [payload, publish]); //\n  // const [panels, setPanels] = useState( new Map() )\n  // useEffect( () => {\n  // \tfor (let panel of panels.keys()) {\n  // \t\tconsole.log(panel);\n  // \t}\n  // }, [panels])\n  //\n\n  const renderListItem = item => /*#__PURE__*/_jsxDEV(List.Item, {\n    children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n      title: item.topic,\n      description: item.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Receiver\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      size: \"small\",\n      bordered: true,\n      dataSource: messages,\n      renderItem: renderListItem,\n      style: {\n        maxHeight: '15em',\n        overflow: 'scroll'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this) // <Card />\t\n  ;\n};\n\n_s(Receiver, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = Receiver;\nexport default Receiver;\n\nvar _c;\n\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/components/Hook/Receiver.js"],"names":["React","useEffect","useState","Card","List","createWindow","Receiver","payload","publish","messages","setMessages","topic","includes","console","log","jsonObject","JSON","parse","message","k","v","Object","entries","renderListItem","item","maxHeight","overflow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,MAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA0B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIM,OAAO,CAACI,KAAZ,EAAmB;AAClBD,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcF,OAAd,CAAb,CAAX;;AACA,UAAIA,OAAO,CAACI,KAAR,CAAcC,QAAd,CAAuB,YAAvB,CAAJ,EAA2C;AAE1CC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,cAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACW,OAAnB,CAAnB;;AAEA,aAAK,MAAM,CAACC,CAAD,EAAGC,CAAH,CAAX,IAAoBC,MAAM,CAACC,OAAP,CAAeP,UAAf,CAApB,EAAiD;AAChD,cAAII,CAAC,KAAK,SAAV,EAAqB;AAACN,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCK,CAAjC;AAAoC;;AAC1Dd,UAAAA,YAAY,CAACe,CAAD,EAAIZ,OAAJ,CAAZ;AACA;;AAEDK,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;AACD;AACD,GAhBQ,EAgBN,CAACP,OAAD,EAAUC,OAAV,CAhBM,CAAT,CAH0C,CAqB3C;AACC;AAEA;AACA;AACA;AACA;AACA;AACD;;AAEC,QAAMe,cAAc,GAAIC,IAAD,iBACtB,QAAC,IAAD,CAAM,IAAN;AAAA,2BACC,QAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACC,MAAA,KAAK,EAAEA,IAAI,CAACb,KADb;AAEC,MAAA,WAAW,EAAEa,IAAI,CAACN;AAFnB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;;AASA,sBACC,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,UAAZ;AAAA,2BACC,QAAC,IAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,QAAQ,MAFT;AAGC,MAAA,UAAU,EAAET,QAHb;AAIC,MAAA,UAAU,EAAEc,cAJb;AAKC,MAAA,KAAK,EAAE;AAACE,QAAAA,SAAS,EAAC,MAAX;AAAmBC,QAAAA,QAAQ,EAAC;AAA5B;AALR;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD,CAUC;AAVD;AAYA,CApDD;;GAAMpB,Q;;KAAAA,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, List } from 'antd';\nimport createWindow from '../CreatePanel/CreatePanel'\n\nconst Receiver = ({ payload, publish }) => {\n\tconst [messages, setMessages] = useState([])\n\n\tuseEffect(() => {\n\t\tif (payload.topic) {\n\t\t\tsetMessages(messages => [...messages, payload]);\n\t\t\tif (payload.topic.includes('panel_info') ) {\n\n\t\t\t\tconsole.log('--- start ---')\n\t\t\t\tconst jsonObject = JSON.parse(payload.message)\n\n\t\t\t\tfor (const [k,v] of Object.entries(jsonObject) ) {\n\t\t\t\t\tif (k === 'Monitor') {console.log('Creando ventana: ', k)}\n\t\t\t\t\tcreateWindow(v, publish)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('--- end ---')\n\t\t\t}\n\t\t}\n\t}, [payload, publish])\n\n//\n\t// const [panels, setPanels] = useState( new Map() )\n\n\t// useEffect( () => {\n\t// \tfor (let panel of panels.keys()) {\n\t// \t\tconsole.log(panel);\n\t// \t}\n\t// }, [panels])\n//\n\n\tconst renderListItem = (item) => (\n\t\t<List.Item>\n\t\t\t<List.Item.Meta\n\t\t\t\ttitle={item.topic}\n\t\t\t\tdescription={item.message}\n\t\t\t/>\n\t\t</List.Item>\n\t)\n\n\treturn (\n\t\t<Card title=\"Receiver\">\n\t\t\t<List\n\t\t\t\tsize=\"small\"\n\t\t\t\tbordered\n\t\t\t\tdataSource={messages}\n\t\t\t\trenderItem={renderListItem}\n\t\t\t\tstyle={{maxHeight:'15em' ,overflow:'scroll'}}\n\t\t\t/>\n\t\t</Card>\n\t\t// <Card />\t\n\t);\n}\n\nexport default Receiver;\n"]},"metadata":{},"sourceType":"module"}