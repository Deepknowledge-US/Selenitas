{"ast":null,"code":"/**\n * jsPanel - A JavaScript library to create highly configurable multifunctional floating panels that can also be used as modal, tooltip, hint or contextmenu\n * @version v4.11.4\n * @homepage https://jspanel.de/\n * @license MIT\n * @author Stefan Sträßer - info@jspanel.de\n * @github https://github.com/Flyer53/jsPanel4.git\n */\nexport // eslint-disable-next-line no-redeclare\n// noinspection JSVoidFunctionReturnValueUsed\n// eslint-disable-next-line no-redeclare\nlet jsPanel = {\n  version: '4.11.4',\n  date: '2021-04-10 09:23',\n  ajaxAlwaysCallbacks: [],\n  autopositionSpacing: 4,\n  closeOnEscape: (() => {\n    document.addEventListener('keydown', e => {\n      if (e.key === 'Escape' || e.code === 'Escape' || e.key === 'Esc') {\n        jsPanel.getPanels(function () {\n          return this.classList.contains('jsPanel');\n        }).some(item => {\n          if (item.options.closeOnEscape) {\n            item.close(null, true);\n            return true;\n          }\n\n          return false;\n        });\n      }\n    }, false);\n  })(),\n  defaults: {\n    boxShadow: 3,\n    container: 'window',\n    contentSize: {\n      width: '400px',\n      height: '200px'\n    },\n    // must be object\n    dragit: {\n      cursor: 'move',\n      handles: '.jsPanel-headerlogo, .jsPanel-titlebar, .jsPanel-ftr',\n      // do not use .jsPanel-headerbar\n      opacity: 0.8,\n      disableOnMaximized: true\n    },\n    header: true,\n    headerTitle: 'jsPanel',\n    headerControls: {\n      size: 'md'\n    },\n    // must be object\n    iconfont: undefined,\n    maximizedMargin: 0,\n    minimizeTo: 'default',\n    paneltype: 'standard',\n    position: {\n      my: 'center',\n      at: 'center'\n    },\n    // default position.of MUST NOT be set with new positioning engine\n    resizeit: {\n      handles: 'n, e, s, w, ne, se, sw, nw',\n      minWidth: 128,\n      minHeight: 38\n    },\n    theme: 'default'\n  },\n  defaultAutocloseConfig: {\n    time: '8s',\n    progressbar: true\n  },\n  defaultSnapConfig: {\n    sensitivity: 70,\n    trigger: 'panel',\n    active: 'both'\n  },\n  extensions: {},\n  globalCallbacks: false,\n  icons: {\n    close: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M13.7,11l6.1-6.1c0.4-0.4,0.4-0.9,0-1.3l-1.4-1.4c-0.4-0.4-0.9-0.4-1.3,0L11,8.3L4.9,2.3C4.6,1.9,4,1.9,3.7,2.3L2.3,3.7 C1.9,4,1.9,4.6,2.3,4.9L8.3,11l-6.1,6.1c-0.4,0.4-0.4,0.9,0,1.3l1.4,1.4c0.4,0.4,0.9,0.4,1.3,0l6.1-6.1l6.1,6.1 c0.4,0.4,0.9,0.4,1.3,0l1.4-1.4c0.4-0.4,0.4-0.9,0-1.3L13.7,11z\"/></svg>`,\n    maximize: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M18.3,2H3.7C2.8,2,2,2.9,2,3.9v14.1C2,19.1,2.8,20,3.7,20h14.6c0.9,0,1.7-0.9,1.7-1.9V3.9C20,2.9,19.2,2,18.3,2z M18.3,17.8 c0,0.1-0.1,0.2-0.2,0.2H3.9c-0.1,0-0.2-0.1-0.2-0.2V8.4h14.6V17.8z\"/></svg>`,\n    normalize: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M18.3,2H7.1C6.1,2,5.4,2.8,5.4,3.7v1.7H3.7C2.8,5.4,2,6.1,2,7.1v11.3C2,19.2,2.8,20,3.7,20h11.3c0.9,0,1.7-0.8,1.7-1.7v-1.7 h1.7c0.9,0,1.7-0.8,1.7-1.7V3.7C20,2.8,19.2,2,18.3,2z M14.9,18.3H3.7V11h11.3V18.3z M18.3,14.9h-1.7V7.1c0-0.9-0.8-1.7-1.7-1.7H7.1 V3.7h11.3V14.9z\"/></svg>`,\n    minimize: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M18.9,19.8H3.1c-0.6,0-1.1-0.5-1.1-1.1s0.5-1.1,1.1-1.1h15.8c0.6,0,1.1,0.5,1.1,1.1S19.5,19.8,18.9,19.8z\"/></svg>`,\n    smallify: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M2.1,15.2L2.9,16c0.2,0.2,0.5,0.2,0.7,0L11,8.7l7.4,7.3c0.2,0.2,0.5,0.2,0.7,0l0.8-0.8c0.2-0.2,0.2-0.5,0-0.7L11.3,6 c-0.2-0.2-0.5-0.2-0.7,0l-8.5,8.5C2,14.7,2,15,2.1,15.2z\"/></svg>`\n  },\n  idCounter: 0,\n  isIE: (() => {\n    return navigator.appVersion.match(/Trident/);\n  })(),\n  // pointerdown: 'onpointerdown' in window ? ['pointerdown'] : 'ontouchend' in window ? ['touchstart', 'mousedown'] : ['mousedown'],\n  // pointermove: 'onpointermove' in window ? ['pointermove'] : 'ontouchend' in window ? ['touchmove', 'mousemove'] : ['mousemove'],\n  // pointerup: 'onpointerup' in window ? ['pointerup'] : 'ontouchend' in window ? ['touchend', 'mouseup'] : ['mouseup'],\n  pointerdown: 'ontouchend' in window ? ['touchstart', 'mousedown'] : ['mousedown'],\n  pointermove: 'ontouchend' in window ? ['touchmove', 'mousemove'] : ['mousemove'],\n  pointerup: 'ontouchend' in window ? ['touchend', 'mouseup'] : ['mouseup'],\n  polyfills: (() => {\n    // Polyfills for IE11 only\n    // Object.assign polyfill - https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    if (!Object.assign) {\n      Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (target) {\n          if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert first argument to object');\n          }\n\n          let to = Object(target);\n\n          for (let i = 1; i < arguments.length; i++) {\n            let nextSource = arguments[i];\n\n            if (nextSource === undefined || nextSource === null) {\n              continue;\n            }\n\n            nextSource = Object(nextSource);\n            let keysArray = Object.keys(Object(nextSource));\n\n            for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n              let nextKey = keysArray[nextIndex];\n              let desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n              if (desc !== undefined && desc.enumerable) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n\n          return to;\n        }\n      });\n    } // NodeList.prototype.forEach() polyfill - https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\n\n\n    if (window.NodeList && !NodeList.prototype.forEach) {\n      NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n\n        for (let i = 0; i < this.length; i++) {\n          callback.call(thisArg, this[i], i, this);\n        }\n      };\n    } // .append() polyfill - https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/append\n\n\n    (function (arr) {\n      arr.forEach(function (item) {\n        item.append = item.append || function () {\n          let argArr = Array.prototype.slice.call(arguments),\n              docFrag = document.createDocumentFragment();\n          argArr.forEach(function (argItem) {\n            let isNode = argItem instanceof Node;\n            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n          });\n          this.appendChild(docFrag);\n        };\n      });\n    })([Element.prototype, Document.prototype, DocumentFragment.prototype]); // Element.closest() polyfill - https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n\n\n    if (window.Element && !Element.prototype.closest) {\n      // noinspection JSValidateTypes\n      Element.prototype.closest = function (s) {\n        // noinspection JSUnresolvedVariable\n        let matches = (this.document || this.ownerDocument).querySelectorAll(s),\n            i,\n            el = this;\n\n        do {\n          i = matches.length; // eslint-disable-next-line no-empty\n\n          while (--i >= 0 && matches.item(i) !== el) {}\n        } while (i < 0 && (el = el.parentElement));\n\n        return el;\n      };\n    } // CustomEvent - https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n\n\n    (function () {\n      if (typeof window.CustomEvent === 'function') return false;\n\n      function CustomEvent(event, params) {\n        params = params || {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        };\n        let evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n      } // noinspection JSValidateTypes\n\n\n      CustomEvent.prototype = window.Event.prototype; // noinspection JSValidateTypes\n\n      window.CustomEvent = CustomEvent;\n    })(); // String.prototype.endsWith() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\n    if (!String.prototype.endsWith) {\n      String.prototype.endsWith = function (searchStr, Position) {\n        // This works much better than >= because\n        // it compensates for NaN:\n        if (!(Position < this.length)) Position = this.length;else Position |= 0; // round position\n\n        return this.substr(Position - searchStr.length, searchStr.length) === searchStr;\n      };\n    } // String.prototype.startsWith() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\n    if (!String.prototype.startsWith) {\n      String.prototype.startsWith = function (searchString, position) {\n        return this.substr(position || 0, searchString.length) === searchString;\n      };\n    } // String.prototype.includes() - https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\n    if (!String.prototype.includes) {\n      String.prototype.includes = function (search, start) {\n        if (typeof start !== 'number') {\n          start = 0;\n        }\n\n        if (start + search.length > this.length) {\n          return false;\n        } else {\n          return this.indexOf(search, start) !== -1;\n        }\n      };\n    } // Number.isInteger() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\n    Number.isInteger = Number.isInteger || function (value) {\n      return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n    }; // Array.prototype.includes() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\n\n\n    if (!Array.prototype.includes) {\n      Object.defineProperty(Array.prototype, 'includes', {\n        value: function (searchElement, fromIndex) {\n          if (this == null) {\n            throw new TypeError('\"this\" is null or not defined');\n          } // 1. Let O be ? ToObject(this value).\n\n\n          let o = Object(this); // 2. Let len be ? ToLength(? Get(O, \"length\")).\n\n          let len = o.length >>> 0; // 3. If len is 0, return false.\n\n          if (len === 0) {\n            return false;\n          } // 4. Let n be ? ToInteger(fromIndex).\n          //    (If fromIndex is undefined, this step produces the value 0.)\n\n\n          let n = fromIndex | 0; // 5. If n ≥ 0, then\n          //  a. Let k be n.\n          // 6. Else n < 0,\n          //  a. Let k be len + n.\n          //  b. If k < 0, let k be 0.\n\n          let k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n          function sameValueZero(x, y) {\n            return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n          } // 7. Repeat, while k < len\n\n\n          while (k < len) {\n            // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n            // b. If SameValueZero(searchElement, elementK) is true, return true.\n            if (sameValueZero(o[k], searchElement)) {\n              return true;\n            } // c. Increase k by 1.\n\n\n            k++;\n          } // 8. Return false\n\n\n          return false;\n        }\n      });\n    }\n  })(),\n  themes: ['default', 'primary', 'secondary', 'info', 'success', 'warning', 'danger', 'light', 'dark'],\n  ziBase: 100,\n  colorFilledLight: 0.81,\n  colorFilledDark: 0.08,\n  colorFilled: 0,\n  colorBrightnessThreshold: 0.55,\n  colorNames: {\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '0ff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000',\n    blanchedalmond: 'ffebcd',\n    blue: '00f',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '0ff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgrey: 'a9a9a9',\n    darkgreen: '006400',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkslategrey: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dimgrey: '696969',\n    dodgerblue: '1e90ff',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'f0f',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    grey: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgray: 'd3d3d3',\n    lightgrey: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslategray: '789',\n    lightslategrey: '789',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '0f0',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'f0f',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370d8',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'd87093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    rebeccapurple: '639',\n    red: 'f00',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    slategrey: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    wheat: 'f5deb3',\n    white: 'fff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ff0',\n    yellowgreen: '9acd32',\n\n    /* Material Design Colors https://material.io/design/color/the-color-system.html#tools-for-picking-colors */\n    grey50: 'fafafa',\n    grey100: 'f5f5f5',\n    grey200: 'eee',\n    grey300: 'e0e0e0',\n    grey400: 'bdbdbd',\n    grey500: '9e9e9e',\n    grey600: '757575',\n    grey700: '616161',\n    grey800: '424242',\n    grey900: '212121',\n    gray50: 'fafafa',\n    gray100: 'f5f5f5',\n    gray200: 'eee',\n    gray300: 'e0e0e0',\n    gray400: 'bdbdbd',\n    gray500: '9e9e9e',\n    gray600: '757575',\n    gray700: '616161',\n    gray800: '424242',\n    gray900: '212121',\n    bluegrey50: 'eceff1',\n    bluegrey100: 'CFD8DC',\n    bluegrey200: 'B0BEC5',\n    bluegrey300: '90A4AE',\n    bluegrey400: '78909C',\n    bluegrey500: '607D8B',\n    bluegrey600: '546E7A',\n    bluegrey700: '455A64',\n    bluegrey800: '37474F',\n    bluegrey900: '263238',\n    bluegray50: 'eceff1',\n    bluegray100: 'CFD8DC',\n    bluegray200: 'B0BEC5',\n    bluegray300: '90A4AE',\n    bluegray400: '78909C',\n    bluegray500: '607D8B',\n    bluegray600: '546E7A',\n    bluegray700: '455A64',\n    bluegray800: '37474F',\n    bluegray900: '263238',\n    red50: 'FFEBEE',\n    red100: 'FFCDD2',\n    red200: 'EF9A9A',\n    red300: 'E57373',\n    red400: 'EF5350',\n    red500: 'F44336',\n    red600: 'E53935',\n    red700: 'D32F2F',\n    red800: 'C62828',\n    red900: 'B71C1C',\n    reda100: 'FF8A80',\n    reda200: 'FF5252',\n    reda400: 'FF1744',\n    reda700: 'D50000',\n    pink50: 'FCE4EC',\n    pink100: 'F8BBD0',\n    pink200: 'F48FB1',\n    pink300: 'F06292',\n    pink400: 'EC407A',\n    pink500: 'E91E63',\n    pink600: 'D81B60',\n    pink700: 'C2185B',\n    pink800: 'AD1457',\n    pink900: '880E4F',\n    pinka100: 'FF80AB',\n    pinka200: 'FF4081',\n    pinka400: 'F50057',\n    pinka700: 'C51162',\n    purple50: 'F3E5F5',\n    purple100: 'E1BEE7',\n    purple200: 'CE93D8',\n    purple300: 'BA68C8',\n    purple400: 'AB47BC',\n    purple500: '9C27B0',\n    purple600: '8E24AA',\n    purple700: '7B1FA2',\n    purple800: '6A1B9A',\n    purple900: '4A148C',\n    purplea100: 'EA80FC',\n    purplea200: 'E040FB',\n    purplea400: 'D500F9',\n    purplea700: 'AA00FF',\n    deeppurple50: 'EDE7F6',\n    deeppurple100: 'D1C4E9',\n    deeppurple200: 'B39DDB',\n    deeppurple300: '9575CD',\n    deeppurple400: '7E57C2',\n    deeppurple500: '673AB7',\n    deeppurple600: '5E35B1',\n    deeppurple700: '512DA8',\n    deeppurple800: '4527A0',\n    deeppurple900: '311B92',\n    deeppurplea100: 'B388FF',\n    deeppurplea200: '7C4DFF',\n    deeppurplea400: '651FFF',\n    deeppurplea700: '6200EA',\n    indigo50: 'E8EAF6',\n    indigo100: 'C5CAE9',\n    indigo200: '9FA8DA',\n    indigo300: '7986CB',\n    indigo400: '5C6BC0',\n    indigo500: '3F51B5',\n    indigo600: '3949AB',\n    indigo700: '303F9F',\n    indigo800: '283593',\n    indigo900: '1A237E',\n    indigoa100: '8C9EFF',\n    indigoa200: '536DFE',\n    indigoa400: '3D5AFE',\n    indigoa700: '304FFE',\n    blue50: 'E3F2FD',\n    blue100: 'BBDEFB',\n    blue200: '90CAF9',\n    blue300: '64B5F6',\n    blue400: '42A5F5',\n    blue500: '2196F3',\n    blue600: '1E88E5',\n    blue700: '1976D2',\n    blue800: '1565C0',\n    blue900: '0D47A1',\n    bluea100: '82B1FF',\n    bluea200: '448AFF',\n    bluea400: '2979FF',\n    bluea700: '2962FF',\n    lightblue50: 'E1F5FE',\n    lightblue100: 'B3E5FC',\n    lightblue200: '81D4FA',\n    lightblue300: '4FC3F7',\n    lightblue400: '29B6F6',\n    lightblue500: '03A9F4',\n    lightblue600: '039BE5',\n    lightblue700: '0288D1',\n    lightblue800: '0277BD',\n    lightblue900: '01579B',\n    lightbluea100: '80D8FF',\n    lightbluea200: '40C4FF',\n    lightbluea400: '00B0FF',\n    lightbluea700: '0091EA',\n    cyan50: 'E0F7FA',\n    cyan100: 'B2EBF2',\n    cyan200: '80DEEA',\n    cyan300: '4DD0E1',\n    cyan400: '26C6DA',\n    cyan500: '00BCD4',\n    cyan600: '00ACC1',\n    cyan700: '0097A7',\n    cyan800: '00838F',\n    cyan900: '006064',\n    cyana100: '84FFFF',\n    cyana200: '18FFFF',\n    cyana400: '00E5FF',\n    cyana700: '00B8D4',\n    teal50: 'E0F2F1',\n    teal100: 'B2DFDB',\n    teal200: '80CBC4',\n    teal300: '4DB6AC',\n    teal400: '26A69A',\n    teal500: '009688',\n    teal600: '00897B',\n    teal700: '00796B',\n    teal800: '00695C',\n    teal900: '004D40',\n    teala100: 'A7FFEB',\n    teala200: '64FFDA',\n    teala400: '1DE9B6',\n    teala700: '00BFA5',\n    green50: 'E8F5E9',\n    green100: 'C8E6C9',\n    green200: 'A5D6A7',\n    green300: '81C784',\n    green400: '66BB6A',\n    green500: '4CAF50',\n    green600: '43A047',\n    green700: '388E3C',\n    green800: '2E7D32',\n    green900: '1B5E20',\n    greena100: 'B9F6CA',\n    greena200: '69F0AE',\n    greena400: '00E676',\n    greena700: '00C853',\n    lightgreen50: 'F1F8E9',\n    lightgreen100: 'DCEDC8',\n    lightgreen200: 'C5E1A5',\n    lightgreen300: 'AED581',\n    lightgreen400: '9CCC65',\n    lightgreen500: '8BC34A',\n    lightgreen600: '7CB342',\n    lightgreen700: '689F38',\n    lightgreen800: '558B2F',\n    lightgreen900: '33691E',\n    lightgreena100: 'CCFF90',\n    lightgreena200: 'B2FF59',\n    lightgreena400: '76FF03',\n    lightgreena700: '64DD17',\n    lime50: 'F9FBE7',\n    lime100: 'F0F4C3',\n    lime200: 'E6EE9C',\n    lime300: 'DCE775',\n    lime400: 'D4E157',\n    lime500: 'CDDC39',\n    lime600: 'C0CA33',\n    lime700: 'AFB42B',\n    lime800: '9E9D24',\n    lime900: '827717',\n    limea100: 'F4FF81',\n    limea200: 'EEFF41',\n    limea400: 'C6FF00',\n    limea700: 'AEEA00',\n    yellow50: 'FFFDE7',\n    yellow100: 'FFF9C4',\n    yellow200: 'FFF59D',\n    yellow300: 'FFF176',\n    yellow400: 'FFEE58',\n    yellow500: 'FFEB3B',\n    yellow600: 'FDD835',\n    yellow700: 'FBC02D',\n    yellow800: 'F9A825',\n    yellow900: 'F57F17',\n    yellowa100: 'FFFF8D',\n    yellowa200: 'FFFF00',\n    yellowa400: 'FFEA00',\n    yellowa700: 'FFD600',\n    amber50: 'FFF8E1',\n    amber100: 'FFECB3',\n    amber200: 'FFE082',\n    amber300: 'FFD54F',\n    amber400: 'FFCA28',\n    amber500: 'FFC107',\n    amber600: 'FFB300',\n    amber700: 'FFA000',\n    amber800: 'FF8F00',\n    amber900: 'FF6F00',\n    ambera100: 'FFE57F',\n    ambera200: 'FFD740',\n    ambera400: 'FFC400',\n    ambera700: 'FFAB00',\n    orange50: 'FFF3E0',\n    orange100: 'FFE0B2',\n    orange200: 'FFCC80',\n    orange300: 'FFB74D',\n    orange400: 'FFA726',\n    orange500: 'FF9800',\n    orange600: 'FB8C00',\n    orange700: 'F57C00',\n    orange800: 'EF6C00',\n    orange900: 'E65100',\n    orangea100: 'FFD180',\n    orangea200: 'FFAB40',\n    orangea400: 'FF9100',\n    orangea700: 'FF6D00',\n    deeporange50: 'FBE9E7',\n    deeporange100: 'FFCCBC',\n    deeporange200: 'FFAB91',\n    deeporange300: 'FF8A65',\n    deeporange400: 'FF7043',\n    deeporange500: 'FF5722',\n    deeporange600: 'F4511E',\n    deeporange700: 'E64A19',\n    deeporange800: 'D84315',\n    deeporange900: 'BF360C',\n    deeporangea100: 'FF9E80',\n    deeporangea200: 'FF6E40',\n    deeporangea400: 'FF3D00',\n    deeporangea700: 'DD2C00',\n    brown50: 'EFEBE9',\n    brown100: 'D7CCC8',\n    brown200: 'BCAAA4',\n    brown300: 'A1887F',\n    brown400: '8D6E63',\n    brown500: '795548',\n    brown600: '6D4C41',\n    brown700: '5D4037',\n    brown800: '4E342E',\n    brown900: '3E2723'\n  },\n  errorReporting: 1,\n  modifier: false,\n  helper: (() => {\n    document.addEventListener('keydown', e => {\n      jsPanel.modifier = e;\n    });\n    document.addEventListener('keyup', () => {\n      jsPanel.modifier = false;\n    });\n  })(),\n\n  // color methods ---------------\n  color(val) {\n    let color = val.toLowerCase(),\n        r,\n        g,\n        b,\n        h,\n        s,\n        l,\n        match,\n        channels,\n        hsl,\n        result = {};\n    const hexPattern = /^#?([0-9a-f]{3}|[0-9a-f]{6})$/gi,\n          // matches \"#123\" or \"#f05a78\" with or without \"#\"\n    RGBAPattern = /^rgba?\\(([0-9]{1,3}),([0-9]{1,3}),([0-9]{1,3}),?(0|1|0\\.[0-9]{1,2}|\\.[0-9]{1,2})?\\)$/gi,\n          // matches rgb/rgba color values, whitespace allowed\n    HSLAPattern = /^hsla?\\(([0-9]{1,3}),([0-9]{1,3}%),([0-9]{1,3}%),?(0|1|0\\.[0-9]{1,2}|\\.[0-9]{1,2})?\\)$/gi,\n          namedColors = this.colorNames; // change named color to corresponding hex value\n\n    if (namedColors[color]) {\n      color = namedColors[color];\n    } // check val for hex color\n\n\n    if (color.match(hexPattern) !== null) {\n      // '#' remove\n      color = color.replace('#', ''); // color has either 3 or 6 characters\n\n      if (color.length % 2 === 1) {\n        // color has 3 char -> convert to 6 char\n        // r = color.substr(0,1).repeat(2);\n        // g = color.substr(1,1).repeat(2); // String.prototype.repeat() doesn't work in IE11\n        // b = color.substr(2,1).repeat(2);\n        r = String(color.substr(0, 1)) + color.substr(0, 1);\n        g = String(color.substr(1, 1)) + color.substr(1, 1);\n        b = String(color.substr(2, 1)) + color.substr(2, 1);\n        result.rgb = {\n          r: parseInt(r, 16),\n          g: parseInt(g, 16),\n          b: parseInt(b, 16)\n        };\n        result.hex = `#${r}${g}${b}`;\n      } else {\n        // color has 6 char\n        result.rgb = {\n          r: parseInt(color.substr(0, 2), 16),\n          g: parseInt(color.substr(2, 2), 16),\n          b: parseInt(color.substr(4, 2), 16)\n        };\n        result.hex = `#${color}`;\n      }\n\n      hsl = this.rgbToHsl(result.rgb.r, result.rgb.g, result.rgb.b);\n      result.hsl = hsl;\n      result.rgb.css = `rgb(${result.rgb.r},${result.rgb.g},${result.rgb.b})`;\n    } // check val for rgb/rgba color\n    else if (color.match(RGBAPattern)) {\n        match = RGBAPattern.exec(color);\n        result.rgb = {\n          css: color,\n          r: match[1],\n          g: match[2],\n          b: match[3]\n        };\n        result.hex = this.rgbToHex(match[1], match[2], match[3]);\n        hsl = this.rgbToHsl(match[1], match[2], match[3]);\n        result.hsl = hsl;\n      } // check val for hsl/hsla color\n      else if (color.match(HSLAPattern)) {\n          match = HSLAPattern.exec(color);\n          h = match[1] / 360;\n          s = match[2].substr(0, match[2].length - 1) / 100;\n          l = match[3].substr(0, match[3].length - 1) / 100;\n          channels = this.hslToRgb(h, s, l);\n          result.rgb = {\n            css: `rgb(${channels[0]},${channels[1]},${channels[2]})`,\n            r: channels[0],\n            g: channels[1],\n            b: channels[2]\n          };\n          result.hex = this.rgbToHex(result.rgb.r, result.rgb.g, result.rgb.b);\n          result.hsl = {\n            css: `hsl(${match[1]},${match[2]},${match[3]})`,\n            h: match[1],\n            s: match[2],\n            l: match[3]\n          };\n        } // or return #f5f5f5\n        else {\n            result.hex = '#f5f5f5';\n            result.rgb = {\n              css: 'rgb(245,245,245)',\n              r: 245,\n              g: 245,\n              b: 245\n            };\n            result.hsl = {\n              css: 'hsl(0,0%,96%)',\n              h: 0,\n              s: '0%',\n              l: '96%'\n            };\n          }\n\n    return result;\n  },\n\n  calcColors(primaryColor) {\n    const threshold = this.colorBrightnessThreshold,\n          primeColor = this.color(primaryColor),\n          filledlightColor = this.lighten(primaryColor, this.colorFilledLight),\n          filledColor = this.darken(primaryColor, this.colorFilled),\n          fontColorForPrimary = this.perceivedBrightness(primaryColor) <= threshold ? '#ffffff' : '#000000',\n          fontColorFilledlight = this.perceivedBrightness(filledlightColor) <= threshold ? '#ffffff' : '#000000',\n          fontColorFilled = this.perceivedBrightness(filledColor) <= threshold ? '#ffffff' : '#000000',\n          filleddarkColor = this.lighten(primaryColor, this.colorFilledDark),\n          fontColorFilleddark = this.perceivedBrightness(filleddarkColor) <= threshold ? '#ffffff' : '#000000';\n    return [primeColor.hsl.css, filledlightColor, filledColor, fontColorForPrimary, fontColorFilledlight, fontColorFilled, filleddarkColor, fontColorFilleddark];\n  },\n\n  darken(val, amount) {\n    // amount is value between 0 and 1\n    const hsl = this.color(val).hsl,\n          l = parseFloat(hsl.l),\n          lnew = Math.round(l - l * amount) + '%';\n    return `hsl(${hsl.h},${hsl.s},${lnew})`;\n  },\n\n  lighten(val, amount) {\n    // amount is value between 0 and 1\n    const hsl = this.color(val).hsl,\n          l = parseFloat(hsl.l),\n          lnew = Math.round(l + (100 - l) * amount) + '%';\n    return `hsl(${hsl.h},${hsl.s},${lnew})`;\n  },\n\n  hslToRgb(h, s, l) {\n    // h, s and l must be values between 0 and 1\n    let r, g, b;\n\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      let hue2rgb = (p, q, t) => {\n        if (t < 0) {\n          t += 1;\n        }\n\n        if (t > 1) {\n          t -= 1;\n        }\n\n        if (t < 1 / 6) {\n          return p + (q - p) * 6 * t;\n        }\n\n        if (t < 1 / 2) {\n          return q;\n        }\n\n        if (t < 2 / 3) {\n          return p + (q - p) * (2 / 3 - t) * 6;\n        }\n\n        return p;\n      };\n\n      let q = l < 0.5 ? l * (1 + s) : l + s - l * s,\n          p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  },\n\n  rgbToHsl(r, g, b) {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (max === min) {\n      h = s = 0; // achromatic\n    } else {\n      let d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    } //return [ h, s, l ];\n\n\n    h = Math.round(h * 360);\n    s = Math.round(s * 100) + '%';\n    l = Math.round(l * 100) + '%';\n    return {\n      css: 'hsl(' + h + ',' + s + ',' + l + ')',\n      h: h,\n      s: s,\n      l: l\n    };\n  },\n\n  rgbToHex(r, g, b) {\n    let red = Number(r).toString(16),\n        green = Number(g).toString(16),\n        blue = Number(b).toString(16);\n\n    if (red.length === 1) {\n      red = `0${red}`;\n    }\n\n    if (green.length === 1) {\n      green = `0${green}`;\n    }\n\n    if (blue.length === 1) {\n      blue = `0${blue}`;\n    }\n\n    return `#${red}${green}${blue}`;\n  },\n\n  perceivedBrightness(val) {\n    const rgb = this.color(val).rgb; // return value is in the range 0 - 1 and input rgb values must also be in the range 0 - 1\n    // https://www.w3.org/TR/WCAG20-TECHS/G18.html\n\n    return rgb.r / 255 * 0.2126 + rgb.g / 255 * 0.7152 + rgb.b / 255 * 0.0722;\n  },\n\n  // positioning methods ---------------\n  pOposition(positionshorthand) {\n    let result = {}; // remove leading and trailing whitespace and split position shorthand string into array\n\n    let pos = positionshorthand.trim().split(/\\s+/); // find autoposition value and assign to result, must be the first item to find and remove\n\n    let auto = pos.filter(item => {\n      return item.match(/^(down|right|up|left)$/i);\n    });\n\n    if (auto.length) {\n      result.autoposition = auto[0];\n      pos.splice(pos.indexOf(auto[0]), 1);\n    } // find my and at values and assign to result\n\n\n    let my_at = pos.filter(item => {\n      return item.match(/^(left-|right-)(top|center|bottom)$|(^center-)(top|bottom)$|(^center$)/i);\n    });\n\n    if (my_at.length) {\n      result.my = my_at[0];\n      result.at = my_at[1] || my_at[0];\n      pos.splice(pos.indexOf(my_at[0]), 1);\n\n      if (my_at[1]) {\n        pos.splice(pos.indexOf(my_at[1]), 1);\n      }\n    } else {\n      result.my = 'center';\n      result.at = 'center';\n    } // find offset and assign to result\n\n\n    let offsets = pos.filter(item => {\n      return item.match(/^[+-]?\\d*\\.?\\d+[a-z%]*$/i);\n    });\n\n    if (offsets.length) {\n      result.offsetX = offsets[0].match(/^[+-]?\\d*\\.?\\d+$/i) ? `${offsets[0]}px` : offsets[0];\n\n      if (offsets[1]) {\n        result.offsetY = offsets[1].match(/^[+-]?\\d*\\.?\\d+$/i) ? `${offsets[1]}px` : offsets[1];\n      } else {\n        // noinspection JSSuspiciousNameCombination\n        result.offsetY = result.offsetX;\n      }\n\n      pos.splice(pos.indexOf(offsets[0]), 1);\n\n      if (offsets[1]) {\n        pos.splice(pos.indexOf(offsets[1]), 1);\n      }\n    } // last to find and assign is of value and must be all the rest (if there is a rest)\n\n\n    if (pos.length) {\n      result.of = pos.join(' ');\n    }\n\n    return result;\n  },\n\n  position(panel, position) {\n    // @panel:     selector string | Element | jQuery object\n    //                - usually the jsPanel to position\n    // @position:  object\n    //                - positioning configuration\n    //                - if panel config uses a position shorthand string it must be converted to object before it's passed to this function\n    // if @position is not set return panel\n    if (!position) {\n      panel.style.opacity = 1;\n      return panel;\n    } // merge position defaults with @position\n\n\n    if (typeof position === 'string') {\n      position = Object.assign({}, this.defaults.position, this.pOposition(position));\n    } else {\n      position = Object.assign({}, this.defaults.position, position);\n    } // process parameter functions for 'my', 'at', 'of'\n    // 'offsetX', 'offsetY', 'minLeft', 'maxLeft', 'minTop', 'maxTop' are processed when params are applied\n\n\n    ['my', 'at', 'of'].forEach(item => {\n      if (typeof position[item] === 'function') {\n        position[item] = position[item].call(panel, panel);\n      }\n    }); // panel uses option.container: 'window' position is always fixed\n\n    if (panel.options.container === 'window') {\n      panel.style.position = 'fixed';\n    } // normalize param @panel to ensure it's an Element object\n\n\n    if (typeof panel === 'string') {\n      panel = document.querySelector(panel);\n    } else if (Object.getPrototypeOf(panel).jquery) {\n      panel = panel[0];\n    } // else panel is assumed to be element object\n    // container is either 'window' or the panel's parent element\n\n\n    const container = panel.options.container === 'window' ? 'window' : panel.parentElement; // get base values in order to calculate position deltas\n    // since getBoundingClientRect() calculates values relative to the viewport the parentElement of panel/elmtToPositionAgainst is irrelevant\n\n    const panelRect = panel.getBoundingClientRect(),\n          containerDomRect = panel.parentElement.getBoundingClientRect(),\n          containerRect = container === 'window' ? {\n      left: 0,\n      top: 0,\n      width: document.documentElement.clientWidth,\n      height: window.innerHeight\n    } // fake window.getBoundingClientRect() return value\n    : //: panel.parentElement.getBoundingClientRect(); // using 'container' instead of 'panel.parentElement' produces an error\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    // due to the infos from above link IE and EDGE (old version not based on Chromium) report an error in strict mode -> line of code above replaced with line below\n    {\n      width: containerDomRect.width,\n      height: containerDomRect.height,\n      left: containerDomRect.left,\n      top: containerDomRect.top\n    }; // calculate scale factors, needed for correct positioning if container is scaled - transform: scale()\n    // window is never scaled --> scale factors default to 1\n\n    const scaleFactor = container === 'window' ? {\n      x: 1,\n      y: 1\n    } : {\n      x: containerRect.width / container.offsetWidth,\n      y: containerRect.height / container.offsetHeight\n    }; // get and apply border width values of container - needed for positioning corrections due to positioning with %-values\n\n    const containerStyle = container === 'window' ? {\n      borderTopWidth: '0px',\n      borderRightWidth: '0px',\n      borderBottomWidth: '0px',\n      borderLeftWidth: '0px'\n    } // fake getComputedStyle(window) return value\n    : window.getComputedStyle(container);\n    containerRect.width -= (parseFloat(containerStyle.borderLeftWidth) + parseFloat(containerStyle.borderRightWidth)) * scaleFactor.x;\n    containerRect.height -= (parseFloat(containerStyle.borderTopWidth) + parseFloat(containerStyle.borderBottomWidth)) * scaleFactor.y; // calculate @position.of rect if @position.of is set\n\n    let positionOfRect;\n\n    if (!position.of) {\n      positionOfRect = containerRect;\n    } else {\n      if (typeof position.of === 'string') {\n        positionOfRect = position.of === 'window' ? {\n          borderTopWidth: '0px',\n          borderRightWidth: '0px',\n          borderBottomWidth: '0px',\n          borderLeftWidth: '0px'\n        } // fake getComputedStyle(window) return value\n        : document.querySelector(position.of).getBoundingClientRect();\n      } else if (Object.getPrototypeOf(position.of).jquery) {\n        positionOfRect = position.of[0].getBoundingClientRect();\n      } else {\n        positionOfRect = position.of.getBoundingClientRect();\n      }\n    } // check for scrollbar width values\n\n\n    let scrollbarwidthsWindow = this.getScrollbarWidth(document.body),\n        scrollbarwidthsContainer = this.getScrollbarWidth(panel.parentElement); // calc css left for @panel in regard of @position.my and @position.at\n\n    let left = '0px';\n\n    if (position.my.startsWith('left-')) {\n      if (position.at.startsWith('left-')) {\n        if (position.of) {\n          left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + 'px';\n        } else {\n          left = '0px';\n        }\n      } else if (position.at.startsWith('center')) {\n        if (position.of) {\n          left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + positionOfRect.width / 2 + 'px';\n        } else {\n          left = containerRect.width / 2 + 'px';\n        }\n      } else if (position.at.startsWith('right-')) {\n        if (position.of) {\n          left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + positionOfRect.width + 'px';\n        } else {\n          left = containerRect.width + 'px';\n        }\n      }\n    } else if (position.my.startsWith('center')) {\n      if (position.at.startsWith('left-')) {\n        if (position.of) {\n          left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) - panelRect.width / 2 + 'px';\n        } else {\n          left = -panelRect.width / 2 + 'px';\n        }\n      } else if (position.at.startsWith('center')) {\n        if (position.of) {\n          left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) - (panelRect.width - positionOfRect.width) / 2 + 'px';\n        } else {\n          left = containerRect.width / 2 - panelRect.width / 2 + 'px';\n        }\n      } else if (position.at.startsWith('right-')) {\n        if (position.of) {\n          left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + (positionOfRect.width - panelRect.width / 2) + 'px';\n        } else {\n          left = containerRect.width - panelRect.width / 2 + 'px';\n        }\n      }\n    } else if (position.my.startsWith('right-')) {\n      if (position.at.startsWith('left-')) {\n        if (position.of) {\n          left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) - panelRect.width + 'px';\n        } else {\n          left = -panelRect.width + 'px';\n        }\n      } else if (position.at.startsWith('center')) {\n        if (position.of) {\n          left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) - panelRect.width + positionOfRect.width / 2 + 'px';\n        } else {\n          left = containerRect.width / 2 - panelRect.width + 'px';\n        }\n      } else if (position.at.startsWith('right-')) {\n        if (position.of) {\n          left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + positionOfRect.width - panelRect.width + 'px';\n        } else {\n          left = containerRect.width - panelRect.width + 'px';\n        } // correction for vertical scrollbar only needed for panels using my: 'right-*' together with at: 'right-*'\n\n\n        if (container !== 'window') {\n          left = parseFloat(left) - scrollbarwidthsContainer.y + 'px';\n        }\n      }\n    } // calc css top for @panel in regard of @position.my and @position.at\n\n\n    let top = '0px';\n\n    if (position.my.endsWith('-top')) {\n      if (position.at.endsWith('-top')) {\n        if (position.of) {\n          top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) + 'px';\n        } else {\n          top = '0px';\n        }\n      } else if (position.at.endsWith('center')) {\n        if (position.of) {\n          top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) + positionOfRect.height / 2 + 'px';\n        } else {\n          top = containerRect.height / 2 + 'px';\n        }\n      } else if (position.at.endsWith('-bottom')) {\n        if (position.of) {\n          top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) + positionOfRect.height + 'px';\n        } else {\n          top = containerRect.height + 'px';\n        }\n      }\n    } else if (position.my.endsWith('center')) {\n      if (position.at.endsWith('-top')) {\n        if (position.of) {\n          top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height / 2 + 'px';\n        } else {\n          top = -panelRect.height / 2 + 'px';\n        }\n      } else if (position.at.endsWith('center')) {\n        if (position.of) {\n          top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height / 2 + positionOfRect.height / 2 + 'px';\n        } else {\n          top = containerRect.height / 2 - panelRect.height / 2 + 'px';\n        }\n      } else if (position.at.endsWith('-bottom')) {\n        if (position.of) {\n          top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height / 2 + positionOfRect.height + 'px';\n        } else {\n          top = containerRect.height - panelRect.height / 2 + 'px';\n        }\n      }\n    } else if (position.my.endsWith('-bottom')) {\n      if (position.at.endsWith('-top')) {\n        if (position.of) {\n          top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height + 'px';\n        } else {\n          top = -panelRect.height + 'px';\n        }\n      } else if (position.at.endsWith('center')) {\n        if (position.of) {\n          top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height + positionOfRect.height / 2 + 'px';\n        } else {\n          top = containerRect.height / 2 - panelRect.height + 'px';\n        }\n      } else if (position.at.endsWith('-bottom')) {\n        if (position.of) {\n          top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height + positionOfRect.height + 'px';\n        } else {\n          top = containerRect.height - panelRect.height + 'px';\n        } // correction for horizontal scrollbar only needed for panels using my: '*-bottom' together with at: '*-bottom'\n\n\n        if (container !== 'window') {\n          top = parseFloat(top) - scrollbarwidthsContainer.x + 'px';\n        } else {\n          top = parseFloat(top) - scrollbarwidthsWindow.x + 'px';\n        }\n      }\n    }\n\n    panel.style.left = scaleFactor.x === 1 ? left : parseFloat(left) / scaleFactor.x + 'px';\n    panel.style.top = scaleFactor.y === 1 ? top : parseFloat(top) / scaleFactor.y + 'px'; // at this point panels are correctly positioned according to the my/at values\n\n    let panelStyle = getComputedStyle(panel); // eslint-disable-next-line no-unused-vars\n\n    let pos = {\n      left: panelStyle.left,\n      top: panelStyle.top\n    }; //console.log('pos after applying my/at/of:', pos);\n    // apply autoposition only if ...\n\n    if (position.autoposition && position.my === position.at && ['left-top', 'center-top', 'right-top', 'left-bottom', 'center-bottom', 'right-bottom'].indexOf(position.my) >= 0) {\n      pos = this.applyPositionAutopos(panel, pos, position); //console.log('let pos after applying autoposition:', pos);\n    } // apply position.offsetX and position.offsetY\n\n\n    if (position.offsetX || position.offsetY) {\n      pos = this.applyPositionOffset(panel, pos, position); //console.log('pos after applying offsets:', pos);\n    } // calculate and apply position.minLeft, position.minTop, position.maxLeft and position.maxTop\n\n\n    if (position.minLeft || position.minTop || position.maxLeft || position.maxTop) {\n      pos = this.applyPositionMinMax(panel, pos, position); //console.log('pos after applying minLeft, maxLeft, maxTop, minTop:', pos);\n    } // apply position.modify\n    // must be function returning an object with keys left/top, each with valid css length value\n\n\n    if (position.modify) {\n      // eslint-disable-next-line no-unused-vars\n      pos = this.applyPositionModify(panel, pos, position); //console.log('pos after applying modify():', pos);\n    }\n\n    typeof panel.options.opacity === 'number' ? panel.style.opacity = panel.options.opacity : panel.style.opacity = 1;\n    return panel;\n  },\n\n  applyPositionAutopos(panel, pos, position) {\n    // add class with position and autoposition direction\n    const newClass = `${position.my}-${position.autoposition.toLowerCase()}`;\n    panel.classList.add(newClass); // get all panels with same class\n\n    const newClassAll = Array.prototype.slice.call(document.querySelectorAll(`.${newClass}`)),\n          ownIndex = newClassAll.indexOf(panel); // if more than 1 position new panel\n\n    if (newClassAll.length > 1) {\n      switch (position.autoposition) {\n        case 'down':\n          // collect heights of all elmts to calc new top position\n          newClassAll.forEach((item, index) => {\n            if (index > 0 && index <= ownIndex) {\n              pos.top = parseFloat(pos.top) + newClassAll[--index].getBoundingClientRect().height + jsPanel.autopositionSpacing + 'px';\n            }\n          });\n          break;\n\n        case 'up':\n          newClassAll.forEach((item, index) => {\n            if (index > 0 && index <= ownIndex) {\n              pos.top = parseFloat(pos.top) - newClassAll[--index].getBoundingClientRect().height - jsPanel.autopositionSpacing + 'px';\n            }\n          });\n          break;\n\n        case 'right':\n          // collect widths of all elmts to calc new left position\n          newClassAll.forEach((item, index) => {\n            if (index > 0 && index <= ownIndex) {\n              pos.left = parseFloat(pos.left) + newClassAll[--index].getBoundingClientRect().width + jsPanel.autopositionSpacing + 'px';\n            }\n          });\n          break;\n\n        case 'left':\n          newClassAll.forEach((item, index) => {\n            if (index > 0 && index <= ownIndex) {\n              pos.left = parseFloat(pos.left) - newClassAll[--index].getBoundingClientRect().width - jsPanel.autopositionSpacing + 'px';\n            }\n          });\n          break;\n      }\n\n      panel.style.left = pos.left;\n      panel.style.top = pos.top;\n    }\n\n    return {\n      left: pos.left,\n      top: pos.top\n    };\n  },\n\n  applyPositionOffset(panel, pos, position) {\n    ['offsetX', 'offsetY'].forEach(offset => {\n      if (position[offset]) {\n        if (typeof position[offset] === 'function') {\n          position[offset] = position[offset].call(pos, pos, position);\n        }\n\n        if (isNaN(position[offset]) === false) {\n          // if an offset's value type is integer it's interpreted as pixel value\n          position[offset] = `${position[offset]}px`;\n        } // else it's assumed offsets are strings with valid css length values\n\n      } else {\n        position[offset] = '0px';\n      }\n    });\n    panel.style.left = `calc(${panel.style.left} + ${position.offsetX})`; // offsetX\n\n    panel.style.top = `calc(${panel.style.top} + ${position.offsetY})`; // offsetY\n\n    const panelStyle = getComputedStyle(panel);\n    return {\n      left: panelStyle.left,\n      top: panelStyle.top\n    };\n  },\n\n  applyPositionMinMax(panel, pos, position) {\n    ['minLeft', 'minTop', 'maxLeft', 'maxTop'].forEach(val => {\n      if (position[val]) {\n        if (typeof position[val] === 'function') {\n          position[val] = position[val].call(pos, pos, position);\n        }\n\n        if (Number.isInteger(position[val]) || position[val].match(/^\\d+$/)) {\n          // if  val type is integer it's interpreted as pixel value\n          position[val] = `${position[val]}px`;\n        } // else it's assumed val is string with valid css length value\n\n      }\n    }); // process minLeft\n\n    if (position.minLeft) {\n      // apply minLeft value in order to compare with previous left (pos.left)\n      panel.style.left = position.minLeft; // now get computed css left\n\n      let left = getComputedStyle(panel).left; // returns string with pixel value\n      // now compare current left (minLeft) with pos.left\n\n      if (parseFloat(left) < parseFloat(pos.left)) {\n        // if minLeft is less than pos.left return to pos.left\n        panel.style.left = pos.left;\n      } else {\n        // if minLeft is greater than pos.left keep minLeft and reset pos.left to new value\n        pos.left = left;\n      }\n    } // process minTop\n\n\n    if (position.minTop) {\n      panel.style.top = position.minTop;\n      let top = getComputedStyle(panel).top;\n\n      if (parseFloat(top) < parseFloat(pos.top)) {\n        panel.style.top = pos.top;\n      } else {\n        pos.top = top;\n      }\n    } // process maxLeft\n\n\n    if (position.maxLeft) {\n      panel.style.left = position.maxLeft;\n      let left = getComputedStyle(panel).left;\n\n      if (parseFloat(left) > parseFloat(pos.left)) {\n        panel.style.left = pos.left;\n      } else {\n        pos.left = left;\n      }\n    } // process maxTop\n\n\n    if (position.maxTop) {\n      panel.style.top = position.maxTop;\n      let top = getComputedStyle(panel).top;\n\n      if (parseFloat(top) > parseFloat(pos.top)) {\n        panel.style.top = pos.top;\n      } else {\n        pos.top = top;\n      }\n    }\n\n    const panelStyle = getComputedStyle(panel);\n    return {\n      left: panelStyle.left,\n      top: panelStyle.top\n    };\n  },\n\n  applyPositionModify(panel, pos, position) {\n    if (position.modify && typeof position.modify === 'function') {\n      const modifiedPosition = position.modify.call(pos, pos, position);\n      panel.style.left = Number.isInteger(modifiedPosition.left) || modifiedPosition.left.match(/^\\d+$/) ? `${modifiedPosition.left}px` : modifiedPosition.left;\n      panel.style.top = Number.isInteger(modifiedPosition.top) || modifiedPosition.top.match(/^\\d+$/) ? `${modifiedPosition.top}px` : modifiedPosition.top;\n    }\n\n    const panelStyle = getComputedStyle(panel);\n    return {\n      left: panelStyle.left,\n      top: panelStyle.top\n    };\n  },\n\n  autopositionRemaining(panel) {\n    let autoPos,\n        parent = panel.options.container;\n    ['left-top-down', 'left-top-right', 'center-top-down', 'right-top-down', 'right-top-left', 'left-bottom-up', 'left-bottom-right', 'center-bottom-up', 'right-bottom-up', 'right-bottom-left'].forEach(item => {\n      if (panel.classList.contains(item)) {\n        autoPos = item;\n      }\n    });\n\n    if (autoPos) {\n      const box = parent === 'window' ? document.body : typeof parent === 'string' ? document.querySelector(parent) : parent;\n      box.querySelectorAll(`.${autoPos}`).forEach(item => {\n        item.reposition();\n      });\n    }\n  },\n\n  // ---------------------------------------------------\n  addScript(path, type = 'application/javascript', cb) {\n    if (!document.querySelector(`script[src=\"${path}\"]`)) {\n      const script = document.createElement('script');\n\n      if (cb) {\n        script.onload = cb;\n      }\n\n      script.src = path;\n      script.type = type;\n      document.head.appendChild(script);\n    }\n  },\n\n  ajax(ajaxConfig, panel) {\n    let config,\n        urlParts,\n        xhr = new XMLHttpRequest();\n    const configDefaults = {\n      method: 'GET',\n      async: true,\n      user: '',\n      pwd: '',\n      done: function () {\n        if (panel) {\n          let res = jsPanel.strToHtml(this.responseText);\n\n          if (config.urlSelector) {\n            res = res.querySelector(config.urlSelector);\n          }\n\n          panel.contentRemove();\n          panel.content.append(res);\n        }\n      },\n      autoresize: true,\n      autoreposition: true\n    };\n\n    if (panel && typeof ajaxConfig === 'string') {\n      config = Object.assign({}, configDefaults, {\n        url: ajaxConfig\n      });\n    } else if (typeof ajaxConfig === 'object' && ajaxConfig.url) {\n      config = Object.assign({}, configDefaults, ajaxConfig);\n      config.url = ajaxConfig.url; // reset timeout to 0, withCredentials & responseType to false if request is synchronous\n\n      if (config.async === false) {\n        config.timeout = 0;\n\n        if (config.withCredentials) {\n          config.withCredentials = undefined;\n        }\n\n        if (config.responseType) {\n          config.responseType = undefined;\n        }\n      }\n    } else {\n      if (this.errorReporting) {\n        let err = 'XMLHttpRequest seems to miss the <mark>url</mark> parameter!';\n        jsPanel.errorpanel(err);\n      }\n\n      return;\n    } // check url for added selector\n\n\n    urlParts = config.url.trim().split(/\\s+/);\n    config.url = encodeURI(urlParts[0]);\n\n    if (urlParts.length > 1) {\n      urlParts.shift();\n      config.urlSelector = urlParts.join(' ');\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          panel ? config.done.call(xhr, xhr, panel) : config.done.call(xhr, xhr);\n        } else {\n          if (config.fail) {\n            panel ? config.fail.call(xhr, xhr, panel) : config.fail.call(xhr, xhr);\n          }\n        }\n\n        if (config.always) {\n          panel ? config.always.call(xhr, xhr, panel) : config.always.call(xhr, xhr);\n        } // resize and/or reposition panel if either width or height is set to 'auto'\n\n\n        if (panel) {\n          if (config.autoresize || config.autoreposition) {\n            jsPanel.ajaxAutoresizeAutoreposition(panel, config);\n          }\n        } // allows plugins to add callback functions to the ajax always callback\n\n\n        if (jsPanel.ajaxAlwaysCallbacks.length) {\n          jsPanel.ajaxAlwaysCallbacks.forEach(item => {\n            panel ? item.call(xhr, xhr, panel) : item.call(xhr, xhr);\n          });\n        }\n      }\n    };\n\n    xhr.open(config.method, config.url, config.async, config.user, config.pwd);\n    xhr.timeout = config.timeout || 0;\n\n    if (config.withCredentials) {\n      xhr.withCredentials = config.withCredentials;\n    }\n\n    if (config.responseType) {\n      xhr.responseType = config.responseType;\n    }\n\n    if (config.beforeSend) {\n      panel ? config.beforeSend.call(xhr, xhr, panel) : config.beforeSend.call(xhr, xhr);\n    }\n\n    config.data ? xhr.send(config.data) : xhr.send(null);\n  },\n\n  ajaxAutoresizeAutoreposition(panel, ajaxOrFetchConfig) {\n    const oContentSize = panel.options.contentSize;\n\n    if (typeof oContentSize === 'string' && oContentSize.match(/auto/i)) {\n      const parts = oContentSize.split(' '),\n            sizes = Object.assign({}, {\n        width: parts[0],\n        height: parts[1]\n      });\n\n      if (ajaxOrFetchConfig.autoresize) {\n        panel.resize(sizes);\n      }\n\n      if (!panel.classList.contains('jsPanel-contextmenu')) {\n        if (ajaxOrFetchConfig.autoreposition) {\n          panel.reposition();\n        }\n      }\n    } else if (typeof oContentSize === 'object' && (oContentSize.width === 'auto' || oContentSize.height === 'auto')) {\n      const sizes = Object.assign({}, oContentSize);\n\n      if (ajaxOrFetchConfig.autoresize) {\n        panel.resize(sizes);\n      }\n\n      if (!panel.classList.contains('jsPanel-contextmenu')) {\n        if (ajaxOrFetchConfig.autoreposition) {\n          panel.reposition();\n        }\n      }\n    }\n  },\n\n  createPanelTemplate(dataAttr = true) {\n    const panel = document.createElement('div');\n    panel.className = 'jsPanel';\n    panel.style.left = '0';\n    panel.style.top = '0';\n\n    if (dataAttr) {\n      ['close', 'maximize', 'normalize', 'minimize', 'smallify'].forEach(item => {\n        panel.setAttribute(`data-btn${item}`, 'enabled');\n      });\n    }\n\n    panel.innerHTML = `<div class=\"jsPanel-hdr\">\n                                <div class=\"jsPanel-headerbar\">\n                                    <div class=\"jsPanel-headerlogo\"></div>\n                                    <div class=\"jsPanel-titlebar\">\n                                        <div class=\"jsPanel-title\"></div>\n                                    </div>\n                                    <div class=\"jsPanel-controlbar\">\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-smallify\"  aria-label=\"Smallify\">${this.icons.smallify}</button>\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-minimize\"  aria-label=\"Minimize\">${this.icons.minimize}</button>\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-normalize\" aria-label=\"Normalize\">${this.icons.normalize}</button>\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-maximize\"  aria-label=\"Maximize\">${this.icons.maximize}</button>\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-close\"     aria-label=\"Close\">${this.icons.close}</button>\n                                    </div>\n                                </div>\n                                <div class=\"jsPanel-hdr-toolbar\"></div>\n                            </div>\n                            <div class=\"jsPanel-progressbar\">\n                                <div class=\"jsPanel-progressbar-slider\"></div>\n                            </div>\n                            <div class=\"jsPanel-content\"></div>\n                            <div class=\"jsPanel-minimized-box\"></div>\n                            <div class=\"jsPanel-ftr\"></div>`;\n    return panel;\n  },\n\n  createMinimizedTemplate() {\n    const panel = document.createElement('div');\n    panel.className = 'jsPanel-replacement';\n    panel.innerHTML = `<div class=\"jsPanel-hdr\">\n                                <div class=\"jsPanel-headerbar\">\n                                    <div class=\"jsPanel-headerlogo\"></div>\n                                    <div class=\"jsPanel-titlebar\">\n                                        <div class=\"jsPanel-title\"></div>\n                                    </div>\n                                    <div class=\"jsPanel-controlbar\">\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-sm jsPanel-btn-normalize\" aria-label=\"Normalize\">${this.icons.normalize}</button>\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-sm jsPanel-btn-maximize\"  aria-label=\"Maximize\">${this.icons.maximize}</button>\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-sm jsPanel-btn-close\"     aria-label=\"Close\">${this.icons.close}</button>\n                                    </div>\n                                </div>\n                            </div>`;\n    return panel;\n  },\n\n  createSnapArea(panel, pos, snapsens) {\n    const el = document.createElement('div'),\n          parent = panel.parentElement;\n    el.className = `jsPanel-snap-area jsPanel-snap-area-${pos}`;\n\n    if (pos === 'lt' || pos === 'rt' || pos === 'rb' || pos === 'lb') {\n      el.style.width = snapsens + 'px';\n      el.style.height = snapsens + 'px';\n    } else if (pos === 'ct' || pos === 'cb') {\n      el.style.height = snapsens + 'px';\n    } else if (pos === 'lc' || pos === 'rc') {\n      el.style.width = snapsens + 'px';\n    }\n\n    if (parent !== document.body) {\n      el.style.position = 'absolute';\n    }\n\n    if (!document.querySelector(`.jsPanel-snap-area.jsPanel-snap-area-${pos}`)) {\n      panel.parentElement.appendChild(el);\n    }\n  },\n\n  emptyNode(node) {\n    while (node.firstChild) {\n      node.removeChild(node.firstChild);\n    }\n\n    return node;\n  },\n\n  extend(obj) {\n    // obj needs to be a plain object (to extend the individual panel, not the global object)\n    if (Object.prototype.toString.call(obj) === '[object Object]') {\n      for (let ext in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, ext)) {\n          this.extensions[ext] = obj[ext];\n        }\n      }\n    }\n  },\n\n  fetch(fetchConfig, panel) {\n    let config;\n    const configDefaults = {\n      bodyMethod: 'text',\n      autoresize: true,\n      autoreposition: true,\n      done: function (response, panel) {\n        if (panel) {\n          let res = jsPanel.strToHtml(response);\n          panel.contentRemove();\n          panel.content.append(res);\n        }\n      }\n    };\n\n    if (panel && typeof fetchConfig === 'string') {\n      config = Object.assign({}, configDefaults, {\n        resource: encodeURI(fetchConfig)\n      });\n    } else if (typeof fetchConfig === 'object' && fetchConfig.resource) {\n      config = Object.assign({}, configDefaults, fetchConfig);\n      config.resource = encodeURI(fetchConfig.resource);\n    } else {\n      if (this.errorReporting) {\n        let err = 'Fetch Request seems to miss the <mark>resource</mark> parameter!';\n        jsPanel.errorpanel(err);\n      }\n\n      return;\n    }\n\n    const fetchInit = config.fetchInit || {};\n\n    if (config.beforeSend) {\n      panel ? config.beforeSend.call(fetchConfig, fetchConfig, panel) : config.beforeSend.call(fetchConfig, fetchConfig);\n    }\n\n    fetch(config.resource, fetchInit).then(response => {\n      if (response.ok) {\n        return response[config.bodyMethod]();\n      }\n    }).then(response => {\n      panel ? config.done.call(response, response, panel) : config.done.call(response, response);\n\n      if (panel) {\n        // resize and/or reposition panel if either width or height is set to 'auto'\n        if (config.autoresize || config.autoreposition) {\n          jsPanel.ajaxAutoresizeAutoreposition(panel, config);\n        }\n      }\n    });\n  },\n\n  getPanels(condition = function () {\n    return this.classList.contains('jsPanel-standard');\n  }) {\n    return Array.prototype.slice.call(document.querySelectorAll('.jsPanel')).filter(value => {\n      return condition.call(value, value);\n    }).sort((a, b) => {\n      return b.style.zIndex - a.style.zIndex;\n    });\n  },\n\n  pOcontainer(container) {\n    if (container === 'window') {\n      return document.body;\n    } else if (typeof container === 'string') {\n      let list = document.querySelectorAll(container); // a returned list is a NodeList\n\n      return list.length && list.length > 0 ? list : false;\n    } else if (container.nodeType === 1) {\n      return container;\n    } else if (container.length) {\n      return container[0];\n    }\n\n    return false;\n  },\n\n  // normalizes values for option.maximizedMargin and containment of dragit/resizeit\n  pOcontainment(arg) {\n    let value = arg;\n\n    if (typeof arg === 'function') {\n      value = arg();\n    }\n\n    if (typeof value === 'number') {\n      // value: 20 => value: [20, 20, 20, 20]\n      return [value, value, value, value];\n    } else if (Array.isArray(value)) {\n      if (value.length === 1) {\n        // value: [20] => value: [20, 20, 20, 20]\n        return [value[0], value[0], value[0], value[0]];\n      } else if (value.length === 2) {\n        // value: [20, 40] => value: [20, 40, 20, 40]\n        return value.concat(value);\n      } else if (value.length === 3) {\n        value[3] = value[1];\n      }\n    }\n\n    return value; // assumed to be array with 4 values\n  },\n\n  pOsize(panel, size) {\n    let values = size || this.defaults.contentSize;\n    const parent = panel.parentElement;\n\n    if (typeof values === 'string') {\n      const nums = values.trim().split(' ');\n      values = {};\n      values.width = nums[0];\n      nums.length === 2 ? values.height = nums[1] : values.height = nums[0];\n    } else {\n      if (values.width && !values.height) {\n        // noinspection JSSuspiciousNameCombination\n        values.height = values.width;\n      } else if (values.height && !values.width) {\n        // noinspection JSSuspiciousNameCombination\n        values.width = values.height;\n      }\n    }\n\n    if (String(values.width).match(/^[0-9.]+$/gi)) {\n      // if number only\n      values.width += 'px';\n    } else if (typeof values.width === 'string' && values.width.endsWith('%')) {\n      if (parent === document.body) {\n        values.width = window.innerWidth * (parseFloat(values.width) / 100) + 'px';\n      } else {\n        const prtStyles = window.getComputedStyle(parent),\n              border = parseFloat(prtStyles.borderLeftWidth) + parseFloat(prtStyles.borderRightWidth);\n        values.width = (parseFloat(prtStyles.width) - border) * (parseFloat(values.width) / 100) + 'px';\n      }\n    } else if (typeof values.width === 'function') {\n      values.width = values.width.call(panel, panel);\n\n      if (typeof values.width === 'number') {\n        values.width += 'px';\n      } else if (typeof values.width === 'string' && values.width.match(/^[0-9.]+$/gi)) {\n        values.width += 'px';\n      }\n    }\n\n    if (String(values.height).match(/^[0-9.]+$/gi)) {\n      // if number only\n      values.height += 'px';\n    } else if (typeof values.height === 'string' && values.height.endsWith('%')) {\n      if (parent === document.body) {\n        values.height = window.innerHeight * (parseFloat(values.height) / 100) + 'px';\n      } else {\n        const prtStyles = window.getComputedStyle(parent),\n              border = parseFloat(prtStyles.borderTopWidth) + parseFloat(prtStyles.borderBottomWidth);\n        values.height = (parseFloat(prtStyles.height) - border) * (parseFloat(values.height) / 100) + 'px';\n      }\n    } else if (typeof values.height === 'function') {\n      values.height = values.height.call(panel, panel);\n\n      if (typeof values.height === 'number') {\n        values.height += 'px';\n      } else if (typeof values.height === 'string' && values.height.match(/^[0-9.]+$/gi)) {\n        values.height += 'px';\n      }\n    }\n\n    return values; // return value must be object {width: xxx, height: xxx}\n  },\n\n  pOborder(border) {\n    border = border.trim();\n    const values = new Array(3),\n          regexStyle = /\\s*(none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset)\\s*/gi,\n          regexWidth = /\\s*(thin|medium|thick)|(\\d*\\.?\\d+[a-zA-Z]{2,4})\\s*/gi,\n          borderStyle = border.match(regexStyle),\n          borderWidth = border.match(regexWidth);\n\n    if (borderStyle) {\n      values[1] = borderStyle[0].trim();\n      border = border.replace(values[1], '');\n    } else {\n      values[1] = 'solid';\n    }\n\n    if (borderWidth) {\n      values[0] = borderWidth[0].trim();\n      border = border.replace(values[0], '');\n    } else {\n      values[0] = 'medium';\n    }\n\n    values[2] = border.trim();\n    return values;\n  },\n\n  pOheaderControls(oHdrCtrls) {\n    if (typeof oHdrCtrls === 'string') {\n      let setting = {},\n          str = oHdrCtrls.toLowerCase(),\n          sizeMatch = str.match(/xl|lg|md|sm|xs/),\n          ctrlMatch = str.match(/closeonly|none/);\n\n      if (sizeMatch) {\n        setting.size = sizeMatch[0];\n      }\n\n      if (ctrlMatch) {\n        setting = Object.assign({}, setting, {\n          maximize: 'remove',\n          normalize: 'remove',\n          minimize: 'remove',\n          smallify: 'remove'\n        });\n\n        if (ctrlMatch[0] === 'none') {\n          setting.close = 'remove';\n        }\n      }\n\n      return Object.assign({}, this.defaults.headerControls, setting);\n    } else {\n      return Object.assign({}, this.defaults.headerControls, oHdrCtrls);\n    }\n  },\n\n  processCallbacks(panel, arg, someOrEvery = 'some', param, param2) {\n    // if arg != array make it one\n    if (typeof arg === 'function') {\n      arg = [arg];\n    } // some():  execute callbacks until one is found returning a truthy value\n    // every(): execute callbacks until one is found returning a falsy value\n    // truthy values are: '0' (string with single zero), 'false' (string with text false), [] (empty array), {} (empty object), function(){} (\"empty\" function)\n    // falsy values are: false, 0, '', \"\", null, undefined, NaN\n\n\n    if (someOrEvery) {\n      return arg[someOrEvery](cb => {\n        return cb.call(panel, panel, param, param2);\n      });\n    } else {\n      arg.forEach(cb => {\n        cb.call(panel, panel, param, param2);\n      });\n    }\n  },\n\n  removeSnapAreas() {\n    document.querySelectorAll('.jsPanel-snap-area').forEach(el => {\n      el.parentElement.removeChild(el);\n    });\n  },\n\n  resetZi() {\n    this.zi = ((startValue = jsPanel.ziBase) => {\n      let val = startValue;\n      return {\n        next: () => {\n          return val++;\n        }\n      };\n    })();\n\n    Array.prototype.slice.call(document.querySelectorAll('.jsPanel-standard')).sort((a, b) => {\n      return a.style.zIndex - b.style.zIndex;\n    }).forEach(panel => {\n      panel.style.zIndex = jsPanel.zi.next();\n    });\n  },\n\n  getScrollbarWidth(elmt = document.body) {\n    if (elmt === document.body) {\n      return {\n        y: window.innerWidth - document.documentElement.clientWidth,\n        x: window.innerHeight - document.documentElement.clientHeight\n      };\n    } else {\n      let styles = getComputedStyle(elmt);\n      return {\n        y: elmt.offsetWidth - elmt.clientWidth - parseFloat(styles.borderRightWidth) - parseFloat(styles.borderLeftWidth),\n        x: elmt.offsetHeight - elmt.clientHeight - parseFloat(styles.borderBottomWidth) - parseFloat(styles.borderTopWidth)\n      };\n    }\n  },\n\n  remClass(elmt, classnames) {\n    classnames.trim().split(/\\s+/).forEach(item => elmt.classList.remove(item));\n    return elmt;\n  },\n\n  setClass(elmt, classnames) {\n    classnames.trim().split(/\\s+/).forEach(item => elmt.classList.add(item));\n    return elmt;\n  },\n\n  setStyles(elmt, stylesobject) {\n    // code taken from https://blissfuljs.com/docs.html#fn-style\n    for (let prop in stylesobject) {\n      if (prop in elmt.style) {\n        // noinspection JSUnfilteredForInLoop,JSUnfilteredForInLoop\n        elmt.style[prop] = stylesobject[prop];\n      } else {\n        // This way we can set CSS Variables too and use normal prop names\n        // noinspection JSUnfilteredForInLoop\n        elmt.style.setProperty(prop, stylesobject[prop]);\n      }\n    }\n\n    return elmt;\n  },\n\n  setStyle(elmt, stylesobject) {\n    return this.setStyles.call(elmt, elmt, stylesobject);\n  },\n\n  // alias for setStyles()\n  strToHtml(str) {\n    // TODO: add param to strip script tags from returned DocumentFragment\n\n    /* str has to be an HTMLString\r\n     * returns a DocumentFragment - https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\r\n     * after inserting executes inline script and script tags */\n    return document.createRange().createContextualFragment(str);\n  },\n\n  toggleClass(elmt, classnames) {\n    // IE11 doesn't support https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n    classnames.trim().split(/\\s+/).forEach(classname => {\n      elmt.classList.contains(classname) ? elmt.classList.remove(classname) : elmt.classList.add(classname);\n    });\n    return elmt;\n  },\n\n  errorpanel(e) {\n    this.create({\n      paneltype: 'error',\n      dragit: false,\n      resizeit: false,\n      theme: {\n        bgPanel: 'white',\n        bgContent: 'white',\n        colorHeader: 'rebeccapurple',\n        colorContent: '#333',\n        border: '2px solid rebeccapurple'\n      },\n      borderRadius: '.33rem',\n      headerControls: 'closeonly xs',\n      headerTitle: '&#9888; jsPanel Error',\n      contentSize: {\n        width: '50%',\n        height: 'auto'\n      },\n      position: 'center-top 0 5 down',\n      animateIn: 'jsPanelFadeIn',\n      content: `<div class=\"jsPanel-error-content-separator\"></div><p>${e}</p>`\n    });\n  },\n\n  // METHOD CREATING THE PANEL ---------------------------------------------\n  create(options = {}, cb) {\n    // initialize z-index generator\n    if (!jsPanel.zi) {\n      jsPanel.zi = ((startValue = jsPanel.ziBase) => {\n        let val = startValue;\n        return {\n          next: () => {\n            return val++;\n          }\n        };\n      })();\n    }\n\n    if (options.config) {\n      options = Object.assign({}, this.defaults, options.config, options);\n      delete options.config;\n    } else {\n      options = Object.assign({}, this.defaults, options);\n    }\n\n    if (!options.id) {\n      options.id = `jsPanel-${jsPanel.idCounter += 1}`;\n    } else if (typeof options.id === 'function') {\n      options.id = options.id();\n    }\n\n    const p = document.getElementById(options.id);\n\n    if (p !== null) {\n      // if a panel with passed id already exists, front it and return false\n      if (p.classList.contains('jsPanel')) {\n        p.front();\n      }\n\n      if (this.errorReporting) {\n        let err = `&#9664; COULD NOT CREATE NEW JSPANEL &#9658;<br>An element with the ID <mark>${options.id}</mark> already exists in the document.`;\n        jsPanel.errorpanel(err);\n      }\n\n      return false;\n    } // check whether container is valid -> if not return and throw error\n\n\n    let panelContainer = this.pOcontainer(options.container); // panelContainer might be a NodeList, so use only first node in list\n\n    if (typeof panelContainer === 'object' && panelContainer.length && panelContainer.length > 0) {\n      panelContainer = panelContainer[0];\n    }\n\n    if (!panelContainer) {\n      if (this.errorReporting) {\n        let err = '&#9664; COULD NOT CREATE NEW JSPANEL &#9658;<br>The container to append the panel to does not exist';\n        jsPanel.errorpanel(err);\n      }\n\n      return false;\n    } // normalize on... callbacks\n    // callbacks must be array of function(s) in order to be able to dynamically add/remove callbacks (for example in extensions)\n\n\n    ['onbeforeclose', 'onbeforemaximize', 'onbeforeminimize', 'onbeforenormalize', 'onbeforesmallify', 'onbeforeunsmallify', 'onclosed', 'onfronted', 'onmaximized', 'onminimized', 'onnormalized', 'onsmallified', 'onstatuschange', 'onunsmallified'].forEach(item => {\n      if (options[item]) {\n        if (typeof options[item] === 'function') {\n          options[item] = [options[item]];\n        }\n      } else {\n        options[item] = [];\n      }\n    });\n    const self = options.template ? options.template : this.createPanelTemplate(); // Properties\n\n    self.options = options;\n    self.closetimer = undefined;\n    self.status = 'initialized';\n    self.currentData = {};\n    self.header = self.querySelector('.jsPanel-hdr'); // complete header section\n\n    self.headerbar = self.header.querySelector('.jsPanel-headerbar'); // log, title and controls\n\n    self.titlebar = self.header.querySelector('.jsPanel-titlebar'); // div surrounding title div\n\n    self.headerlogo = self.headerbar.querySelector('.jsPanel-headerlogo'); // logo only\n\n    self.headertitle = self.headerbar.querySelector('.jsPanel-title'); // title div\n\n    self.controlbar = self.headerbar.querySelector('.jsPanel-controlbar'); // div surrounding all controls\n\n    self.headertoolbar = self.header.querySelector('.jsPanel-hdr-toolbar');\n    self.content = self.querySelector('.jsPanel-content');\n    self.footer = self.querySelector('.jsPanel-ftr');\n    self.snappableTo = false;\n    self.snapped = false;\n    self.droppableTo = false;\n    self.progressbar = self.autocloseProgressbar = self.querySelector('.jsPanel-progressbar'); // self.autocloseProgressbar kept for compatibility\n    // Events\n\n    const jspanelloaded = new CustomEvent('jspanelloaded', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelstatuschange = new CustomEvent('jspanelstatuschange', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelbeforenormalize = new CustomEvent('jspanelbeforenormalize', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelnormalized = new CustomEvent('jspanelnormalized', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelbeforemaximize = new CustomEvent('jspanelbeforemaximize', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelmaximized = new CustomEvent('jspanelmaximized', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelbeforeminimize = new CustomEvent('jspanelbeforeminimize', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelminimized = new CustomEvent('jspanelminimized', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelbeforesmallify = new CustomEvent('jspanelbeforesmallify', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelsmallified = new CustomEvent('jspanelsmallified', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelsmallifiedmax = new CustomEvent('jspanelsmallifiedmax', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelbeforeunsmallify = new CustomEvent('jspanelbeforeunsmallify', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelfronted = new CustomEvent('jspanelfronted', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelbeforeclose = new CustomEvent('jspanelbeforeclose', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelclosed = new CustomEvent('jspanelclosed', {\n      detail: options.id,\n      cancelable: true\n    }),\n          jspanelcloseduser = new CustomEvent('jspanelcloseduser', {\n      detail: options.id,\n      cancelable: true\n    }); // make panel available as event object property 'panel'\n\n    [jspanelloaded, jspanelstatuschange, jspanelbeforenormalize, jspanelnormalized, jspanelbeforemaximize, jspanelmaximized, jspanelbeforeminimize, jspanelminimized, jspanelbeforesmallify, jspanelsmallified, jspanelsmallifiedmax, jspanelbeforeunsmallify, jspanelfronted, jspanelbeforeclose].forEach(evt => {\n      evt.panel = self;\n    }); // controls buttons\n\n    const closeBtn = self.querySelector('.jsPanel-btn-close'),\n          maxBtn = self.querySelector('.jsPanel-btn-maximize'),\n          normBtn = self.querySelector('.jsPanel-btn-normalize'),\n          smallBtn = self.querySelector('.jsPanel-btn-smallify'),\n          minBtn = self.querySelector('.jsPanel-btn-minimize');\n\n    if (closeBtn) {\n      jsPanel.pointerup.forEach(item => {\n        closeBtn.addEventListener(item, e => {\n          e.preventDefault(); // disable close for all mouse buttons but left\n\n          if (e.button && e.button > 0) {\n            return false;\n          }\n\n          self.close(null, true); // true indicates panel closed by using the close control\n        });\n      });\n    }\n\n    if (maxBtn) {\n      jsPanel.pointerup.forEach(item => {\n        maxBtn.addEventListener(item, e => {\n          e.preventDefault();\n\n          if (e.button && e.button > 0) {\n            return false;\n          }\n\n          self.maximize();\n        });\n      });\n    }\n\n    if (normBtn) {\n      jsPanel.pointerup.forEach(item => {\n        normBtn.addEventListener(item, e => {\n          e.preventDefault();\n\n          if (e.button && e.button > 0) {\n            return false;\n          }\n\n          self.normalize();\n        });\n      });\n    }\n\n    if (smallBtn) {\n      jsPanel.pointerup.forEach(item => {\n        smallBtn.addEventListener(item, e => {\n          e.preventDefault();\n\n          if (e.button && e.button > 0) {\n            return false;\n          }\n\n          if (self.status === 'normalized' || self.status === 'maximized') {\n            self.smallify();\n          } else if (self.status === 'smallified' || self.status === 'smallifiedmax') {\n            self.unsmallify();\n          }\n        });\n      });\n    }\n\n    if (minBtn) {\n      jsPanel.pointerup.forEach(item => {\n        minBtn.addEventListener(item, e => {\n          e.preventDefault();\n\n          if (e.button && e.button > 0) {\n            return false;\n          }\n\n          self.minimize();\n        });\n      });\n    } // import extensions (extensions of the individual panel, not the global object jsPanel)\n\n\n    let extensions = jsPanel.extensions;\n\n    for (let ext in extensions) {\n      if (Object.prototype.hasOwnProperty.call(extensions, ext)) {\n        self[ext] = extensions[ext];\n      }\n    } // Methods\n\n\n    self.clearTheme = cb => {\n      jsPanel.themes.forEach(value => {\n        ['panel', `jsPanel-theme-${value}`, `panel-${value}`, `${value}-color`].forEach(item => {\n          self.classList.remove(item);\n        });\n        self.header.classList.remove(`jsPanel-theme-${value}`);\n      });\n      self.content.classList.remove('jsPanel-content-filled', 'jsPanel-content-filledlight');\n      self.header.classList.remove('jsPanel-hdr-light');\n      self.header.classList.remove('jsPanel-hdr-dark');\n      self.style.backgroundColor = '';\n      jsPanel.setStyle(self.headertoolbar, {\n        boxShadow: '',\n        width: '',\n        marginLeft: '',\n        borderTopColor: 'transparent'\n      });\n      jsPanel.setStyle(self.content, {\n        background: '',\n        borderTopColor: 'transparent'\n      });\n      self.header.style.background = '';\n      Array.prototype.slice.call(self.controlbar.querySelectorAll('.jsPanel-icon')).concat([self.headerlogo, self.headertitle, self.headertoolbar, self.content]).forEach(item => {\n        item.style.color = '';\n      });\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.getThemeDetails = th => {\n      const passedTheme = th.toLowerCase(),\n            theme = {\n        color: false,\n        colors: false,\n        filling: false\n      },\n            step1 = passedTheme.split('fill');\n      theme.color = step1[0].trim().replace(/\\s*/g, '');\n\n      if (step1.length === 2) {\n        if (step1[1].startsWith('edlight')) {\n          theme.filling = 'filledlight';\n        } else if (step1[1].startsWith('eddark')) {\n          theme.filling = 'filleddark';\n        } else if (step1[1].startsWith('ed')) {\n          theme.filling = 'filled';\n        } else if (step1[1].startsWith('color')) {\n          let step2 = step1[1].split('color'),\n              fillcolor = step2[step2.length - 1].trim().replace(/\\s*/g, '');\n\n          if (jsPanel.colorNames[fillcolor]) {\n            fillcolor = jsPanel.colorNames[fillcolor];\n          }\n\n          if (fillcolor.match(/^([0-9a-f]{3}|[0-9a-f]{6})$/gi)) {\n            fillcolor = '#' + fillcolor;\n          }\n\n          theme.filling = fillcolor;\n        }\n      }\n\n      const builtIn = jsPanel.themes.some(item => {\n        return item === theme.color.split(/\\s/i)[0];\n      });\n\n      if (builtIn) {\n        let baseTheme = theme.color.split(/\\s/i)[0],\n            btn = document.createElement('button');\n        btn.className = baseTheme + '-bg';\n        document.body.appendChild(btn);\n        theme.color = getComputedStyle(btn).backgroundColor.replace(/\\s+/gi, '');\n        document.body.removeChild(btn); // noinspection JSUnusedAssignment\n\n        btn = undefined;\n      } else if (theme.color.startsWith('bootstrap-')) {\n        // works with bootstrap 3 and 4\n        let index = theme.color.indexOf('-'),\n            btn = document.createElement('button');\n        btn.className = 'btn btn' + theme.color.slice(index);\n        document.body.appendChild(btn);\n        theme.color = getComputedStyle(btn).backgroundColor.replace(/\\s+/gi, '');\n        document.body.removeChild(btn); // noinspection JSUnusedAssignment\n\n        btn = undefined;\n      } else if (theme.color.startsWith('mdb-')) {\n        // material design for bootstrap theme\n        let index = theme.color.indexOf('-') + 1,\n            span = document.createElement('span'),\n            testClass;\n\n        if (theme.color.endsWith('-dark')) {\n          testClass = theme.color.slice(index);\n          testClass = testClass.replace('-dark', '-color-dark');\n        } else {\n          testClass = theme.color.slice(index) + '-color';\n        }\n\n        span.className = testClass;\n        document.body.appendChild(span);\n        theme.color = getComputedStyle(span).backgroundColor.replace(/\\s+/gi, '');\n        document.body.removeChild(span); // noinspection JSUnusedAssignment\n\n        span = undefined;\n      }\n\n      theme.colors = jsPanel.calcColors(theme.color);\n      return theme;\n    };\n\n    self.applyColorTheme = themeDetails => {\n      self.style.backgroundColor = themeDetails.colors[0];\n      self.header.style.backgroundColor = themeDetails.colors[0];\n      self.header.style.color = themeDetails.colors[3];\n      ['.jsPanel-headerlogo', '.jsPanel-title', '.jsPanel-hdr-toolbar'].forEach(item => {\n        self.querySelector(item).style.color = themeDetails.colors[3];\n      });\n      self.querySelectorAll('.jsPanel-controlbar .jsPanel-btn').forEach(item => {\n        item.style.color = themeDetails.colors[3];\n      }); // apply border to content only themes 'filled'\n\n      if (typeof self.options.theme === 'string' && themeDetails.filling === 'filled') {\n        self.content.style.borderTop = themeDetails.colors[3] === '#000000' ? '1px solid rgba(0,0,0,0.15)' : '1px solid rgba(255,255,255,0.15)';\n      }\n\n      if (themeDetails.colors[3] === '#000000') {\n        self.header.classList.add('jsPanel-hdr-light');\n      } else {\n        self.header.classList.add('jsPanel-hdr-dark');\n      }\n\n      if (themeDetails.filling) {\n        switch (themeDetails.filling) {\n          case 'filled':\n            jsPanel.setStyle(self.content, {\n              backgroundColor: themeDetails.colors[2],\n              color: themeDetails.colors[3]\n            });\n            break;\n\n          case 'filledlight':\n            self.content.style.backgroundColor = themeDetails.colors[1];\n            break;\n\n          case 'filleddark':\n            jsPanel.setStyle(self.content, {\n              backgroundColor: themeDetails.colors[6],\n              color: themeDetails.colors[7]\n            });\n            break;\n\n          default:\n            self.content.style.backgroundColor = themeDetails.filling;\n            self.content.style.color = jsPanel.perceivedBrightness(themeDetails.filling) <= jsPanel.colorBrightnessThreshold ? '#fff' : '#000';\n        }\n      }\n\n      return self;\n    };\n\n    self.applyCustomTheme = theme => {\n      let defaults = {\n        bgPanel: '#fff',\n        bgContent: '#fff',\n        colorHeader: '#000',\n        colorContent: '#000'\n      },\n          passedTheme;\n\n      if (typeof theme === 'object') {\n        passedTheme = Object.assign(defaults, theme);\n      } else {\n        passedTheme = defaults;\n      }\n\n      let bgPanel = passedTheme.bgPanel,\n          bgContent = passedTheme.bgContent,\n          colorHeader = passedTheme.colorHeader,\n          colorContent = passedTheme.colorContent; // set background panel/header\n\n      jsPanel.colorNames[bgPanel] ? self.style.background = '#' + jsPanel.colorNames[bgPanel] : self.style.background = bgPanel; // set font color header\n\n      if (jsPanel.colorNames[colorHeader]) {\n        colorHeader = '#' + jsPanel.colorNames[colorHeader];\n      }\n\n      ['.jsPanel-headerlogo', '.jsPanel-title', '.jsPanel-hdr-toolbar'].forEach(item => {\n        self.querySelector(item).style.color = colorHeader;\n      });\n      self.querySelectorAll('.jsPanel-controlbar .jsPanel-btn').forEach(item => {\n        item.style.color = colorHeader;\n      }); // set content background\n\n      jsPanel.colorNames[bgContent] ? self.content.style.background = '#' + jsPanel.colorNames[bgContent] : self.content.style.background = bgContent; // set content font color\n\n      jsPanel.colorNames[colorContent] ? self.content.style.color = '#' + jsPanel.colorNames[colorContent] : self.content.style.color = colorContent; // set border-top for header toolbar and add header class\n\n      const pbPanel = jsPanel.perceivedBrightness(colorHeader);\n\n      if (pbPanel > jsPanel.colorBrightnessThreshold) {\n        self.header.classList.add('jsPanel-hdr-dark');\n      } else {\n        self.header.classList.add('jsPanel-hdr-light');\n      } // set border-top for content\n\n\n      const pbContent = jsPanel.perceivedBrightness(colorContent);\n      pbContent > jsPanel.colorBrightnessThreshold ? self.content.style.borderTop = '1px solid rgba(255,255,255,0.15)' : self.content.style.borderTop = '1px solid rgba(0,0,0,0.15)'; // set panel border (option.border does not work for themes using an object)\n\n      if (passedTheme.border) {\n        let border = passedTheme.border,\n            index = border.lastIndexOf(' '),\n            col = border.slice(++index);\n\n        if (jsPanel.colorNames[col]) {\n          border = border.replace(col, '#' + jsPanel.colorNames[col]);\n        }\n\n        self.style.border = border;\n      }\n\n      return self;\n    };\n\n    self.setBorder = val => {\n      let border = jsPanel.pOborder(val);\n\n      if (!border[2].length) {\n        border[2] = self.style.backgroundColor;\n      } else if (jsPanel.colorNames[border[2]]) {\n        border[2] = '#' + jsPanel.colorNames[border[2]];\n      }\n\n      border = border.join(' ');\n      self.style.border = border;\n      self.options.border = border;\n      return self;\n    };\n\n    self.setBorderRadius = rad => {\n      if (typeof rad === 'number') {\n        rad += 'px';\n      }\n\n      self.style.borderRadius = rad;\n      const br = getComputedStyle(self); // set border-radius of either header or content section depending on presence of header\n\n      if (self.options.header) {\n        self.header.style.borderTopLeftRadius = br.borderTopLeftRadius;\n        self.header.style.borderTopRightRadius = br.borderTopRightRadius;\n      } else {\n        self.content.style.borderTopLeftRadius = br.borderTopLeftRadius;\n        self.content.style.borderTopRightRadius = br.borderTopRightRadius;\n      } // set border-radius of either footer or content section depending on presence of footer\n\n\n      if (self.options.footerToolbar) {\n        self.footer.style.borderBottomRightRadius = br.borderBottomRightRadius;\n        self.footer.style.borderBottomLeftRadius = br.borderBottomLeftRadius;\n      } else {\n        self.content.style.borderBottomRightRadius = br.borderBottomRightRadius;\n        self.content.style.borderBottomLeftRadius = br.borderBottomLeftRadius;\n      }\n\n      return self;\n    };\n\n    self.setTheme = (theme = options.theme, cb) => {\n      // if panel is minimized normalize it for theme change\n      let minimized;\n\n      if (self.status === 'minimized') {\n        minimized = true;\n        self.normalize();\n      } // first remove all theme related styles\n\n\n      self.clearTheme();\n\n      if (typeof theme === 'object') {\n        options.border = undefined;\n        self.applyCustomTheme(theme);\n      } else {\n        if (theme === 'none') {\n          theme = 'white';\n        }\n\n        let themeDetails = self.getThemeDetails(theme);\n        self.applyColorTheme(themeDetails);\n      } // minimize again if panel was minimized prior theme change\n\n\n      if (minimized) {\n        self.minimize();\n      }\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.remove = (id, closedBy, cb) => {\n      // self.remove() is just a helper func used in self.close()\n      self.parentElement.removeChild(self);\n\n      if (!document.getElementById(id)) {\n        self.removeMinimizedReplacement();\n\n        if (closedBy) {\n          document.dispatchEvent(jspanelcloseduser);\n        }\n\n        document.dispatchEvent(jspanelclosed);\n\n        if (self.options.onclosed) {\n          jsPanel.processCallbacks(self, self.options.onclosed, 'every', closedBy);\n        }\n\n        jsPanel.autopositionRemaining(self);\n\n        if (cb) {\n          cb.call(id, id);\n        }\n      } else {\n        if (cb) {\n          cb.call(self, id, self);\n        }\n      }\n\n      window.removeEventListener('resize', self.windowResizeHandler);\n      document.removeEventListener('jspanelresize', self.parentResizeHandler);\n    };\n\n    self.close = (cb, closedByUser) => {\n      if (self.closetimer) {\n        window.clearInterval(self.closetimer);\n      }\n\n      document.dispatchEvent(jspanelbeforeclose);\n\n      if (self.options.onbeforeclose && self.options.onbeforeclose.length > 0 && !jsPanel.processCallbacks(self, self.options.onbeforeclose, 'some', self.status, closedByUser)) {\n        return self;\n      }\n\n      if (self.options.animateOut) {\n        if (self.options.animateIn) {\n          jsPanel.remClass(self, self.options.animateIn);\n        }\n\n        jsPanel.setClass(self, self.options.animateOut);\n        self.addEventListener('animationend', e => {\n          e.stopPropagation();\n          self.remove(self.id, closedByUser, cb);\n        });\n      } else {\n        self.remove(self.id, closedByUser, cb);\n      }\n    };\n\n    self.maximize = (cb, donotfront) => {\n      // Note: do not disable maximize method for already maximized panels -> onContainerResize wouldn't work\n      self.statusBefore = self.status;\n\n      if (options.onbeforemaximize && options.onbeforemaximize.length > 0 && !jsPanel.processCallbacks(self, options.onbeforemaximize, 'some', self.statusBefore)) {\n        return self;\n      }\n\n      document.dispatchEvent(jspanelbeforemaximize);\n      const parent = self.parentElement,\n            margins = jsPanel.pOcontainment(options.maximizedMargin); // normalize maximizedMargin\n\n      if (parent === document.body) {\n        // maximize within window\n\n        /*\r\n           When clientHeight is used on the root element (the <html> element), (or on <body> if the document is in quirks mode),\r\n           the viewport's height (excluding any scrollbar) is returned. This is a special case of clientHeight.\r\n           See https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\r\n           document.documentElement in the code below returns the <html> element\r\n        */\n        self.style.width = document.documentElement.clientWidth - margins[1] - margins[3] + 'px';\n        self.style.height = document.documentElement.clientHeight - margins[0] - margins[2] + 'px';\n        self.style.left = margins[3] + 'px';\n        self.style.top = margins[0] + 'px';\n      } else {\n        // maximize within parentElement\n        self.style.width = parent.clientWidth - margins[1] - margins[3] + 'px';\n        self.style.height = parent.clientHeight - margins[0] - margins[2] + 'px';\n        self.style.left = margins[3] + 'px';\n        self.style.top = margins[0] + 'px';\n      }\n\n      smallBtn.style.transform = 'unset';\n      self.removeMinimizedReplacement();\n      self.status = 'maximized';\n      self.setControls(['.jsPanel-btn-maximize']);\n\n      if (!donotfront) {\n        self.front();\n      }\n\n      document.dispatchEvent(jspanelmaximized);\n      document.dispatchEvent(jspanelstatuschange);\n\n      if (options.onstatuschange) {\n        jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\n      }\n\n      if (cb) {\n        cb.call(self, self, self.statusBefore);\n      }\n\n      if (options.onmaximized) {\n        jsPanel.processCallbacks(self, options.onmaximized, 'every', self.statusBefore);\n      }\n\n      return self;\n    };\n\n    self.minimize = cb => {\n      if (self.status === 'minimized') {\n        return self;\n      }\n\n      self.statusBefore = self.status;\n\n      if (options.onbeforeminimize && options.onbeforeminimize.length > 0 && !jsPanel.processCallbacks(self, options.onbeforeminimize, 'some', self.statusBefore)) {\n        return self;\n      }\n\n      document.dispatchEvent(jspanelbeforeminimize); // create container for minimized replacements if not already there\n\n      if (!document.getElementById('jsPanel-replacement-container')) {\n        const replacementContainer = document.createElement('div');\n        replacementContainer.id = 'jsPanel-replacement-container';\n        document.body.append(replacementContainer);\n      }\n\n      self.style.left = '-9999px';\n      self.status = 'minimized';\n      document.dispatchEvent(jspanelminimized);\n      document.dispatchEvent(jspanelstatuschange);\n\n      if (options.onstatuschange) {\n        jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\n      }\n\n      if (options.minimizeTo) {\n        let replacement = self.createMinimizedReplacement(),\n            container,\n            parent,\n            list;\n\n        switch (options.minimizeTo) {\n          case 'default':\n            document.getElementById('jsPanel-replacement-container').append(replacement);\n            break;\n\n          case 'parentpanel':\n            parent = self.closest('.jsPanel-content').parentElement;\n            list = parent.querySelectorAll('.jsPanel-minimized-box');\n            container = list[list.length - 1];\n            container.append(replacement);\n            break;\n\n          case 'parent':\n            parent = self.parentElement;\n            container = parent.querySelector('.jsPanel-minimized-container');\n\n            if (!container) {\n              container = document.createElement('div');\n              container.className = 'jsPanel-minimized-container';\n              parent.append(container);\n            }\n\n            container.append(replacement);\n            break;\n\n          default:\n            // all other strings are assumed to be selector strings returning a single element to append the min replacement to\n            document.querySelector(options.minimizeTo).append(replacement);\n        }\n      }\n\n      if (cb) {\n        cb.call(self, self, self.statusBefore);\n      }\n\n      if (options.onminimized) {\n        jsPanel.processCallbacks(self, options.onminimized, 'every', self.statusBefore);\n      }\n\n      return self;\n    };\n\n    self.normalize = cb => {\n      if (self.status === 'normalized') {\n        return self;\n      }\n\n      self.statusBefore = self.status; // ensure smallify/unsmallify transition is turned off when resizing begins\n      //self.style.transition = 'unset';\n\n      if (options.onbeforenormalize && options.onbeforenormalize.length > 0 && !jsPanel.processCallbacks(self, options.onbeforenormalize, 'some', self.statusBefore)) {\n        return self;\n      }\n\n      document.dispatchEvent(jspanelbeforenormalize);\n      self.style.width = self.currentData.width;\n      self.style.height = self.currentData.height;\n\n      if (self.snapped) {\n        // if panel is snapped before minimizing restore snapped position\n        self.snap(self.snapped, true);\n      } else {\n        self.style.left = self.currentData.left;\n        self.style.top = self.currentData.top;\n      }\n\n      smallBtn.style.transform = 'unset';\n      self.removeMinimizedReplacement();\n      self.status = 'normalized';\n      self.setControls(['.jsPanel-btn-normalize']);\n      self.front();\n      document.dispatchEvent(jspanelnormalized);\n      document.dispatchEvent(jspanelstatuschange);\n\n      if (options.onstatuschange) {\n        jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\n      }\n\n      if (cb) {\n        cb.call(self, self, self.statusBefore);\n      }\n\n      if (options.onnormalized) {\n        jsPanel.processCallbacks(self, options.onnormalized, 'every', self.statusBefore);\n      }\n\n      return self;\n    };\n\n    self.smallify = cb => {\n      if (self.status === 'smallified' || self.status === 'smallifiedmax') {\n        return self;\n      }\n\n      self.statusBefore = self.status;\n\n      if (options.onbeforesmallify && options.onbeforesmallify.length > 0 && !jsPanel.processCallbacks(self, options.onbeforesmallify, 'some', self.statusBefore)) {\n        return self;\n      }\n\n      document.dispatchEvent(jspanelbeforesmallify);\n      self.style.overflow = 'hidden';\n      const selfStyles = window.getComputedStyle(self),\n            selfHeaderHeight = parseFloat(window.getComputedStyle(self.headerbar).height);\n      self.style.height = parseFloat(selfStyles.borderTopWidth) + parseFloat(selfStyles.borderBottomWidth) + selfHeaderHeight + 'px';\n      smallBtn.style.transform = 'rotate(180deg)';\n\n      if (self.status === 'normalized') {\n        self.setControls(['.jsPanel-btn-normalize']);\n        self.status = 'smallified';\n        document.dispatchEvent(jspanelsmallified);\n        document.dispatchEvent(jspanelstatuschange);\n\n        if (options.onstatuschange) {\n          jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\n        }\n      } else if (self.status === 'maximized') {\n        self.setControls(['.jsPanel-btn-maximize']);\n        self.status = 'smallifiedmax';\n        document.dispatchEvent(jspanelsmallifiedmax);\n        document.dispatchEvent(jspanelstatuschange);\n\n        if (options.onstatuschange) {\n          jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\n        }\n      }\n\n      const minBoxes = self.querySelectorAll('.jsPanel-minimized-box');\n      minBoxes[minBoxes.length - 1].style.display = 'none';\n\n      if (cb) {\n        cb.call(self, self, self.statusBefore);\n      }\n\n      if (options.onsmallified) {\n        jsPanel.processCallbacks(self, options.onsmallified, 'every', self.statusBefore);\n      }\n\n      return self;\n    };\n\n    self.unsmallify = cb => {\n      self.statusBefore = self.status;\n\n      if (self.status === 'smallified' || self.status === 'smallifiedmax') {\n        if (options.onbeforeunsmallify && options.onbeforeunsmallify.length > 0 && !jsPanel.processCallbacks(self, options.onbeforeunsmallify, 'some', self.statusBefore)) {\n          return self;\n        }\n\n        document.dispatchEvent(jspanelbeforeunsmallify);\n        self.style.overflow = 'visible';\n        self.front();\n\n        if (self.status === 'smallified') {\n          self.style.height = self.currentData.height;\n          self.setControls(['.jsPanel-btn-normalize']);\n          self.status = 'normalized';\n          document.dispatchEvent(jspanelnormalized);\n          document.dispatchEvent(jspanelstatuschange);\n\n          if (options.onstatuschange) {\n            jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\n          }\n        } else if (self.status === 'smallifiedmax') {\n          self.maximize();\n        } else if (self.status === 'minimized') {\n          self.normalize();\n        }\n\n        smallBtn.style.transform = 'rotate(0deg)';\n        const minBoxes = self.querySelectorAll('.jsPanel-minimized-box');\n        minBoxes[minBoxes.length - 1].style.display = 'flex';\n\n        if (cb) {\n          cb.call(self, self, self.statusBefore);\n        }\n\n        if (options.onunsmallified) {\n          jsPanel.processCallbacks(self, options.onunsmallified, 'every', self.statusBefore);\n        }\n      }\n\n      return self;\n    };\n\n    self.front = (callback, execOnFrontedCallbacks = true) => {\n      if (self.status === 'minimized') {\n        self.statusBefore === 'maximized' ? self.maximize() : self.normalize();\n      } else {\n        const newArr = Array.prototype.slice.call(document.querySelectorAll('.jsPanel-standard')).map(panel => {\n          return panel.style.zIndex;\n        });\n\n        if (Math.max(...newArr) > self.style.zIndex) {\n          self.style.zIndex = jsPanel.zi.next();\n        }\n\n        jsPanel.resetZi();\n      }\n\n      document.dispatchEvent(jspanelfronted);\n\n      if (callback) {\n        callback.call(self, self);\n      }\n\n      if (options.onfronted && execOnFrontedCallbacks) {\n        jsPanel.processCallbacks(self, options.onfronted, 'every', self.status);\n      }\n\n      return self;\n    };\n\n    self.snap = (pos, alreadySnapped = false) => {\n      // store panel size before it snaps, only if not snapped already\n      if (!alreadySnapped) {\n        self.currentData.beforeSnap = {\n          width: self.currentData.width,\n          height: self.currentData.height\n        };\n      } // snap panel\n\n\n      if (pos && typeof pos === 'function' && !alreadySnapped) {\n        pos.call(self, self, self.snappableTo);\n      } else if (pos !== false) {\n        let offsets = [0, 0];\n\n        if (self.options.dragit.snap.containment) {\n          if (self.options.dragit.containment) {\n            const containment = jsPanel.pOcontainment(self.options.dragit.containment),\n                  position = self.snappableTo;\n\n            if (position.startsWith('left')) {\n              offsets[0] = containment[3];\n            } else if (position.startsWith('right')) {\n              offsets[0] = -containment[1];\n            }\n\n            if (position.endsWith('top')) {\n              offsets[1] = containment[0];\n            } else if (position.endsWith('bottom')) {\n              offsets[1] = -containment[2];\n            }\n          }\n        }\n\n        self.reposition(`${self.snappableTo} ${offsets[0]} ${offsets[1]}`);\n      }\n\n      if (!alreadySnapped) {\n        self.snapped = self.snappableTo;\n      }\n    };\n\n    self.move = (target, cb) => {\n      let overlaps = self.overlaps(target, 'paddingbox'),\n          source = self.parentElement;\n      target.appendChild(self);\n      self.options.container = target;\n      self.style.left = overlaps.left + 'px';\n      self.style.top = overlaps.top + 'px';\n      self.saveCurrentDimensions();\n      self.saveCurrentPosition();\n      self.calcSizeFactors(); // important for option.onContainerResize\n\n      if (cb) {\n        cb.call(self, self, target, source);\n      }\n\n      return self;\n    };\n\n    self.closeChildpanels = cb => {\n      self.getChildpanels().forEach(item => item.close());\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.getChildpanels = cb => {\n      const childpanels = self.content.querySelectorAll('.jsPanel');\n\n      if (cb) {\n        childpanels.forEach((panel, index, list) => {\n          cb.call(panel, panel, index, list);\n        });\n      }\n\n      return childpanels;\n    };\n\n    self.isChildpanel = cb => {\n      const pp = self.closest('.jsPanel-content'),\n            parentpanel = pp ? pp.parentElement : null;\n\n      if (cb) {\n        cb.call(self, self, parentpanel);\n      } // if panel is childpanel of another panel returns parentpanel, otherwise false\n\n\n      return pp ? parentpanel : false;\n    };\n\n    self.contentRemove = cb => {\n      jsPanel.emptyNode(self.content);\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.createMinimizedReplacement = () => {\n      const tpl = jsPanel.createMinimizedTemplate(),\n            color = window.getComputedStyle(self.headertitle).color,\n            selfStyles = window.getComputedStyle(self),\n            font = options.iconfont,\n            controlbar = tpl.querySelector('.jsPanel-controlbar'); // if panel background is an image (that includes gradients) instead of a color value\n\n      if (self.options.header !== 'auto-show-hide') {\n        jsPanel.setStyle(tpl, {\n          backgroundColor: selfStyles.backgroundColor,\n          backgroundPositionX: selfStyles.backgroundPositionX,\n          backgroundPositionY: selfStyles.backgroundPositionY,\n          backgroundRepeat: selfStyles.backgroundRepeat,\n          backgroundAttachment: selfStyles.backgroundAttachment,\n          backgroundImage: selfStyles.backgroundImage,\n          backgroundSize: selfStyles.backgroundSize,\n          backgroundOrigin: selfStyles.backgroundOrigin,\n          backgroundClip: selfStyles.backgroundClip\n        });\n      } else {\n        tpl.style.backgroundColor = window.getComputedStyle(self.header).backgroundColor;\n      }\n\n      tpl.id = self.id + '-min';\n      tpl.querySelector('.jsPanel-headerbar').replaceChild(self.headerlogo.cloneNode(true), tpl.querySelector('.jsPanel-headerlogo'));\n      tpl.querySelector('.jsPanel-titlebar').replaceChild(self.headertitle.cloneNode(true), tpl.querySelector('.jsPanel-title'));\n      tpl.querySelector('.jsPanel-titlebar').setAttribute('title', self.headertitle.textContent);\n      tpl.querySelector('.jsPanel-title').style.color = color;\n      controlbar.style.color = color;\n      controlbar.querySelectorAll('button').forEach(btn => {\n        btn.style.color = color;\n      });\n      ['jsPanel-hdr-dark', 'jsPanel-hdr-light'].forEach(item => {\n        if (self.header.classList.contains(item)) {\n          tpl.querySelector('.jsPanel-hdr').classList.add(item);\n        }\n      }); // set iconfont\n\n      self.setIconfont(font, tpl);\n\n      if (self.dataset.btnnormalize === 'enabled') {\n        jsPanel.pointerup.forEach(evt => {\n          tpl.querySelector('.jsPanel-btn-normalize').addEventListener(evt, e => {\n            e.preventDefault();\n\n            if (e.button && e.button > 0) {\n              return false;\n            }\n\n            self.normalize();\n          });\n        });\n      } else {\n        controlbar.querySelector('.jsPanel-btn-normalize').style.display = 'none';\n      }\n\n      if (self.dataset.btnmaximize === 'enabled') {\n        jsPanel.pointerup.forEach(evt => {\n          tpl.querySelector('.jsPanel-btn-maximize').addEventListener(evt, e => {\n            e.preventDefault();\n\n            if (e.button && e.button > 0) {\n              return false;\n            }\n\n            self.maximize();\n          });\n        });\n      } else {\n        controlbar.querySelector('.jsPanel-btn-maximize').style.display = 'none';\n      }\n\n      if (self.dataset.btnclose === 'enabled') {\n        jsPanel.pointerup.forEach(evt => {\n          tpl.querySelector('.jsPanel-btn-close').addEventListener(evt, e => {\n            e.preventDefault();\n\n            if (e.button && e.button > 0) {\n              return false;\n            }\n\n            self.close(null, true);\n          });\n        });\n      } else {\n        controlbar.querySelector('.jsPanel-btn-close').style.display = 'none';\n      }\n\n      return tpl;\n    };\n\n    self.removeMinimizedReplacement = () => {\n      const elmt = document.getElementById(`${self.id}-min`);\n\n      if (elmt) {\n        elmt.parentElement.removeChild(elmt);\n      }\n    };\n\n    self.drag = (options = {}) => {\n      let dragstarted, dragElmt, opts;\n      const jspaneldragstart = new CustomEvent('jspaneldragstart', {\n        detail: self.id\n      }),\n            jspaneldrag = new CustomEvent('jspaneldrag', {\n        detail: self.id\n      }),\n            jspaneldragstop = new CustomEvent('jspaneldragstop', {\n        detail: self.id\n      }); // make panel available as event object property 'panel'\n\n      [jspaneldragstart, jspaneldrag, jspaneldragstop].forEach(evt => {\n        evt.panel = self;\n      });\n\n      const camelcase = string => {\n        // 'left-top' converted to 'snapLeftTop'\n        let str = string.split('-');\n        str.forEach((word, index) => {\n          str[index] = word.charAt(0).toUpperCase() + word.slice(1);\n        });\n        return 'snap' + str.join('');\n      };\n\n      function windowListener(e) {\n        if (e.relatedTarget === null) {\n          jsPanel.pointermove.forEach(evt => {\n            document.removeEventListener(evt, dragElmt, false);\n            self.style.opacity = 1;\n          });\n        }\n      } // attach handler to each drag handle\n\n\n      let handles = options.handles || jsPanel.defaults.dragit.handles;\n      let cursor = options.cursor || jsPanel.defaults.dragit.cursor;\n\n      function pointerUpHandlerDragit(e) {\n        jsPanel.pointermove.forEach(e => {\n          document.removeEventListener(e, dragElmt);\n        });\n        jsPanel.removeSnapAreas();\n\n        if (dragstarted) {\n          self.style.opacity = 1;\n          dragstarted = undefined;\n\n          if (opts.snap) {\n            switch (self.snappableTo) {\n              case 'left-top':\n                self.snap(opts.snap.snapLeftTop);\n                break;\n\n              case 'center-top':\n                self.snap(opts.snap.snapCenterTop);\n                break;\n\n              case 'right-top':\n                self.snap(opts.snap.snapRightTop);\n                break;\n\n              case 'right-center':\n                self.snap(opts.snap.snapRightCenter);\n                break;\n\n              case 'right-bottom':\n                self.snap(opts.snap.snapRightBottom);\n                break;\n\n              case 'center-bottom':\n                self.snap(opts.snap.snapCenterBottom);\n                break;\n\n              case 'left-bottom':\n                self.snap(opts.snap.snapLeftBottom);\n                break;\n\n              case 'left-center':\n                self.snap(opts.snap.snapLeftCenter);\n                break;\n            }\n\n            if (opts.snap.callback && self.snappableTo && typeof opts.snap.callback === 'function') {\n              opts.snap.callback.call(self, self);\n\n              if (opts.snap.repositionOnSnap && opts.snap[camelcase(self.snappableTo)] !== false) {\n                self.repositionOnSnap(self.snappableTo);\n              }\n            }\n\n            if (self.snappableTo && opts.snap.repositionOnSnap && opts.snap[camelcase(self.snappableTo)]) {\n              self.repositionOnSnap(self.snappableTo);\n            }\n          } // opts.drop\n\n\n          if (self.droppableTo && self.droppableTo) {\n            let sourceContainer = self.parentElement;\n            self.move(self.droppableTo);\n\n            if (opts.drop.callback) {\n              opts.drop.callback.call(self, self, self.droppableTo, sourceContainer);\n            }\n          }\n\n          document.dispatchEvent(jspaneldragstop);\n\n          if (opts.stop.length) {\n            let stopStyles = window.getComputedStyle(self),\n                paneldata = {\n              left: parseFloat(stopStyles.left),\n              top: parseFloat(stopStyles.top),\n              width: parseFloat(stopStyles.width),\n              height: parseFloat(stopStyles.height)\n            };\n            jsPanel.processCallbacks(self, opts.stop, false, paneldata, e);\n          }\n\n          self.saveCurrentPosition();\n          self.calcSizeFactors(); // important for options onwindowresize/onparentresize\n        }\n\n        self.controlbar.style.pointerEvents = 'inherit';\n        self.content.style.pointerEvents = 'inherit'; // restore other panel's css pointer-events\n\n        document.querySelectorAll('iframe').forEach(frame => {\n          frame.style.pointerEvents = 'auto';\n        });\n        document.removeEventListener(e, pointerUpHandlerDragit);\n      }\n\n      self.querySelectorAll(handles).forEach(handle => {\n        handle.style.touchAction = 'none';\n        handle.style.cursor = cursor;\n        jsPanel.pointerdown.forEach(evt => {\n          handle.addEventListener(evt, e => {\n            // disable dragging for all mouse buttons but left\n            if (e.button && e.button > 0) {\n              return false;\n            } // setup and normalize dragit options\n\n\n            opts = Object.assign({}, jsPanel.defaults.dragit, options);\n\n            if (opts.disableOnMaximized && self.status === 'maximized') {\n              return false;\n            }\n\n            if (opts.containment || opts.containment === 0) {\n              opts.containment = jsPanel.pOcontainment(opts.containment);\n            }\n\n            if (opts.grid) {\n              if (Array.isArray(opts.grid)) {\n                if (opts.grid.length === 1) {\n                  opts.grid[1] = opts.grid[0];\n                }\n              }\n            }\n\n            if (opts.snap) {\n              if (typeof opts.snap === 'object') {\n                opts.snap = Object.assign({}, jsPanel.defaultSnapConfig, opts.snap);\n              } else {\n                opts.snap = jsPanel.defaultSnapConfig;\n              }\n            } // footer elmts with the class \"jsPanel-ftr-btn\" don't drag a panel\n            // do not compare e.target with e.currentTarget because there might be footer elmts supposed to drag the panel\n            // noinspection JSUnresolvedFunction\n\n\n            if (e.target.closest('.jsPanel-ftr-btn')) {\n              return;\n            }\n\n            self.controlbar.style.pointerEvents = 'none';\n            self.content.style.pointerEvents = 'none'; // without this code handler might not be unbound when content has iframe or object tag\n            // prevents iframes in other panel from interfering with drag action of dragged panel\n\n            document.querySelectorAll('iframe').forEach(frame => {\n              frame.style.pointerEvents = 'none';\n            });\n            let startStyles = window.getComputedStyle(self),\n                startLeft = parseFloat(startStyles.left),\n                startTop = parseFloat(startStyles.top),\n                startWidth = parseFloat(startStyles.width),\n                startHeight = parseFloat(startStyles.height),\n                psx = e.touches ? e.touches[0].clientX : e.clientX,\n                // pointer x on mousedown (don't use pageX, doesn't work on FF for Android)\n            psy = e.touches ? e.touches[0].clientY : e.clientY,\n                // same as above\n            parent = self.parentElement,\n                parentRect = parent.getBoundingClientRect(),\n                parentStyles = window.getComputedStyle(parent),\n                scaleFactor = self.getScaleFactor(),\n                startLeftCorrection = 0,\n                scrollbarwidths = jsPanel.getScrollbarWidth(parent); // function actually dragging the elmt\n\n            dragElmt = e => {\n              e.preventDefault();\n\n              if (!dragstarted) {\n                document.dispatchEvent(jspaneldragstart);\n                self.style.opacity = opts.opacity; // if configured restore panel size to values before snap and reposition reasonable before drag actually starts\n\n                if (self.snapped && opts.snap.resizeToPreSnap && self.currentData.beforeSnap) {\n                  self.resize(self.currentData.beforeSnap.width + ' ' + self.currentData.beforeSnap.height);\n                  self.setControls(['.jsPanel-btn-normalize']);\n                  let intermediateStyles = self.getBoundingClientRect(),\n                      delta = psx - (intermediateStyles.left + intermediateStyles.width),\n                      wHalf = intermediateStyles.width / 2;\n\n                  if (delta > -wHalf) {\n                    startLeftCorrection = delta + wHalf;\n                  }\n                }\n\n                self.front();\n                self.snapped = false; // panel is maximized on dragstart\n\n                if (self.status === 'maximized') {\n                  self.setControls(['.jsPanel-btn-normalize']);\n                  self.status = 'normalized';\n                } // opts.drop\n\n\n                if (opts.drop && opts.drop.dropZones) {\n                  //opts.drop.dropZones = opts.drop.dropZones.map(zone => jsPanel.pOcontainer(zone));\n                  let dropzones = opts.drop.dropZones.map(zone => jsPanel.pOcontainer(zone)); // -> array where each item is a NodeList\n\n                  let dropzonelist = [];\n                  dropzones.forEach(function (nodelist) {\n                    if (nodelist.length) {\n                      // an element node does not have a length property\n                      nodelist.forEach(function (node) {\n                        dropzonelist.push(node);\n                      });\n                    } else {\n                      dropzonelist.push(nodelist);\n                    }\n                  }); // filter list to have only unique values\n\n                  dropzonelist = dropzonelist.filter(function (value, index, self) {\n                    return self.indexOf(value) === index;\n                  });\n                  opts.drop.dropZones = dropzonelist;\n                } // dragstart callback\n\n\n                if (opts.start.length) {\n                  jsPanel.processCallbacks(self, opts.start, false, {\n                    left: startLeft,\n                    top: startTop,\n                    width: startWidth,\n                    height: startHeight\n                  }, e);\n                }\n              }\n\n              dragstarted = 1;\n              let elmtL, elmtL2, elmtT, elmtT2, elmtR, elmtR2, elmtB, elmtB2, right, bottom;\n              let pmx = e.touches ? e.touches[0].clientX : e.clientX,\n                  // current pointer x while pointer moves (don't use pageX, doesn't work on FF for Android)\n              pmy = e.touches ? e.touches[0].clientY : e.clientY,\n                  // current pointer y while pointer moves (don't use pageY, doesn't work on FF for Android)\n              dragStyles = window.getComputedStyle(self),\n                  // get current styles while dragging\n              overlaps; // EDGE reports \"auto\" instead of pixel value using getComputedStyle(), so some values need to be calculated different\n              // this whole block of code could be removed if EDGE not based on Chromium doesn't need to be supported\n\n              if (parent === document.body) {\n                let elmtRect = self.getBoundingClientRect();\n                right = window.innerWidth - parseInt(parentStyles.borderLeftWidth, 10) - parseInt(parentStyles.borderRightWidth, 10) - (elmtRect.left + elmtRect.width);\n                bottom = window.innerHeight - parseInt(parentStyles.borderTopWidth, 10) - parseInt(parentStyles.borderBottomWidth, 10) - (elmtRect.top + elmtRect.height);\n              } else {\n                right = parseInt(parentStyles.width, 10) - parseInt(parentStyles.borderLeftWidth, 10) - parseInt(parentStyles.borderRightWidth, 10) - (parseInt(dragStyles.left, 10) + parseInt(dragStyles.width, 10));\n                bottom = parseInt(parentStyles.height, 10) - parseInt(parentStyles.borderTopWidth, 10) - parseInt(parentStyles.borderBottomWidth, 10) - (parseInt(dragStyles.top, 10) + parseInt(dragStyles.height, 10));\n              } // -- -- --\n\n\n              elmtL = parseFloat(dragStyles.left);\n              elmtT = parseFloat(dragStyles.top);\n              elmtR = right; // replace line with parseFloat(dragStyles.right); if EDGE code block above is removed\n\n              elmtB = bottom; // replace line with parseFloat(dragStyles.bottom); if EDGE code block above is removed\n\n              if (opts.snap) {\n                if (opts.snap.trigger === 'panel') {\n                  elmtL2 = elmtL ** 2;\n                  elmtT2 = elmtT ** 2;\n                  elmtR2 = elmtR ** 2;\n                  elmtB2 = elmtB ** 2;\n                } else if (opts.snap.trigger === 'pointer') {\n                  if (self.options.container === 'window') {\n                    elmtL = pmx;\n                    elmtT = pmy;\n                    elmtR = window.innerWidth - pmx;\n                    elmtB = window.innerHeight - pmy;\n                    elmtL2 = pmx ** 2;\n                    elmtT2 = elmtT ** 2;\n                    elmtR2 = elmtR ** 2;\n                    elmtB2 = elmtB ** 2;\n                  } else {\n                    overlaps = self.overlaps(parent, 'paddingbox', e);\n                    elmtL = overlaps.pointer.left;\n                    elmtT = overlaps.pointer.top;\n                    elmtR = overlaps.pointer.right;\n                    elmtB = overlaps.pointer.bottom;\n                    elmtL2 = overlaps.pointer.left ** 2;\n                    elmtT2 = overlaps.pointer.top ** 2;\n                    elmtR2 = overlaps.pointer.right ** 2;\n                    elmtB2 = overlaps.pointer.bottom ** 2;\n                  }\n                }\n              }\n\n              let lefttopVectorDrag = Math.sqrt(elmtL2 + elmtT2),\n                  leftbottomVectorDrag = Math.sqrt(elmtL2 + elmtB2),\n                  righttopVectorDrag = Math.sqrt(elmtR2 + elmtT2),\n                  rightbottomVectorDrag = Math.sqrt(elmtR2 + elmtB2),\n                  horizontalDeltaDrag = Math.abs(elmtL - elmtR) / 2,\n                  verticalDeltaDrag = Math.abs(elmtT - elmtB) / 2,\n                  leftVectorDrag = Math.sqrt(elmtL2 + verticalDeltaDrag ** 2),\n                  topVectorDrag = Math.sqrt(elmtT2 + horizontalDeltaDrag ** 2),\n                  rightVectorDrag = Math.sqrt(elmtR2 + verticalDeltaDrag ** 2),\n                  bottomVectorDrag = Math.sqrt(elmtB2 + horizontalDeltaDrag ** 2); // prevent selections while dragging\n\n              window.getSelection().removeAllRanges(); // trigger drag permanently while dragging\n\n              document.dispatchEvent(jspaneldrag); // move elmt and apply axis option\n\n              if (!opts.axis || opts.axis === 'x') {\n                self.style.left = startLeft + (pmx - psx) / scaleFactor.x + startLeftCorrection + 'px'; // set new css left of elmt depending on opts.axis\n              }\n\n              if (!opts.axis || opts.axis === 'y') {\n                self.style.top = startTop + (pmy - psy) / scaleFactor.y + 'px'; // set new css top of elmt depending on opts.axis\n              } // apply grid option\n\n\n              if (opts.grid) {\n                let grid = opts.grid,\n                    axis = opts.axis; // formula rounds to nearest multiple of grid\n                // https://www.webveteran.com/blog/web-coding/javascript-round-to-any-multiple-of-a-specific-number/\n\n                let x = grid[0] * Math.round((startLeft + (pmx - psx)) / grid[0]),\n                    y = grid[1] * Math.round((startTop + (pmy - psy)) / grid[1]);\n\n                if (!axis || axis === 'x') {\n                  self.style.left = `${x}px`;\n                }\n\n                if (!axis || axis === 'y') {\n                  self.style.top = `${y}px`;\n                }\n              } // apply containment option\n\n\n              if (opts.containment || opts.containment === 0) {\n                let containment = opts.containment;\n                let maxLeft, maxTop; // calc maxLeft and maxTop (minLeft and MinTop is equal to containment setting)\n\n                if (self.options.container === 'window') {\n                  maxLeft = window.innerWidth - parseFloat(dragStyles.width) - containment[1] - scrollbarwidths.y;\n                  maxTop = window.innerHeight - parseFloat(dragStyles.height) - containment[2] - scrollbarwidths.x;\n                } else {\n                  let xCorr = parseFloat(parentStyles.borderLeftWidth) + parseFloat(parentStyles.borderRightWidth),\n                      yCorr = parseFloat(parentStyles.borderTopWidth) + parseFloat(parentStyles.borderBottomWidth);\n                  maxLeft = parentRect.width / scaleFactor.x - parseFloat(dragStyles.width) - containment[1] - xCorr - scrollbarwidths.y;\n                  maxTop = parentRect.height / scaleFactor.y - parseFloat(dragStyles.height) - containment[2] - yCorr - scrollbarwidths.x;\n                }\n\n                if (parseFloat(self.style.left) <= containment[3]) {\n                  self.style.left = containment[3] + 'px';\n                }\n\n                if (parseFloat(self.style.top) <= containment[0]) {\n                  self.style.top = containment[0] + 'px';\n                }\n\n                if (parseFloat(self.style.left) >= maxLeft) {\n                  self.style.left = maxLeft + 'px';\n                }\n\n                if (parseFloat(self.style.top) >= maxTop) {\n                  self.style.top = maxTop + 'px';\n                }\n              } // callback while dragging\n\n\n              if (opts.drag.length) {\n                let paneldata = {\n                  left: elmtL,\n                  top: elmtT,\n                  right: elmtR,\n                  bottom: elmtB,\n                  width: parseFloat(dragStyles.width),\n                  height: parseFloat(dragStyles.height)\n                };\n                jsPanel.processCallbacks(self, opts.drag, false, paneldata, e);\n              } // apply snap options\n\n\n              if (opts.snap) {\n                let snapSens = opts.snap.sensitivity,\n                    topSensAreaLength = parent === document.body ? window.innerWidth / 8 : parentRect.width / 8,\n                    sideSensAreaLength = parent === document.body ? window.innerHeight / 8 : parentRect.height / 8;\n                self.snappableTo = false;\n                jsPanel.removeSnapAreas();\n\n                if (lefttopVectorDrag < snapSens) {\n                  if (opts.snap.snapLeftTop !== false) {\n                    if (!opts.snap.active || opts.snap.active === 'both') {\n                      self.snappableTo = 'left-top';\n                      jsPanel.createSnapArea(self, 'lt', snapSens);\n                    } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\n                      if (overlaps.pointer.left > 0 && overlaps.pointer.top > 0) {\n                        self.snappableTo = 'left-top';\n                        jsPanel.createSnapArea(self, 'lt', snapSens);\n                      } else {\n                        self.snappableTo = false;\n                        jsPanel.removeSnapAreas();\n                      }\n                    }\n                  }\n                } else if (leftbottomVectorDrag < snapSens) {\n                  if (opts.snap.snapLeftBottom !== false) {\n                    if (!opts.snap.active || opts.snap.active === 'both') {\n                      self.snappableTo = 'left-bottom';\n                      jsPanel.createSnapArea(self, 'lb', snapSens);\n                    } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\n                      if (overlaps.pointer.left > 0 && overlaps.pointer.bottom > 0) {\n                        self.snappableTo = 'left-bottom';\n                        jsPanel.createSnapArea(self, 'lb', snapSens);\n                      } else {\n                        self.snappableTo = false;\n                        jsPanel.removeSnapAreas();\n                      }\n                    }\n                  }\n                } else if (righttopVectorDrag < snapSens) {\n                  if (opts.snap.snapRightTop !== false) {\n                    if (!opts.snap.active || opts.snap.active === 'both') {\n                      self.snappableTo = 'right-top';\n                      jsPanel.createSnapArea(self, 'rt', snapSens);\n                    } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\n                      if (overlaps.pointer.right > 0 && overlaps.pointer.top > 0) {\n                        self.snappableTo = 'right-top';\n                        jsPanel.createSnapArea(self, 'rt', snapSens);\n                      } else {\n                        self.snappableTo = false;\n                        jsPanel.removeSnapAreas();\n                      }\n                    }\n                  }\n                } else if (rightbottomVectorDrag < snapSens) {\n                  if (opts.snap.snapRightBottom !== false) {\n                    if (!opts.snap.active || opts.snap.active === 'both') {\n                      self.snappableTo = 'right-bottom';\n                      jsPanel.createSnapArea(self, 'rb', snapSens);\n                    } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\n                      if (overlaps.pointer.right > 0 && overlaps.pointer.bottom > 0) {\n                        self.snappableTo = 'right-bottom';\n                        jsPanel.createSnapArea(self, 'rb', snapSens);\n                      } else {\n                        self.snappableTo = false;\n                        jsPanel.removeSnapAreas();\n                      }\n                    }\n                  }\n                } else if (elmtT < snapSens && topVectorDrag < topSensAreaLength) {\n                  if (opts.snap.snapCenterTop !== false) {\n                    if (!opts.snap.active || opts.snap.active === 'both') {\n                      self.snappableTo = 'center-top';\n                      jsPanel.createSnapArea(self, 'ct', snapSens);\n                    } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\n                      if (overlaps.pointer.top > 0) {\n                        self.snappableTo = 'center-top';\n                        jsPanel.createSnapArea(self, 'ct', snapSens);\n                      } else {\n                        self.snappableTo = false;\n                        jsPanel.removeSnapAreas();\n                      }\n                    }\n                  }\n                } else if (elmtL < snapSens && leftVectorDrag < sideSensAreaLength) {\n                  if (opts.snap.snapLeftCenter !== false) {\n                    if (!opts.snap.active || opts.snap.active === 'both') {\n                      self.snappableTo = 'left-center';\n                      jsPanel.createSnapArea(self, 'lc', snapSens);\n                    } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\n                      if (overlaps.pointer.left > 0) {\n                        self.snappableTo = 'left-center';\n                        jsPanel.createSnapArea(self, 'lc', snapSens);\n                      } else {\n                        self.snappableTo = false;\n                        jsPanel.removeSnapAreas();\n                      }\n                    }\n                  }\n                } else if (elmtR < snapSens && rightVectorDrag < sideSensAreaLength) {\n                  if (opts.snap.snapRightCenter !== false) {\n                    if (!opts.snap.active || opts.snap.active === 'both') {\n                      self.snappableTo = 'right-center';\n                      jsPanel.createSnapArea(self, 'rc', snapSens);\n                    } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\n                      if (overlaps.pointer.right > 0) {\n                        self.snappableTo = 'right-center';\n                        jsPanel.createSnapArea(self, 'rc', snapSens);\n                      } else {\n                        self.snappableTo = false;\n                        jsPanel.removeSnapAreas();\n                      }\n                    }\n                  }\n                } else if (elmtB < snapSens && bottomVectorDrag < topSensAreaLength) {\n                  if (opts.snap.snapCenterBottom !== false) {\n                    if (!opts.snap.active || opts.snap.active === 'both') {\n                      self.snappableTo = 'center-bottom';\n                      jsPanel.createSnapArea(self, 'cb', snapSens);\n                    } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\n                      if (overlaps.pointer.bottom > 0) {\n                        self.snappableTo = 'center-bottom';\n                        jsPanel.createSnapArea(self, 'cb', snapSens);\n                      } else {\n                        self.snappableTo = false;\n                        jsPanel.removeSnapAreas();\n                      }\n                    }\n                  }\n                }\n              } // opts.drop\n\n\n              if (opts.drop && opts.drop.dropZones) {\n                // IE doesn't offer document.elementsFromPoint() but document.msElementsFromPoint()\n                let elementsFromPoint = jsPanel.isIE ? 'msElementsFromPoint' : 'elementsFromPoint';\n                let elementsFrom = document[elementsFromPoint](e.clientX, e.clientY); // document.msElementsFromPoint() returns a nodeList -> convert to array\n\n                if (!Array.isArray(elementsFrom)) {\n                  elementsFrom = Array.prototype.slice.call(elementsFrom);\n                }\n\n                opts.drop.dropZones.forEach(zone => {\n                  // Array.prototype.includes() needs polyfill in IE\n                  if (elementsFrom.includes(zone)) {\n                    self.droppableTo = zone;\n                  }\n                }); // do not include following if statement in this.options.dragit.drop.dropZones.forEach !!!!\n\n                if (!elementsFrom.includes(self.droppableTo)) {\n                  self.droppableTo = false;\n                }\n              }\n            };\n\n            jsPanel.pointermove.forEach(e => {\n              document.addEventListener(e, dragElmt);\n            }); // remove drag handler when mouse leaves browser window (mouseleave doesn't work)\n\n            window.addEventListener('mouseout', windowListener, false);\n          });\n        });\n        jsPanel.pointerup.forEach(event => {\n          document.addEventListener(event, pointerUpHandlerDragit);\n          window.removeEventListener('mouseout', windowListener);\n        }); // dragit is initialized - now disable if set\n\n        if (options.disable) {\n          handle.style.pointerEvents = 'none';\n        }\n      });\n      return self;\n    };\n\n    self.dragit = string => {\n      const dragitOptions = Object.assign({}, jsPanel.defaults.dragit, options.dragit),\n            handles = self.querySelectorAll(dragitOptions.handles);\n\n      if (string === 'disable') {\n        handles.forEach(handle => {\n          handle.style.pointerEvents = 'none';\n        });\n      } else {\n        handles.forEach(handle => {\n          handle.style.pointerEvents = 'auto';\n        });\n      }\n\n      return self;\n    };\n\n    self.sizeit = (options = {}) => {\n      const jspanelresizestart = new CustomEvent('jspanelresizestart', {\n        detail: self.id\n      }),\n            jspanelresize = new CustomEvent('jspanelresize', {\n        detail: self.id\n      }),\n            jspanelresizestop = new CustomEvent('jspanelresizestop', {\n        detail: self.id\n      }); // make panel available as event object property 'panel'\n\n      [jspanelresizestart, jspanelresize, jspanelresizestop].forEach(evt => {\n        evt.panel = self;\n      });\n      let opts = {},\n          resizePanel,\n          resizestarted,\n          w,\n          h,\n          startWidth,\n          startHeight;\n      opts.handles = options.handles || jsPanel.defaults.resizeit.handles;\n      opts.handles.split(',').forEach(item => {\n        const node = document.createElement('DIV');\n        node.className = `jsPanel-resizeit-handle jsPanel-resizeit-${item.trim()}`; //node.style.zIndex = 90;\n\n        self.append(node);\n      }); // cache option aspectRatio of original resizeit configuration (is restored on pointerup)\n\n      let cachedOptionAspectRatio = options.aspectRatio ? options.aspectRatio : false;\n\n      function windowListener(e) {\n        if (e.relatedTarget === null) {\n          jsPanel.pointermove.forEach(evt => {\n            document.removeEventListener(evt, resizePanel, false);\n          });\n        }\n      }\n\n      function pointerUpHandlerResizeit(e) {\n        jsPanel.pointermove.forEach(evt => {\n          document.removeEventListener(evt, resizePanel, false);\n        });\n\n        if (e.target.classList && e.target.classList.contains('jsPanel-resizeit-handle')) {\n          let isLeftChange,\n              isTopChange,\n              cl = e.target.className;\n\n          if (cl.match(/jsPanel-resizeit-nw|jsPanel-resizeit-w|jsPanel-resizeit-sw/i)) {\n            isLeftChange = true;\n          }\n\n          if (cl.match(/jsPanel-resizeit-nw|jsPanel-resizeit-n|jsPanel-resizeit-ne/i)) {\n            isTopChange = true;\n          } // snap panel to grid (doesn't work that well if inside function resizePanel)\n\n\n          if (opts.grid && Array.isArray(opts.grid)) {\n            if (opts.grid.length === 1) {\n              opts.grid[1] = opts.grid[0];\n            }\n\n            const cw = parseFloat(self.style.width),\n                  ch = parseFloat(self.style.height),\n                  modW = cw % opts.grid[0],\n                  modH = ch % opts.grid[1],\n                  cx = parseFloat(self.style.left),\n                  cy = parseFloat(self.style.top),\n                  modX = cx % opts.grid[0],\n                  modY = cy % opts.grid[1];\n\n            if (modW < opts.grid[0] / 2) {\n              self.style.width = cw - modW + 'px';\n            } else {\n              self.style.width = cw + (opts.grid[0] - modW) + 'px';\n            }\n\n            if (modH < opts.grid[1] / 2) {\n              self.style.height = ch - modH + 'px';\n            } else {\n              self.style.height = ch + (opts.grid[1] - modH) + 'px';\n            }\n\n            if (isLeftChange) {\n              if (modX < opts.grid[0] / 2) {\n                self.style.left = cx - modX + 'px';\n              } else {\n                self.style.left = cx + (opts.grid[0] - modX) + 'px';\n              }\n            }\n\n            if (isTopChange) {\n              if (modY < opts.grid[1] / 2) {\n                self.style.top = cy - modY + 'px';\n              } else {\n                self.style.top = cy + (opts.grid[1] - modY) + 'px';\n              }\n            }\n          }\n        }\n\n        if (resizestarted) {\n          self.content.style.pointerEvents = 'inherit';\n          resizestarted = undefined;\n          self.saveCurrentDimensions();\n          self.saveCurrentPosition();\n          self.calcSizeFactors();\n          let smallifyBtn = self.controlbar.querySelector('.jsPanel-btn-smallify');\n          let elmtRect = self.getBoundingClientRect();\n\n          if (smallifyBtn && elmtRect.height > startHeight + 5) {\n            smallifyBtn.style.transform = 'rotate(0deg)';\n          }\n\n          document.dispatchEvent(jspanelresizestop);\n\n          if (opts.stop.length) {\n            let stopStyles = window.getComputedStyle(self),\n                paneldata = {\n              left: parseFloat(stopStyles.left),\n              top: parseFloat(stopStyles.top),\n              width: parseFloat(stopStyles.width),\n              height: parseFloat(stopStyles.height)\n            };\n            jsPanel.processCallbacks(self, opts.stop, false, paneldata, e);\n          }\n        }\n\n        self.content.style.pointerEvents = 'inherit'; // restore other panel's css pointer-events\n\n        document.querySelectorAll('iframe').forEach(frame => {\n          frame.style.pointerEvents = 'auto';\n        }); // restore option aspectRatio to original configuration\n\n        opts.aspectRatio = cachedOptionAspectRatio;\n        document.removeEventListener(e, pointerUpHandlerResizeit);\n      }\n\n      self.querySelectorAll('.jsPanel-resizeit-handle').forEach(handle => {\n        handle.style.touchAction = 'none';\n        jsPanel.pointerdown.forEach(event => {\n          handle.addEventListener(event, e => {\n            // prevent window scroll while resizing elmt\n            e.preventDefault();\n            e.stopPropagation(); // disable resizing for all mouse buttons but left\n\n            if (e.button && e.button > 0) {\n              return false;\n            } // factor is needed only for the modifier key Shift feature\n\n\n            let factor = 1; // setup and normalize resizeit options\n\n            opts = Object.assign({}, jsPanel.defaults.resizeit, options);\n\n            if (opts.containment || opts.containment === 0) {\n              opts.containment = jsPanel.pOcontainment(opts.containment);\n            } // legacy line: aspectRatio should be either 'panel' or 'content', not just true\n\n\n            if (opts.aspectRatio && opts.aspectRatio === true) {\n              opts.aspectRatio = 'panel';\n            } // set aspectRatio according to modifier key\n\n\n            if (jsPanel.modifier) {\n              let modifier = jsPanel.modifier;\n\n              if (modifier.altKey) {\n                opts.aspectRatio = 'content';\n              } else if (modifier.ctrlKey) {\n                opts.aspectRatio = 'panel';\n              } else if (modifier.shiftKey) {\n                opts.aspectRatio = false;\n                factor = 2; // does work only with 2 as value\n              }\n            } // noinspection JSUnresolvedFunction\n\n\n            let maxWidth = typeof opts.maxWidth === 'function' ? opts.maxWidth() : opts.maxWidth || 10000,\n                maxHeight = typeof opts.maxHeight === 'function' ? opts.maxHeight() : opts.maxHeight || 10000,\n                minWidth = typeof opts.minWidth === 'function' ? opts.minWidth() : opts.minWidth,\n                minHeight = typeof opts.minHeight === 'function' ? opts.minHeight() : opts.minHeight;\n            self.content.style.pointerEvents = 'none'; // prevents iframes in other panel from interfering with resize action of dragged panel\n\n            document.querySelectorAll('iframe').forEach(frame => {\n              frame.style.pointerEvents = 'none';\n            }); // noinspection JSUnresolvedVariable\n\n            const elmtParent = self.parentElement,\n                  elmtParentTagName = elmtParent.tagName.toLowerCase(),\n                  elmtRect = self.getBoundingClientRect(),\n                  elmtParentRect = elmtParent.getBoundingClientRect(),\n                  elmtParentStyles = window.getComputedStyle(elmtParent, null),\n                  elmtParentBLW = parseInt(elmtParentStyles.borderLeftWidth, 10),\n                  elmtParentBTW = parseInt(elmtParentStyles.borderTopWidth, 10),\n                  elmtParentPosition = elmtParentStyles.getPropertyValue('position'),\n                  startX = e.clientX || e.touches[0].clientX,\n                  startY = e.clientY || e.touches[0].clientY,\n                  startRatio = startX / startY,\n                  resizeHandleClassList = e.target.classList,\n                  scaleFactor = self.getScaleFactor(),\n                  aspectRatio = elmtRect.width / elmtRect.height,\n                  elmtContentRect = self.content.getBoundingClientRect(),\n                  aspectRatioContent = elmtContentRect.width / elmtContentRect.height,\n                  hdrHeight = self.header.getBoundingClientRect().height,\n                  // needed in aspectRatio\n            ftrHeight = self.footer.getBoundingClientRect().height || 0; // needed in aspectRatio\n\n            let startLeft = elmtRect.left,\n                startTop = elmtRect.top,\n                maxWidthEast = 10000,\n                maxWidthWest = 10000,\n                maxHeightSouth = 10000,\n                maxHeightNorth = 10000;\n            startWidth = elmtRect.width;\n            startHeight = elmtRect.height;\n\n            if (elmtParentTagName !== 'body') {\n              startLeft = elmtRect.left - elmtParentRect.left + elmtParent.scrollLeft;\n              startTop = elmtRect.top - elmtParentRect.top + elmtParent.scrollTop;\n            } // calc min/max left/top values if containment is set - code from jsDraggable\n\n\n            if (elmtParentTagName === 'body' && opts.containment) {\n              maxWidthEast = document.documentElement.clientWidth - elmtRect.left;\n              maxHeightSouth = document.documentElement.clientHeight - elmtRect.top;\n              maxWidthWest = elmtRect.width + elmtRect.left;\n              maxHeightNorth = elmtRect.height + elmtRect.top;\n            } else {\n              // if panel is NOT in body\n              if (opts.containment) {\n                if (elmtParentPosition === 'static') {\n                  maxWidthEast = elmtParentRect.width - elmtRect.left + elmtParentBLW;\n                  maxHeightSouth = elmtParentRect.height + elmtParentRect.top - elmtRect.top + elmtParentBTW;\n                  maxWidthWest = elmtRect.width + (elmtRect.left - elmtParentRect.left) - elmtParentBLW;\n                  maxHeightNorth = elmtRect.height + (elmtRect.top - elmtParentRect.top) - elmtParentBTW;\n                } else {\n                  maxWidthEast = elmtParent.clientWidth - (elmtRect.left - elmtParentRect.left) / scaleFactor.x + elmtParentBLW;\n                  maxHeightSouth = elmtParent.clientHeight - (elmtRect.top - elmtParentRect.top) / scaleFactor.y + elmtParentBTW;\n                  maxWidthWest = (elmtRect.width + elmtRect.left - elmtParentRect.left) / scaleFactor.x - elmtParentBLW;\n                  maxHeightNorth = self.clientHeight + (elmtRect.top - elmtParentRect.top) / scaleFactor.y - elmtParentBTW;\n                }\n              }\n            } // if original opts.containment is array\n\n\n            if (opts.containment) {\n              maxWidthWest -= opts.containment[3];\n              maxHeightNorth -= opts.containment[0];\n              maxWidthEast -= opts.containment[1];\n              maxHeightSouth -= opts.containment[2];\n            } // calculate corrections for rotated panels\n\n\n            const computedStyle = window.getComputedStyle(self),\n                  wDif = parseFloat(computedStyle.width) - elmtRect.width,\n                  hDif = parseFloat(computedStyle.height) - elmtRect.height;\n            let xDif = parseFloat(computedStyle.left) - elmtRect.left,\n                yDif = parseFloat(computedStyle.top) - elmtRect.top;\n\n            if (elmtParent !== document.body) {\n              xDif += elmtParentRect.left;\n              yDif += elmtParentRect.top;\n            } // used in aspectRatio code\n\n\n            let borderTopWidth = parseInt(computedStyle.borderTopWidth, 10),\n                borderRightWidth = parseInt(computedStyle.borderRightWidth, 10),\n                borderBottomWidth = parseInt(computedStyle.borderBottomWidth, 10),\n                borderLeftWidth = parseInt(computedStyle.borderLeftWidth, 10);\n\n            resizePanel = evt => {\n              evt.preventDefault(); // trigger resizestarted only once per resize\n\n              if (!resizestarted) {\n                document.dispatchEvent(jspanelresizestart);\n\n                if (opts.start.length) {\n                  jsPanel.processCallbacks(self, opts.start, false, {\n                    width: startWidth,\n                    height: startHeight,\n                    left: startLeft,\n                    top: startTop\n                  }, evt);\n                }\n\n                self.front();\n\n                if (elmtRect.height > startHeight + 5) {\n                  self.status = 'normalized';\n                  self.setControls(['.jsPanel-btn-normalize']);\n                }\n              }\n\n              resizestarted = 1; // trigger resize permanently while resizing\n\n              document.dispatchEvent(jspanelresize); // possibly updated while resizing\n\n              let eventX = evt.touches ? evt.touches[0].clientX : evt.clientX,\n                  eventY = evt.touches ? evt.touches[0].clientY : evt.clientY,\n                  overlaps;\n\n              if (resizeHandleClassList.contains('jsPanel-resizeit-e')) {\n                //w = startWidth + (eventX - startX) / scaleFactor.x + wDif;\n                w = startWidth + (eventX - startX) * factor / scaleFactor.x + wDif; // needs left adjust, for width and height adjust factor may be either 1 (no adjust) or 2\n\n                if (w >= maxWidthEast) {\n                  w = maxWidthEast;\n                }\n\n                if (w >= maxWidth) {\n                  w = maxWidth;\n                }\n\n                if (w <= minWidth) {\n                  w = minWidth;\n                }\n\n                self.style.width = w + 'px';\n\n                if (factor === 2) {\n                  // factor works only with value of 2 when adjusting left or top\n                  self.style.left = startLeft - (eventX - startX) + 'px';\n                }\n\n                if (opts.aspectRatio === 'content') {\n                  // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\n                  self.style.height = (w - borderRightWidth - borderLeftWidth) / aspectRatioContent + hdrHeight + ftrHeight + borderTopWidth + borderBottomWidth + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.bottom <= opts.containment[2]) {\n                      self.style.height = maxHeightSouth + 'px';\n                      self.style.width = maxHeightSouth * aspectRatioContent + 'px';\n                    }\n                  }\n                } else if (opts.aspectRatio === 'panel') {\n                  // otherwise the complete panel maintains its aspect ratio\n                  self.style.height = w / aspectRatio + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.bottom <= opts.containment[2]) {\n                      self.style.height = maxHeightSouth + 'px';\n                      self.style.width = maxHeightSouth * aspectRatio + 'px';\n                    }\n                  }\n                }\n              } else if (resizeHandleClassList.contains('jsPanel-resizeit-s')) {\n                //h = startHeight + (eventY - startY) / scaleFactor.y + hDif;\n                h = startHeight + (eventY - startY) * factor / scaleFactor.y + hDif; // needs top adjust\n\n                if (h >= maxHeightSouth) {\n                  h = maxHeightSouth;\n                }\n\n                if (h >= maxHeight) {\n                  h = maxHeight;\n                }\n\n                if (h <= minHeight) {\n                  h = minHeight;\n                }\n\n                self.style.height = h + 'px';\n\n                if (factor === 2) {\n                  self.style.top = startTop - (eventY - startY) + 'px';\n                }\n\n                if (opts.aspectRatio === 'content') {\n                  // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\n                  self.style.width = (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent + borderTopWidth + borderBottomWidth + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.right <= opts.containment[1]) {\n                      self.style.width = maxWidthEast + 'px';\n                      self.style.height = maxWidthEast / aspectRatioContent + 'px';\n                    }\n                  }\n                } else if (opts.aspectRatio === 'panel') {\n                  // otherwise the complete panel maintains its aspect ratio\n                  self.style.width = h * aspectRatio + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.right <= opts.containment[1]) {\n                      self.style.width = maxWidthEast + 'px';\n                      self.style.height = maxWidthEast / aspectRatio + 'px';\n                    }\n                  }\n                }\n              } else if (resizeHandleClassList.contains('jsPanel-resizeit-w')) {\n                //w = startWidth + (startX - eventX) / scaleFactor.x + wDif;\n                w = startWidth + (startX - eventX) * factor / scaleFactor.x + wDif; // doesn't need left adjust\n\n                if (w <= maxWidth && w >= minWidth && w <= maxWidthWest) {\n                  self.style.left = startLeft + (eventX - startX) / scaleFactor.x + xDif + 'px';\n                }\n\n                if (w >= maxWidthWest) {\n                  w = maxWidthWest;\n                }\n\n                if (w >= maxWidth) {\n                  w = maxWidth;\n                }\n\n                if (w <= minWidth) {\n                  w = minWidth;\n                }\n\n                self.style.width = w + 'px';\n\n                if (opts.aspectRatio === 'content') {\n                  // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\n                  self.style.height = (w - borderRightWidth - borderLeftWidth) / aspectRatioContent + hdrHeight + ftrHeight + borderTopWidth + borderBottomWidth + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.bottom <= opts.containment[2]) {\n                      self.style.height = maxHeightSouth + 'px';\n                      self.style.width = maxHeightSouth * aspectRatioContent + 'px';\n                    }\n                  }\n                } else if (opts.aspectRatio === 'panel') {\n                  // otherwise the complete panel maintains its aspect ratio\n                  self.style.height = w / aspectRatio + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.bottom <= opts.containment[2]) {\n                      self.style.height = maxHeightSouth + 'px';\n                      self.style.width = maxHeightSouth * aspectRatio + 'px';\n                    }\n                  }\n                }\n              } else if (resizeHandleClassList.contains('jsPanel-resizeit-n')) {\n                //h = startHeight + (startY - eventY) / scaleFactor.y + hDif;\n                h = startHeight + (startY - eventY) * factor / scaleFactor.y + hDif; // doesn't need top adjust\n\n                if (h <= maxHeight && h >= minHeight && h <= maxHeightNorth) {\n                  self.style.top = startTop + (eventY - startY) / scaleFactor.y + yDif + 'px';\n                }\n\n                if (h >= maxHeightNorth) {\n                  h = maxHeightNorth;\n                }\n\n                if (h >= maxHeight) {\n                  h = maxHeight;\n                }\n\n                if (h <= minHeight) {\n                  h = minHeight;\n                }\n\n                self.style.height = h + 'px';\n\n                if (opts.aspectRatio === 'content') {\n                  // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\n                  self.style.width = (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent + borderTopWidth + borderBottomWidth + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.right <= opts.containment[1]) {\n                      self.style.width = maxWidthEast + 'px';\n                      self.style.height = maxWidthEast / aspectRatioContent + 'px';\n                    }\n                  }\n                } else if (opts.aspectRatio === 'panel') {\n                  // otherwise the complete panel maintains its aspect ratio\n                  self.style.width = h * aspectRatio + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.right <= opts.containment[1]) {\n                      self.style.width = maxWidthEast + 'px';\n                      self.style.height = maxWidthEast / aspectRatio + 'px';\n                    }\n                  }\n                }\n              } else if (resizeHandleClassList.contains('jsPanel-resizeit-se')) {\n                //w = startWidth + (eventX - startX) / scaleFactor.x + wDif;\n                w = startWidth + (eventX - startX) * factor / scaleFactor.x + wDif; // needs left adjust\n\n                if (w >= maxWidthEast) {\n                  w = maxWidthEast;\n                }\n\n                if (w >= maxWidth) {\n                  w = maxWidth;\n                }\n\n                if (w <= minWidth) {\n                  w = minWidth;\n                }\n\n                self.style.width = w + 'px';\n\n                if (factor === 2) {\n                  self.style.left = startLeft - (eventX - startX) + 'px';\n                }\n\n                if (opts.aspectRatio) {\n                  self.style.height = w / aspectRatio + 'px';\n                } //h = startHeight + (eventY - startY) / scaleFactor.y + hDif;\n\n\n                h = startHeight + (eventY - startY) * factor / scaleFactor.y + hDif; // needs top adjust\n\n                if (h >= maxHeightSouth) {\n                  h = maxHeightSouth;\n                }\n\n                if (h >= maxHeight) {\n                  h = maxHeight;\n                }\n\n                if (h <= minHeight) {\n                  h = minHeight;\n                }\n\n                self.style.height = h + 'px';\n\n                if (factor === 2) {\n                  self.style.top = startTop - (eventY - startY) + 'px';\n                }\n\n                if (opts.aspectRatio === 'content') {\n                  // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\n                  self.style.width = (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent + borderTopWidth + borderBottomWidth + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.right <= opts.containment[1]) {\n                      self.style.width = maxWidthEast + 'px';\n                      self.style.height = maxWidthEast / aspectRatioContent + 'px';\n                    }\n                  }\n                } else if (opts.aspectRatio === 'panel') {\n                  // otherwise the complete panel maintains its aspect ratio\n                  self.style.width = h * aspectRatio + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.right <= opts.containment[1]) {\n                      self.style.width = maxWidthEast + 'px';\n                      self.style.height = maxWidthEast / aspectRatio + 'px';\n                    }\n                  }\n                }\n              } else if (resizeHandleClassList.contains('jsPanel-resizeit-sw')) {\n                //h = startHeight + (eventY - startY) / scaleFactor.y + hDif;\n                h = startHeight + (eventY - startY) * factor / scaleFactor.y + hDif; // needs top adjust\n\n                if (h >= maxHeightSouth) {\n                  h = maxHeightSouth;\n                }\n\n                if (h >= maxHeight) {\n                  h = maxHeight;\n                }\n\n                if (h <= minHeight) {\n                  h = minHeight;\n                }\n\n                self.style.height = h + 'px';\n\n                if (factor === 2) {\n                  self.style.top = startTop - (eventY - startY) + 'px';\n                }\n\n                if (opts.aspectRatio) {\n                  self.style.width = h * aspectRatio + 'px';\n                } //w = startWidth + (startX - eventX) / scaleFactor.x + wDif;\n\n\n                w = startWidth + (startX - eventX) * factor / scaleFactor.x + wDif; // doesn't need left adjust\n\n                if (w <= maxWidth && w >= minWidth && w <= maxWidthWest) {\n                  self.style.left = startLeft + (eventX - startX) / scaleFactor.x + xDif + 'px';\n                }\n\n                if (w >= maxWidthWest) {\n                  w = maxWidthWest;\n                }\n\n                if (w >= maxWidth) {\n                  w = maxWidth;\n                }\n\n                if (w <= minWidth) {\n                  w = minWidth;\n                }\n\n                self.style.width = w + 'px';\n\n                if (opts.aspectRatio === 'content') {\n                  // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\n                  self.style.height = (w - borderRightWidth - borderLeftWidth) / aspectRatioContent + hdrHeight + ftrHeight + borderTopWidth + borderBottomWidth + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.bottom <= opts.containment[2]) {\n                      self.style.height = maxHeightSouth + 'px';\n                      self.style.width = maxHeightSouth * aspectRatioContent + 'px';\n                    }\n                  }\n                } else if (opts.aspectRatio === 'panel') {\n                  // otherwise the complete panel maintains its aspect ratio\n                  self.style.height = w / aspectRatio + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.bottom <= opts.containment[2]) {\n                      self.style.height = maxHeightSouth + 'px';\n                      self.style.width = maxHeightSouth * aspectRatio + 'px';\n                    }\n                  }\n                }\n              } else if (resizeHandleClassList.contains('jsPanel-resizeit-ne')) {\n                //w = startWidth + (eventX - startX) / scaleFactor.x + wDif;\n                w = startWidth + (eventX - startX) * factor / scaleFactor.x + wDif; // needs left adjust\n\n                if (w >= maxWidthEast) {\n                  w = maxWidthEast;\n                }\n\n                if (w >= maxWidth) {\n                  w = maxWidth;\n                }\n\n                if (w <= minWidth) {\n                  w = minWidth;\n                }\n\n                self.style.width = w + 'px';\n\n                if (factor === 2) {\n                  self.style.left = startLeft - (eventX - startX) + 'px';\n                }\n\n                if (opts.aspectRatio) {\n                  self.style.height = w / aspectRatio + 'px';\n                } //h = startHeight + (startY - eventY) / scaleFactor.y + hDif;\n\n\n                h = startHeight + (startY - eventY) * factor / scaleFactor.y + hDif; // doesn't need top adjust\n\n                if (h <= maxHeight && h >= minHeight && h <= maxHeightNorth) {\n                  self.style.top = startTop + (eventY - startY) / scaleFactor.y + yDif + 'px';\n                }\n\n                if (h >= maxHeightNorth) {\n                  h = maxHeightNorth;\n                }\n\n                if (h >= maxHeight) {\n                  h = maxHeight;\n                }\n\n                if (h <= minHeight) {\n                  h = minHeight;\n                }\n\n                self.style.height = h + 'px';\n\n                if (opts.aspectRatio === 'content') {\n                  // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\n                  self.style.width = (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent + borderTopWidth + borderBottomWidth + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.right <= opts.containment[1]) {\n                      self.style.width = maxWidthEast + 'px';\n                      self.style.height = maxWidthEast / aspectRatioContent + 'px';\n                    }\n                  }\n                } else if (opts.aspectRatio === 'panel') {\n                  // otherwise the complete panel maintains its aspect ratio\n                  self.style.width = h * aspectRatio + 'px';\n\n                  if (opts.containment) {\n                    overlaps = self.overlaps(elmtParent);\n\n                    if (overlaps.right <= opts.containment[1]) {\n                      self.style.width = maxWidthEast + 'px';\n                      self.style.height = maxWidthEast / aspectRatio + 'px';\n                    }\n                  }\n                }\n              } else if (resizeHandleClassList.contains('jsPanel-resizeit-nw')) {\n                if (opts.aspectRatio && resizeHandleClassList.contains('jsPanel-resizeit-nw')) {\n                  eventX = eventY * startRatio;\n                  eventY = eventX / startRatio;\n                } //w = startWidth + (startX - eventX) / scaleFactor.x + wDif;\n\n\n                w = startWidth + (startX - eventX) * factor / scaleFactor.x + wDif; // doesn't need left adjust\n\n                if (w <= maxWidth && w >= minWidth && w <= maxWidthWest) {\n                  self.style.left = startLeft + (eventX - startX) / scaleFactor.x + xDif + 'px';\n                }\n\n                if (w >= maxWidthWest) {\n                  w = maxWidthWest;\n                }\n\n                if (w >= maxWidth) {\n                  w = maxWidth;\n                }\n\n                if (w <= minWidth) {\n                  w = minWidth;\n                }\n\n                self.style.width = w + 'px';\n\n                if (opts.aspectRatio) {\n                  self.style.height = w / aspectRatio + 'px';\n                } //h = startHeight + (startY - eventY) / scaleFactor.y + hDif;\n\n\n                h = startHeight + (startY - eventY) * factor / scaleFactor.y + hDif; // doesn't need top adjust\n\n                if (h <= maxHeight && h >= minHeight && h <= maxHeightNorth) {\n                  self.style.top = startTop + (eventY - startY) / scaleFactor.y + yDif + 'px';\n                }\n\n                if (h >= maxHeightNorth) {\n                  h = maxHeightNorth;\n                }\n\n                if (h >= maxHeight) {\n                  h = maxHeight;\n                }\n\n                if (h <= minHeight) {\n                  h = minHeight;\n                }\n\n                self.style.height = h + 'px';\n\n                if (opts.aspectRatio === 'content') {\n                  // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\n                  self.style.width = (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent + borderTopWidth + borderBottomWidth + 'px';\n                } else if (opts.aspectRatio === 'panel') {\n                  // otherwise the complete panel maintains its aspect ratio\n                  self.style.width = h * aspectRatio + 'px';\n                }\n              }\n\n              window.getSelection().removeAllRanges(); // get current position and size values while resizing\n\n              const styles = window.getComputedStyle(self),\n                    values = {\n                left: parseFloat(styles.left),\n                top: parseFloat(styles.top),\n                right: parseFloat(styles.right),\n                bottom: parseFloat(styles.bottom),\n                width: parseFloat(styles.width),\n                height: parseFloat(styles.height)\n              }; // callback while resizing\n\n              if (opts.resize.length) {\n                jsPanel.processCallbacks(self, opts.resize, false, values, evt);\n              }\n            };\n\n            jsPanel.pointermove.forEach(event => {\n              document.addEventListener(event, resizePanel, false);\n            }); // remove resize handler when mouse leaves browser window (mouseleave doesn't work)\n\n            window.addEventListener('mouseout', windowListener, false);\n          });\n        });\n        jsPanel.pointerup.forEach(function (event) {\n          document.addEventListener(event, pointerUpHandlerResizeit);\n          window.removeEventListener('mouseout', windowListener);\n        }); // resizeit is initialized - now disable if set\n\n        if (options.disable) {\n          handle.style.pointerEvents = 'none';\n        }\n      });\n      return self;\n    };\n\n    self.resizeit = string => {\n      const handles = self.querySelectorAll('.jsPanel-resizeit-handle');\n\n      if (string === 'disable') {\n        handles.forEach(handle => {\n          handle.style.pointerEvents = 'none';\n        });\n      } else {\n        handles.forEach(handle => {\n          handle.style.pointerEvents = 'auto';\n        });\n      }\n\n      return self;\n    };\n\n    self.getScaleFactor = () => {\n      const rect = self.getBoundingClientRect();\n      return {\n        x: rect.width / self.offsetWidth,\n        y: rect.height / self.offsetHeight\n      };\n    };\n\n    self.calcSizeFactors = () => {\n      const styles = window.getComputedStyle(self);\n\n      if (options.container === 'window') {\n        self.hf = parseFloat(styles.left) / (window.innerWidth - parseFloat(styles.width));\n        self.vf = parseFloat(styles.top) / (window.innerHeight - parseFloat(styles.height));\n      } else {\n        if (self.parentElement) {\n          let parentStyles = self.parentElement.getBoundingClientRect();\n          self.hf = parseFloat(styles.left) / (parentStyles.width - parseFloat(styles.width));\n          self.vf = parseFloat(styles.top) / (parentStyles.height - parseFloat(styles.height));\n        }\n      }\n    };\n\n    self.saveCurrentDimensions = (setStyleHeight = false) => {\n      const normData = window.getComputedStyle(self);\n      self.currentData.width = normData.width;\n\n      if (self.status === 'normalized') {\n        self.currentData.height = normData.height;\n      }\n\n      if (setStyleHeight) {\n        self.style.height = normData.height;\n      }\n    };\n\n    self.saveCurrentPosition = () => {\n      const normData = window.getComputedStyle(self);\n      self.currentData.left = normData.left;\n      self.currentData.top = normData.top;\n    };\n\n    self.reposition = (...params) => {\n      let pos = options.position,\n          updateCache = true,\n          callback;\n      params.forEach(value => {\n        if (typeof value === 'string' || typeof value === 'object') {\n          pos = value;\n        } else if (typeof value === 'boolean') {\n          updateCache = value;\n        } else if (typeof value === 'function') {\n          callback = value;\n        }\n      });\n      jsPanel.position(self, pos); // check whether self has docked panels -> reposition docked panels as well\n\n      if (self.slaves && self.slaves.size > 0) {\n        self.slaves.forEach(slave => {\n          slave.reposition();\n        });\n      }\n\n      if (updateCache) {\n        self.saveCurrentPosition();\n      }\n\n      if (callback) {\n        callback.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.repositionOnSnap = pos => {\n      let offsetX = '0',\n          offsetY = '0',\n          margins = jsPanel.pOcontainment(options.dragit.containment); // calculate offsets\n\n      if (options.dragit.snap.containment) {\n        switch (pos) {\n          case 'left-top':\n            offsetX = margins[3];\n            offsetY = margins[0];\n            break;\n\n          case 'right-top':\n            offsetX = -margins[1];\n            offsetY = margins[0];\n            break;\n\n          case 'right-bottom':\n            offsetX = -margins[1];\n            offsetY = -margins[2];\n            break;\n\n          case 'left-bottom':\n            offsetX = margins[3];\n            offsetY = -margins[2];\n            break;\n\n          case 'center-top':\n            offsetX = margins[3] / 2 - margins[1] / 2;\n            offsetY = margins[0];\n            break;\n\n          case 'center-bottom':\n            offsetX = margins[3] / 2 - margins[1] / 2;\n            offsetY = -margins[2];\n            break;\n\n          case 'left-center':\n            offsetX = margins[3];\n            offsetY = margins[0] / 2 - margins[2] / 2;\n            break;\n\n          case 'right-center':\n            offsetX = -margins[1];\n            offsetY = margins[0] / 2 - margins[2] / 2;\n            break;\n        }\n      }\n      /* jsPanel.position(self, `${pos} ${offsetX} ${offsetY}`);\r\n         For some reason I could not find the line above does not work (pos and offsets in one string), but only when\r\n         center-bottom is used with different settings for left/right margin.\r\n      */\n\n\n      jsPanel.position(self, pos);\n      jsPanel.setStyle(self, {\n        left: `calc(${self.style.left} + ${offsetX}px)`,\n        top: `calc(${self.style.top} + ${offsetY}px)`\n      });\n    };\n\n    self.overlaps = (reference, elmtBox, event) => {\n      let panelRect = self.getBoundingClientRect(),\n          parentStyle = getComputedStyle(self.parentElement),\n          scaleFactor = self.getScaleFactor(),\n          parentBorderWidth = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n          referenceRect,\n          evtX = 0,\n          evtY = 0,\n          evtXparent = 0,\n          evtYparent = 0;\n\n      if (self.options.container !== 'window' && elmtBox === 'paddingbox') {\n        parentBorderWidth.top = parseInt(parentStyle.borderTopWidth, 10) * scaleFactor.y;\n        parentBorderWidth.right = parseInt(parentStyle.borderRightWidth, 10) * scaleFactor.x;\n        parentBorderWidth.bottom = parseInt(parentStyle.borderBottomWidth, 10) * scaleFactor.y;\n        parentBorderWidth.left = parseInt(parentStyle.borderLeftWidth, 10) * scaleFactor.x;\n      }\n\n      if (typeof reference === 'string') {\n        if (reference === 'window') {\n          referenceRect = {\n            left: 0,\n            top: 0,\n            right: window.innerWidth,\n            bottom: window.innerHeight\n          };\n        } else if (reference === 'parent') {\n          referenceRect = self.parentElement.getBoundingClientRect();\n        } else {\n          referenceRect = document.querySelector(reference).getBoundingClientRect();\n        }\n      } else {\n        referenceRect = reference.getBoundingClientRect();\n      }\n\n      if (event) {\n        evtX = event.touches ? event.touches[0].clientX : event.clientX;\n        evtY = event.touches ? event.touches[0].clientY : event.clientY;\n        evtXparent = evtX - referenceRect.left;\n        evtYparent = evtY - referenceRect.top;\n      }\n\n      let overlapsX = panelRect.left < referenceRect.right && panelRect.right > referenceRect.left,\n          overlapsY = panelRect.top < referenceRect.bottom && panelRect.bottom > referenceRect.top,\n          overlaps = overlapsX && overlapsY;\n      return {\n        overlaps: overlaps,\n        top: panelRect.top - referenceRect.top - parentBorderWidth.top,\n        right: referenceRect.right - panelRect.right - parentBorderWidth.right,\n        bottom: referenceRect.bottom - panelRect.bottom - parentBorderWidth.bottom,\n        left: panelRect.left - referenceRect.left - parentBorderWidth.left,\n        parentBorderWidth: parentBorderWidth,\n        panelRect: panelRect,\n        referenceRect: referenceRect,\n        pointer: {\n          // pointer coords relative to window and reference\n          clientX: evtX,\n          clientY: evtY,\n          left: evtXparent - parentBorderWidth.left,\n          top: evtYparent - parentBorderWidth.top,\n          right: referenceRect.width - evtXparent - parentBorderWidth.right,\n          bottom: referenceRect.height - evtYparent - parentBorderWidth.bottom\n        }\n      };\n    };\n\n    self.setSize = () => {\n      if (options.panelSize) {\n        const values = jsPanel.pOsize(self, options.panelSize);\n        self.style.width = values.width;\n        self.style.height = values.height;\n      } else if (options.contentSize) {\n        const values = jsPanel.pOsize(self, options.contentSize);\n        self.content.style.width = values.width;\n        self.content.style.height = values.height;\n        self.style.width = values.width; // explicitly assign current width/height to panel\n\n        self.content.style.width = '100%';\n      }\n\n      return self;\n    };\n\n    self.resize = (...params) => {\n      let dimensions = window.getComputedStyle(self),\n          size = {\n        width: dimensions.width,\n        height: dimensions.height\n      },\n          updateCache = true,\n          callback;\n      params.forEach(value => {\n        if (typeof value === 'string') {\n          size = value;\n        } else if (typeof value === 'object') {\n          size = Object.assign(size, value);\n        } else if (typeof value === 'boolean') {\n          updateCache = value;\n        } else if (typeof value === 'function') {\n          callback = value;\n        }\n      });\n      let values = jsPanel.pOsize(self, size);\n      self.style.width = values.width;\n      self.style.height = values.height; // check whether self has docked panels -> reposition docked panels\n\n      if (self.slaves && self.slaves.size > 0) {\n        self.slaves.forEach(slave => {\n          slave.reposition();\n        });\n      }\n\n      if (updateCache) {\n        self.saveCurrentDimensions();\n      }\n\n      self.status = 'normalized';\n      let smallifyBtn = self.controlbar.querySelector('.jsPanel-btn-smallify');\n\n      if (smallifyBtn) {\n        smallifyBtn.style.transform = 'rotate(0deg)';\n      }\n\n      if (callback) {\n        callback.call(self, self);\n      }\n\n      self.calcSizeFactors();\n      return self;\n    };\n\n    self.windowResizeHandler = e => {\n      if (e.target === window) {\n        // see https://bugs.jqueryui.com/ticket/7514\n        let status = self.status,\n            onWindowResize = options.onwindowresize,\n            left,\n            top;\n\n        if (status === 'maximized' && onWindowResize) {\n          self.maximize(false, true);\n        } else if (self.snapped && status !== 'minimized') {\n          self.snap(self.snapped, true);\n        } else if (status === 'normalized' || status === 'smallified' || status === 'maximized') {\n          if (typeof onWindowResize === 'function') {\n            onWindowResize.call(self, e, self);\n          } else {\n            left = (window.innerWidth - self.offsetWidth) * self.hf;\n            self.style.left = left <= 0 ? 0 : left + 'px';\n            top = (window.innerHeight - self.offsetHeight) * self.vf;\n            self.style.top = top <= 0 ? 0 : top + 'px';\n          }\n        } else if (status === 'smallifiedmax' && onWindowResize) {\n          self.maximize(false, true).smallify();\n        } // check whether self has docked panels -> reposition docked panels as well\n\n\n        if (self.slaves && self.slaves.size > 0) {\n          self.slaves.forEach(slave => {\n            slave.reposition();\n          });\n        }\n      }\n    };\n\n    self.setControls = (sel, cb) => {\n      self.header.querySelectorAll('.jsPanel-btn').forEach(item => {\n        const btnClass = item.className.split('-'),\n              btn = btnClass[btnClass.length - 1];\n\n        if (self.getAttribute(`data-btn${btn}`) !== 'hidden') {\n          item.style.display = 'block';\n        }\n      });\n      sel.forEach(item => {\n        const btn = self.controlbar.querySelector(item);\n\n        if (btn) {\n          btn.style.display = 'none';\n        }\n      });\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.setControlStatus = (ctrl, action = 'enable', cb) => {\n      const btn = self.controlbar.querySelector(`.jsPanel-btn-${ctrl}`);\n\n      switch (action) {\n        case 'disable':\n          if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\n            self.setAttribute(`data-btn${ctrl}`, 'disabled');\n            btn.style.pointerEvents = 'none';\n            btn.style.opacity = 0.4;\n            btn.style.cursor = 'default';\n          }\n\n          break;\n\n        case 'hide':\n          if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\n            self.setAttribute(`data-btn${ctrl}`, 'hidden');\n            btn.style.display = 'none';\n          }\n\n          break;\n\n        case 'show':\n          if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\n            self.setAttribute(`data-btn${ctrl}`, 'enabled');\n            btn.style.display = 'block';\n            btn.style.pointerEvents = 'auto';\n            btn.style.opacity = 1;\n            btn.style.cursor = 'pointer';\n          }\n\n          break;\n\n        case 'enable':\n          if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\n            if (self.getAttribute(`data-btn${ctrl}`) === 'hidden') {\n              btn.style.display = 'block';\n            }\n\n            self.setAttribute(`data-btn${ctrl}`, 'enabled');\n            btn.style.pointerEvents = 'auto';\n            btn.style.opacity = 1;\n            btn.style.cursor = 'pointer';\n          }\n\n          break;\n\n        case 'remove':\n          self.controlbar.removeChild(btn);\n          self.setAttribute(`data-btn${ctrl}`, 'removed');\n          break;\n      }\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.setControlSize = ctrlSize => {\n      // does not work with Font Awesome webfont (only svg/js)\n      const size = ctrlSize.toLowerCase(),\n            icons = self.controlbar.querySelectorAll('.jsPanel-btn');\n      icons.forEach(icon => {\n        ['jsPanel-btn-xl', 'jsPanel-btn-lg', 'jsPanel-btn-md', 'jsPanel-btn-sm', 'jsPanel-btn-xs'].forEach(item => {\n          icon.classList.remove(item);\n        });\n        icon.classList.add(`jsPanel-btn-${size}`);\n      }); // adjust font-size of title\n\n      if (size === 'xl') {\n        self.titlebar.style.fontSize = '1.5rem';\n      } else if (size === 'lg') {\n        self.titlebar.style.fontSize = '1.25rem';\n      } else if (size === 'md') {\n        self.titlebar.style.fontSize = '1.05rem';\n      } else if (size === 'sm') {\n        self.titlebar.style.fontSize = '.9rem';\n      } else if (size === 'xs') {\n        self.titlebar.style.fontSize = '.8rem';\n      }\n    };\n\n    self.setHeaderControls = cb => {\n      // add custom controls\n      if (self.options.headerControls.add) {\n        let customControls = self.options.headerControls.add;\n\n        if (!Array.isArray(customControls)) {\n          // if options.addControls is not an array make it one\n          customControls = [customControls];\n        }\n\n        customControls.forEach(ctrl => {\n          self.addControl(ctrl);\n        });\n      } // get all control names including controls added with option.addControls\n\n\n      let controls = [],\n          ctrls = self.controlbar.querySelectorAll('.jsPanel-btn');\n      ctrls.forEach(ctrl => {\n        let match = ctrl.className.match(/jsPanel-btn-[a-z0-9]{3,}/i),\n            ctrlName = match[0].substring(12);\n        controls.push(ctrlName);\n      }); // normalize option headerControls and reset it accordingly\n\n      const option = jsPanel.pOheaderControls(options.headerControls);\n      options.headerControls = option; // set status of controls\n\n      controls.forEach(item => {\n        if (option[item]) {\n          self.setControlStatus(item, option[item]);\n        }\n      }); // set size of controls\n\n      self.setControlSize(option.size);\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.setHeaderLogo = (logo, cb) => {\n      let logos = [self.headerlogo],\n          minPanel = document.querySelector('#' + self.id + '-min');\n\n      if (minPanel) {\n        logos.push(minPanel.querySelector('.jsPanel-headerlogo'));\n      }\n\n      if (typeof logo === 'string') {\n        if (logo.substr(0, 1) !== '<') {\n          // is assumed to be an img url\n          logos.forEach(item => {\n            jsPanel.emptyNode(item);\n            let img = document.createElement('img');\n            img.src = logo;\n            item.append(img);\n          });\n        } else {\n          logos.forEach(item => {\n            item.innerHTML = logo;\n          });\n        }\n      } else {\n        // assumed to be a node object\n        logos.forEach(item => {\n          jsPanel.emptyNode(item);\n          item.append(logo);\n        });\n      } // images must not be draggable, otherwise dragit interactions locks\n\n\n      self.headerlogo.childNodes.forEach(logo => {\n        if (logo.nodeName && logo.nodeName === 'IMG') {\n          logo.setAttribute('draggable', 'false');\n        }\n      });\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.setHeaderRemove = cb => {\n      self.removeChild(self.header);\n      self.content.classList.add('jsPanel-content-noheader');\n      ['close', 'maximize', 'normalize', 'minimize', 'smallify'].forEach(item => {\n        self.setAttribute(`data-btn${item}`, 'removed');\n      });\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.setHeaderTitle = (hdrTitle, cb) => {\n      let titles = [self.headertitle],\n          minPanel = document.querySelector('#' + self.id + '-min');\n\n      if (minPanel) {\n        titles.push(minPanel.querySelector('.jsPanel-title'));\n      }\n\n      if (typeof hdrTitle === 'string') {\n        titles.forEach(item => {\n          item.innerHTML = hdrTitle;\n        });\n      } else if (typeof hdrTitle === 'function') {\n        titles.forEach(item => {\n          jsPanel.emptyNode(item);\n          item.innerHTML = hdrTitle();\n        });\n      } else {\n        // assumed to be a node object\n        titles.forEach(item => {\n          jsPanel.emptyNode(item);\n          item.append(hdrTitle);\n        });\n      }\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.setIconfont = (font, panel = self, cb) => {\n      if (font) {\n        let classArray, textArray;\n\n        if (font === 'fa' || font === 'far' || font === 'fal' || font === 'fas' || font === 'fad') {\n          classArray = [`${font} fa-window-close`, `${font} fa-window-maximize`, `${font} fa-window-restore`, `${font} fa-window-minimize`, `${font} fa-chevron-up`];\n        } else if (font === 'material-icons') {\n          classArray = [font, font, font, font, font, font];\n          textArray = ['close', 'fullscreen', 'fullscreen_exit', 'call_received', 'expand_less'];\n        } else if (Array.isArray(font)) {\n          classArray = [`custom-control-icon ${font[4]}`, `custom-control-icon ${font[3]}`, `custom-control-icon ${font[2]}`, `custom-control-icon ${font[1]}`, `custom-control-icon ${font[0]}`];\n        } else if (font === 'bootstrap' || font === 'glyphicon') {\n          classArray = ['glyphicon glyphicon-remove', 'glyphicon glyphicon-fullscreen', 'glyphicon glyphicon-resize-full', 'glyphicon glyphicon-minus', 'glyphicon glyphicon-chevron-up'];\n        } else {\n          return panel;\n        }\n\n        panel.querySelectorAll('.jsPanel-controlbar .jsPanel-btn').forEach(item => {\n          jsPanel.emptyNode(item).innerHTML = '<span></span>';\n        });\n        Array.prototype.slice.call(panel.querySelectorAll('.jsPanel-controlbar .jsPanel-btn > span')).reverse().forEach((item, i) => {\n          item.className = classArray[i];\n\n          if (font === 'material-icons') {\n            item.textContent = textArray[i];\n          }\n        });\n      }\n\n      if (cb) {\n        cb.call(panel, panel);\n      }\n\n      return panel;\n    };\n\n    self.addToolbar = (place, tb, cb) => {\n      if (place === 'header') {\n        place = self.headertoolbar;\n      } else if (place === 'footer') {\n        place = self.footer;\n      }\n\n      if (typeof tb === 'string') {\n        place.innerHTML = tb;\n      } else if (Array.isArray(tb)) {\n        tb.forEach(item => {\n          if (typeof item === 'string') {\n            place.innerHTML += item;\n          } else {\n            place.append(item);\n          }\n        });\n      } else if (typeof tb === 'function') {\n        let tool = tb.call(self, self);\n\n        if (typeof tool === 'string') {\n          place.innerHTML = tool;\n        } else {\n          place.append(tool);\n        }\n      } else {\n        place.append(tb);\n      }\n\n      place.classList.add('active');\n\n      if (cb) {\n        cb.call(self, self);\n      }\n\n      return self;\n    };\n\n    self.addCloseControl = () => {\n      let ctrl = document.createElement('button'),\n          colorContent = self.content.style.color;\n      ctrl.classList.add('jsPanel-addCloseCtrl');\n      ctrl.innerHTML = jsPanel.icons.close;\n      ctrl.style.color = colorContent;\n\n      if (self.options.rtl) {\n        ctrl.classList.add('rtl');\n      }\n\n      self.appendChild(ctrl);\n      jsPanel.pointerup.forEach(evt => {\n        ctrl.addEventListener(evt, e => {\n          e.preventDefault(); // disable close for all mouse buttons but left\n\n          if (e.button && e.button > 0) {\n            return false;\n          }\n\n          self.close(null, true);\n        });\n      }); // pointerdown handler needed to prevent side effect with resize handles\n\n      jsPanel.pointerdown.forEach(evt => {\n        ctrl.addEventListener(evt, e => {\n          e.preventDefault();\n        });\n      });\n      return self;\n    };\n\n    self.addControl = obj => {\n      // obj.name - string, the name of the control, results for example in \"jsPanel-btn jsPanel-btn-menu\"\n      // obj.html - string, the html of the control to add, for example \"<span class='fa fa-menu'></span>\"\n      // obj.handler - function(panel, control), the event handler to assign to the new control\n      // obj.position - number, the position within the controlbar where the control is to be added\n      if (!obj.html) {\n        return self;\n      }\n\n      if (!obj.position) {\n        obj.position = 1;\n      }\n\n      const count = self.controlbar.querySelectorAll('.jsPanel-btn').length;\n      let control = document.createElement('button');\n      control.innerHTML = obj.html;\n      control.className = `jsPanel-btn jsPanel-btn-${obj.name} jsPanel-btn-${options.headerControls.size}`;\n      control.style.color = self.header.style.color;\n\n      if (obj.position > count) {\n        // new control is the first from right (default ltr text-direction) or the first from left (if option rtl is used)\n        self.controlbar.append(control);\n      } else {\n        self.controlbar.insertBefore(control, self.querySelector(`.jsPanel-controlbar .jsPanel-btn:nth-child(${obj.position})`));\n      }\n\n      const ariaLabel = obj.ariaLabel || obj.name;\n\n      if (ariaLabel) {\n        control.setAttribute('aria-label', ariaLabel);\n      }\n\n      jsPanel.pointerup.forEach(evt => {\n        control.addEventListener(evt, e => {\n          e.preventDefault();\n\n          if (e.button && e.button > 0) {\n            return false;\n          }\n\n          obj.handler.call(self, self, control);\n        });\n      });\n\n      if (obj.afterInsert) {\n        obj.afterInsert.call(control, control);\n      }\n\n      return self;\n    };\n\n    self.setRtl = () => {\n      [self.header, self.content, self.footer].forEach(item => {\n        item.dir = 'rtl';\n\n        if (options.rtl.lang) {\n          item.lang = options.rtl.lang;\n        }\n      });\n    }; // option.id\n\n\n    self.id = options.id; // option.paneltype classname\n\n    self.classList.add('jsPanel-' + options.paneltype); // set z-index and paneltype class\n\n    if (options.paneltype === 'standard') {\n      self.style.zIndex = this.zi.next();\n    } // option.container\n\n\n    panelContainer.append(self);\n    self.front(false, false); // just to ensure iframe code in self.front() works for very first panel as well, second false prevents onfronted callbacks to be executed\n    // option.theme\n\n    self.setTheme(options.theme); // option.boxShadow\n\n    if (options.boxShadow) {\n      self.classList.add(`jsPanel-depth-${options.boxShadow}`);\n    }\n    /* option.header, option.iconfont, option.headerControls, option.headerLogo, option.headerTitle */\n\n\n    if (options.header) {\n      if (options.headerLogo) {\n        self.setHeaderLogo(options.headerLogo);\n      }\n\n      self.setIconfont(options.iconfont);\n      self.setHeaderTitle(options.headerTitle);\n      self.setHeaderControls(); // now handles controls added with option addControls as well\n      // compatibility code for IE11 due to flex bug - https://caniuse.com/#feat=flexbox\n\n      if (jsPanel.isIE) {\n        let bars = [self.headerbar, self.controlbar];\n\n        switch (self.options.headerControls.size) {\n          case 'md':\n            bars.forEach(bar => {\n              bar.style.height = '34px';\n            });\n            break;\n\n          case 'xs':\n            bars.forEach(bar => {\n              bar.style.height = '26px';\n            });\n            break;\n\n          case 'sm':\n            bars.forEach(bar => {\n              bar.style.height = '30px';\n            });\n            break;\n\n          case 'lg':\n            bars.forEach(bar => {\n              bar.style.height = '38px';\n            });\n            break;\n\n          case 'xl':\n            bars.forEach(bar => {\n              bar.style.height = '42px';\n            });\n            break;\n        }\n      } // end - - - - - - - - -\n\n\n      if (options.header === 'auto-show-hide') {\n        let boxShadow = 'jsPanel-depth-' + options.boxShadow;\n        self.header.style.opacity = 0;\n        self.style.backgroundColor = 'transparent';\n        this.remClass(self, boxShadow);\n        this.setClass(self.content, boxShadow);\n        self.header.addEventListener('mouseenter', () => {\n          self.header.style.opacity = 1;\n          jsPanel.setClass(self, boxShadow);\n          jsPanel.remClass(self.content, boxShadow);\n        });\n        self.header.addEventListener('mouseleave', () => {\n          self.header.style.opacity = 0;\n          jsPanel.remClass(self, boxShadow);\n          jsPanel.setClass(self.content, boxShadow);\n        });\n      }\n    } else {\n      self.setHeaderRemove();\n\n      if (options.addCloseControl) {\n        self.addCloseControl();\n      }\n    } // option.headerToolbar\n\n\n    if (options.headerToolbar) {\n      self.addToolbar(self.headertoolbar, options.headerToolbar);\n    } // option.footerToolbar\n\n\n    if (options.footerToolbar) {\n      self.addToolbar(self.footer, options.footerToolbar);\n    } // option.border\n\n\n    if (options.border) {\n      self.setBorder(options.border);\n    } // option.borderRadius\n\n\n    if (options.borderRadius) {\n      self.setBorderRadius(options.borderRadius);\n    } // option.content\n\n\n    if (options.content) {\n      if (typeof options.content === 'function') {\n        options.content.call(self, self);\n      } else if (typeof options.content === 'string') {\n        self.content.innerHTML = options.content;\n      } else {\n        self.content.append(options.content);\n      }\n    } // option.contentAjax\n\n\n    if (options.contentAjax) {\n      this.ajax(options.contentAjax, self);\n    } // option.contentFetch\n\n\n    if (options.contentFetch) {\n      this.fetch(options.contentFetch, self);\n    } // option.contentOverflow\n\n\n    if (options.contentOverflow) {\n      const value = options.contentOverflow.split(' ');\n\n      if (value.length === 1) {\n        self.content.style.overflow = value[0];\n      } else if (value.length === 2) {\n        self.content.style.overflowX = value[0];\n        self.content.style.overflowY = value[1];\n      }\n    } // option.autoclose -- should be before option.size\n\n\n    if (options.autoclose) {\n      if (typeof options.autoclose === 'number') {\n        options.autoclose = {\n          time: options.autoclose + 'ms'\n        };\n      } else if (typeof options.autoclose === 'string') {\n        options.autoclose = {\n          time: options.autoclose\n        };\n      }\n\n      let autoclose = Object.assign({}, jsPanel.defaultAutocloseConfig, options.autoclose);\n\n      if (autoclose.time && typeof autoclose.time === 'number') {\n        autoclose.time += 'ms';\n      }\n\n      let slider = self.progressbar.querySelector('div');\n      slider.addEventListener('animationend', e => {\n        e.stopPropagation();\n        self.progressbar.classList.remove('active');\n        self.close();\n      });\n\n      if (autoclose.progressbar) {\n        self.progressbar.classList.add('active');\n\n        if (autoclose.background) {\n          if (jsPanel.themes.indexOf(autoclose.background) > -1) {\n            self.progressbar.classList.add(autoclose.background + '-bg');\n          } else if (jsPanel.colorNames[autoclose.background]) {\n            self.progressbar.style.background = '#' + jsPanel.colorNames[autoclose.background];\n          } else {\n            self.progressbar.style.background = autoclose.background;\n          }\n        } else {\n          self.progressbar.classList.add('success-bg'); // default background for progressbar\n        }\n      }\n\n      slider.style.animation = `${autoclose.time} progressbar`;\n    } // option.rtl\n\n\n    if (options.rtl) {\n      self.setRtl();\n    } // option.size -- should be after option.theme\n\n\n    self.setSize(); // option.position\n\n    self.status = 'normalized'; // if option.position evaluates to false panel will not be positioned at all\n\n    if (options.position) {\n      this.position(self, options.position);\n    } else {\n      self.style.opacity = 1;\n    }\n\n    document.dispatchEvent(jspanelnormalized);\n    self.calcSizeFactors(); // option.animateIn\n\n    if (options.animateIn) {\n      // remove class again on animationend, otherwise opacity doesn't change when panel is dragged\n      self.addEventListener('animationend', () => {\n        this.remClass(self, options.animateIn);\n      });\n      this.setClass(self, options.animateIn);\n    } // option.dragit AND option.resizeit AND option.syncMargins\n\n\n    if (options.syncMargins) {\n      let containment = this.pOcontainment(options.maximizedMargin);\n\n      if (options.dragit) {\n        options.dragit.containment = containment;\n\n        if (options.dragit.snap === true) {\n          // options.dragit.snap must be object in order to set options.dragit.snap.containment = true;\n          options.dragit.snap = jsPanel.defaultSnapConfig;\n          options.dragit.snap.containment = true;\n        } else if (options.dragit.snap) {\n          options.dragit.snap.containment = true;\n        }\n      }\n\n      if (options.resizeit) {\n        options.resizeit.containment = containment;\n      }\n    }\n\n    if (options.dragit) {\n      // callbacks must be array of function(s) in order to be able to dynamically add/remove callbacks (for example in extensions)\n      ['start', 'drag', 'stop'].forEach(item => {\n        if (options.dragit[item]) {\n          if (typeof options.dragit[item] === 'function') {\n            options.dragit[item] = [options.dragit[item]];\n          }\n        } else {\n          options.dragit[item] = [];\n        }\n      });\n      self.drag(options.dragit); // do not use self.options.dragit.stop.push() !!!\n\n      self.addEventListener('jspaneldragstop', e => {\n        if (e.panel === self) {\n          self.calcSizeFactors();\n        }\n      }, false);\n    } else {\n      self.titlebar.style.cursor = 'default';\n    }\n\n    if (options.resizeit) {\n      // callbacks must be array of function(s) in order to be able to dynamically add/remove callbacks (for example in extensions)\n      ['start', 'resize', 'stop'].forEach(item => {\n        if (options.resizeit[item]) {\n          if (typeof options.resizeit[item] === 'function') {\n            options.resizeit[item] = [options.resizeit[item]];\n          }\n        } else {\n          options.resizeit[item] = [];\n        }\n      });\n      self.sizeit(options.resizeit);\n      let startstatus = void 0; // do not use self.options.resizeit.start.push() !!!\n\n      self.addEventListener('jspanelresizestart', e => {\n        if (e.panel === self) {\n          startstatus = self.status;\n        }\n      }, false); // do not use self.options.resizeit.stop.push() !!!\n\n      self.addEventListener('jspanelresizestop', e => {\n        if (e.panel === self) {\n          if ((startstatus === 'smallified' || startstatus === 'smallifiedmax' || startstatus === 'maximized') && parseFloat(self.style.height) > parseFloat(window.getComputedStyle(self.header).height)) {\n            self.setControls(['.jsPanel-btn-normalize']);\n            self.status = 'normalized';\n            document.dispatchEvent(jspanelnormalized);\n            document.dispatchEvent(jspanelstatuschange);\n\n            if (options.onstatuschange) {\n              jsPanel.processCallbacks(self, options.onstatuschange, 'every');\n            }\n\n            self.calcSizeFactors();\n          }\n        }\n      }, false);\n    } // initialize self.currentData - must be after options position & size\n\n\n    self.saveCurrentDimensions(true);\n    self.saveCurrentPosition(); // option.setStatus\n\n    if (options.setStatus) {\n      if (options.setStatus === 'smallifiedmax') {\n        self.maximize().smallify();\n      } else if (options.setStatus === 'smallified') {\n        self.smallify();\n      } else {\n        // remove the char 'd' from end of string to get function name to call\n        self[options.setStatus.substr(0, options.setStatus.length - 1)]();\n      }\n    } // front panel on mousedown\n\n\n    this.pointerdown.forEach(item => {\n      self.addEventListener(item, e => {\n        if (!e.target.closest('.jsPanel-btn-close') && !e.target.closest('.jsPanel-btn-minimize') && options.paneltype === 'standard') {\n          self.front();\n        }\n      }, false);\n    }); // option onwindowresize\n\n    if (options.onwindowresize) {\n      // if container is 'window'\n      if (self.options.container === 'window') {\n        window.addEventListener('resize', self.windowResizeHandler, false);\n      }\n    } // option onparentresize\n\n\n    if (options.onparentresize) {\n      let onResize = options.onparentresize,\n          parentPanel = self.isChildpanel();\n\n      if (parentPanel) {\n        const parentContainer = parentPanel.content;\n        let parentContainerSize = [];\n\n        self.parentResizeHandler = e => {\n          // if resized panel is the parent panel of the one whose option onContentResize is set to true\n          if (e.panel === parentPanel) {\n            // get dimensions of parent panel's content section\n            parentContainerSize[0] = parentContainer.offsetWidth;\n            parentContainerSize[1] = parentContainer.offsetHeight;\n            let status = self.status,\n                left,\n                top;\n\n            if (status === 'maximized' && onResize) {\n              self.maximize();\n            } else if (self.snapped && status !== 'minimized') {\n              self.snap(self.snapped, true);\n            } else if (status === 'normalized' || status === 'smallified' || status === 'maximized') {\n              if (typeof onResize === 'function') {\n                onResize.call(self, self, {\n                  width: parentContainerSize[0],\n                  height: parentContainerSize[1]\n                });\n              } else {\n                left = (parentContainerSize[0] - self.offsetWidth) * self.hf;\n                self.style.left = left <= 0 ? 0 : left + 'px';\n                top = (parentContainerSize[1] - self.offsetHeight) * self.vf;\n                self.style.top = top <= 0 ? 0 : top + 'px';\n              }\n            } else if (status === 'smallifiedmax' && onResize) {\n              self.maximize().smallify();\n            }\n          }\n        };\n\n        document.addEventListener('jspanelresize', self.parentResizeHandler, false);\n      }\n    } // global callbacks\n\n\n    if (this.globalCallbacks) {\n      if (Array.isArray(this.globalCallbacks)) {\n        this.globalCallbacks.forEach(item => {\n          item.call(self, self);\n        });\n      } else {\n        this.globalCallbacks.call(self, self);\n      }\n    } // option.callback\n\n\n    if (options.callback) {\n      if (Array.isArray(options.callback)) {\n        options.callback.forEach(item => {\n          item.call(self, self);\n        });\n      } else {\n        options.callback.call(self, self);\n      }\n    } // constructor callback\n\n\n    if (cb) {\n      cb.call(self, self);\n    }\n\n    document.dispatchEvent(jspanelloaded);\n    return self;\n  }\n\n};","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/node_modules/jspanel4/es6module/jspanel.js"],"names":["jsPanel","version","date","ajaxAlwaysCallbacks","autopositionSpacing","closeOnEscape","document","addEventListener","e","key","code","getPanels","classList","contains","some","item","options","close","defaults","boxShadow","container","contentSize","width","height","dragit","cursor","handles","opacity","disableOnMaximized","header","headerTitle","headerControls","size","iconfont","undefined","maximizedMargin","minimizeTo","paneltype","position","my","at","resizeit","minWidth","minHeight","theme","defaultAutocloseConfig","time","progressbar","defaultSnapConfig","sensitivity","trigger","active","extensions","globalCallbacks","icons","maximize","normalize","minimize","smallify","idCounter","isIE","navigator","appVersion","match","pointerdown","window","pointermove","pointerup","polyfills","Object","assign","defineProperty","enumerable","configurable","writable","value","target","TypeError","to","i","arguments","length","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","NodeList","prototype","forEach","callback","thisArg","call","arr","append","argArr","Array","slice","docFrag","createDocumentFragment","argItem","isNode","Node","appendChild","createTextNode","String","Element","Document","DocumentFragment","closest","s","matches","ownerDocument","querySelectorAll","el","parentElement","CustomEvent","event","params","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","Event","endsWith","searchStr","Position","substr","startsWith","searchString","includes","search","start","indexOf","Number","isInteger","isFinite","Math","floor","searchElement","fromIndex","o","n","k","max","abs","sameValueZero","x","y","isNaN","themes","ziBase","colorFilledLight","colorFilledDark","colorFilled","colorBrightnessThreshold","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","grey50","grey100","grey200","grey300","grey400","grey500","grey600","grey700","grey800","grey900","gray50","gray100","gray200","gray300","gray400","gray500","gray600","gray700","gray800","gray900","bluegrey50","bluegrey100","bluegrey200","bluegrey300","bluegrey400","bluegrey500","bluegrey600","bluegrey700","bluegrey800","bluegrey900","bluegray50","bluegray100","bluegray200","bluegray300","bluegray400","bluegray500","bluegray600","bluegray700","bluegray800","bluegray900","red50","red100","red200","red300","red400","red500","red600","red700","red800","red900","reda100","reda200","reda400","reda700","pink50","pink100","pink200","pink300","pink400","pink500","pink600","pink700","pink800","pink900","pinka100","pinka200","pinka400","pinka700","purple50","purple100","purple200","purple300","purple400","purple500","purple600","purple700","purple800","purple900","purplea100","purplea200","purplea400","purplea700","deeppurple50","deeppurple100","deeppurple200","deeppurple300","deeppurple400","deeppurple500","deeppurple600","deeppurple700","deeppurple800","deeppurple900","deeppurplea100","deeppurplea200","deeppurplea400","deeppurplea700","indigo50","indigo100","indigo200","indigo300","indigo400","indigo500","indigo600","indigo700","indigo800","indigo900","indigoa100","indigoa200","indigoa400","indigoa700","blue50","blue100","blue200","blue300","blue400","blue500","blue600","blue700","blue800","blue900","bluea100","bluea200","bluea400","bluea700","lightblue50","lightblue100","lightblue200","lightblue300","lightblue400","lightblue500","lightblue600","lightblue700","lightblue800","lightblue900","lightbluea100","lightbluea200","lightbluea400","lightbluea700","cyan50","cyan100","cyan200","cyan300","cyan400","cyan500","cyan600","cyan700","cyan800","cyan900","cyana100","cyana200","cyana400","cyana700","teal50","teal100","teal200","teal300","teal400","teal500","teal600","teal700","teal800","teal900","teala100","teala200","teala400","teala700","green50","green100","green200","green300","green400","green500","green600","green700","green800","green900","greena100","greena200","greena400","greena700","lightgreen50","lightgreen100","lightgreen200","lightgreen300","lightgreen400","lightgreen500","lightgreen600","lightgreen700","lightgreen800","lightgreen900","lightgreena100","lightgreena200","lightgreena400","lightgreena700","lime50","lime100","lime200","lime300","lime400","lime500","lime600","lime700","lime800","lime900","limea100","limea200","limea400","limea700","yellow50","yellow100","yellow200","yellow300","yellow400","yellow500","yellow600","yellow700","yellow800","yellow900","yellowa100","yellowa200","yellowa400","yellowa700","amber50","amber100","amber200","amber300","amber400","amber500","amber600","amber700","amber800","amber900","ambera100","ambera200","ambera400","ambera700","orange50","orange100","orange200","orange300","orange400","orange500","orange600","orange700","orange800","orange900","orangea100","orangea200","orangea400","orangea700","deeporange50","deeporange100","deeporange200","deeporange300","deeporange400","deeporange500","deeporange600","deeporange700","deeporange800","deeporange900","deeporangea100","deeporangea200","deeporangea400","deeporangea700","brown50","brown100","brown200","brown300","brown400","brown500","brown600","brown700","brown800","brown900","errorReporting","modifier","helper","color","val","toLowerCase","r","g","b","h","l","channels","hsl","result","hexPattern","RGBAPattern","HSLAPattern","namedColors","replace","rgb","parseInt","hex","rgbToHsl","css","exec","rgbToHex","hslToRgb","calcColors","primaryColor","threshold","primeColor","filledlightColor","lighten","filledColor","darken","fontColorForPrimary","perceivedBrightness","fontColorFilledlight","fontColorFilled","filleddarkColor","fontColorFilleddark","amount","parseFloat","lnew","round","hue2rgb","p","q","t","min","d","toString","pOposition","positionshorthand","pos","trim","split","auto","filter","autoposition","splice","my_at","offsets","offsetX","offsetY","of","join","panel","style","querySelector","getPrototypeOf","jquery","panelRect","getBoundingClientRect","containerDomRect","containerRect","left","top","documentElement","clientWidth","innerHeight","scaleFactor","offsetWidth","offsetHeight","containerStyle","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","getComputedStyle","positionOfRect","scrollbarwidthsWindow","getScrollbarWidth","body","scrollbarwidthsContainer","panelStyle","applyPositionAutopos","applyPositionOffset","minLeft","minTop","maxLeft","maxTop","applyPositionMinMax","modify","applyPositionModify","newClass","add","newClassAll","ownIndex","index","offset","modifiedPosition","autopositionRemaining","autoPos","parent","box","reposition","addScript","path","type","cb","script","createElement","onload","src","head","ajax","ajaxConfig","config","urlParts","xhr","XMLHttpRequest","configDefaults","method","async","user","pwd","done","res","strToHtml","responseText","urlSelector","contentRemove","content","autoresize","autoreposition","url","timeout","withCredentials","responseType","err","errorpanel","encodeURI","shift","onreadystatechange","readyState","status","fail","always","ajaxAutoresizeAutoreposition","open","beforeSend","data","send","ajaxOrFetchConfig","oContentSize","parts","sizes","resize","createPanelTemplate","dataAttr","className","setAttribute","innerHTML","createMinimizedTemplate","createSnapArea","snapsens","emptyNode","node","firstChild","removeChild","extend","obj","ext","hasOwnProperty","fetch","fetchConfig","bodyMethod","response","resource","fetchInit","then","ok","condition","sort","a","zIndex","pOcontainer","list","nodeType","pOcontainment","arg","isArray","concat","pOsize","values","nums","innerWidth","prtStyles","border","pOborder","regexStyle","regexWidth","borderStyle","borderWidth","pOheaderControls","oHdrCtrls","setting","str","sizeMatch","ctrlMatch","processCallbacks","someOrEvery","param","param2","removeSnapAreas","resetZi","zi","startValue","next","elmt","clientHeight","styles","remClass","classnames","remove","setClass","setStyles","stylesobject","prop","setProperty","setStyle","createRange","createContextualFragment","toggleClass","classname","create","bgPanel","bgContent","colorHeader","colorContent","borderRadius","animateIn","id","getElementById","front","panelContainer","self","template","closetimer","currentData","headerbar","titlebar","headerlogo","headertitle","controlbar","headertoolbar","footer","snappableTo","snapped","droppableTo","autocloseProgressbar","jspanelloaded","jspanelstatuschange","jspanelbeforenormalize","jspanelnormalized","jspanelbeforemaximize","jspanelmaximized","jspanelbeforeminimize","jspanelminimized","jspanelbeforesmallify","jspanelsmallified","jspanelsmallifiedmax","jspanelbeforeunsmallify","jspanelfronted","jspanelbeforeclose","jspanelclosed","jspanelcloseduser","closeBtn","maxBtn","normBtn","smallBtn","minBtn","preventDefault","button","unsmallify","clearTheme","backgroundColor","marginLeft","borderTopColor","background","getThemeDetails","th","passedTheme","colors","filling","step1","step2","fillcolor","builtIn","baseTheme","btn","span","testClass","applyColorTheme","themeDetails","borderTop","applyCustomTheme","pbPanel","pbContent","lastIndexOf","col","setBorder","setBorderRadius","rad","br","borderTopLeftRadius","borderTopRightRadius","footerToolbar","borderBottomRightRadius","borderBottomLeftRadius","setTheme","minimized","closedBy","removeMinimizedReplacement","dispatchEvent","onclosed","removeEventListener","windowResizeHandler","parentResizeHandler","closedByUser","clearInterval","onbeforeclose","animateOut","stopPropagation","donotfront","statusBefore","onbeforemaximize","margins","transform","setControls","onstatuschange","onmaximized","onbeforeminimize","replacementContainer","replacement","createMinimizedReplacement","onminimized","onbeforenormalize","snap","onnormalized","onbeforesmallify","overflow","selfStyles","selfHeaderHeight","minBoxes","display","onsmallified","onbeforeunsmallify","onunsmallified","execOnFrontedCallbacks","newArr","map","onfronted","alreadySnapped","beforeSnap","containment","move","overlaps","source","saveCurrentDimensions","saveCurrentPosition","calcSizeFactors","closeChildpanels","getChildpanels","childpanels","isChildpanel","pp","parentpanel","tpl","font","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundAttachment","backgroundImage","backgroundSize","backgroundOrigin","backgroundClip","replaceChild","cloneNode","textContent","setIconfont","dataset","btnnormalize","btnmaximize","btnclose","drag","dragstarted","dragElmt","opts","jspaneldragstart","jspaneldrag","jspaneldragstop","camelcase","string","word","charAt","toUpperCase","windowListener","relatedTarget","pointerUpHandlerDragit","snapLeftTop","snapCenterTop","snapRightTop","snapRightCenter","snapRightBottom","snapCenterBottom","snapLeftBottom","snapLeftCenter","repositionOnSnap","sourceContainer","drop","stop","stopStyles","paneldata","pointerEvents","frame","handle","touchAction","grid","startStyles","startLeft","startTop","startWidth","startHeight","psx","touches","clientX","psy","clientY","parentRect","parentStyles","getScaleFactor","startLeftCorrection","scrollbarwidths","resizeToPreSnap","intermediateStyles","delta","wHalf","dropZones","dropzones","zone","dropzonelist","nodelist","push","elmtL","elmtL2","elmtT","elmtT2","elmtR","elmtR2","elmtB","elmtB2","right","bottom","pmx","pmy","dragStyles","elmtRect","pointer","lefttopVectorDrag","sqrt","leftbottomVectorDrag","righttopVectorDrag","rightbottomVectorDrag","horizontalDeltaDrag","verticalDeltaDrag","leftVectorDrag","topVectorDrag","rightVectorDrag","bottomVectorDrag","getSelection","removeAllRanges","axis","xCorr","yCorr","snapSens","topSensAreaLength","sideSensAreaLength","elementsFromPoint","elementsFrom","disable","dragitOptions","sizeit","jspanelresizestart","jspanelresize","jspanelresizestop","resizePanel","resizestarted","w","cachedOptionAspectRatio","aspectRatio","pointerUpHandlerResizeit","isLeftChange","isTopChange","cl","cw","ch","modW","modH","cx","cy","modX","modY","smallifyBtn","factor","altKey","ctrlKey","shiftKey","maxWidth","maxHeight","elmtParent","elmtParentTagName","tagName","elmtParentRect","elmtParentStyles","elmtParentBLW","elmtParentBTW","elmtParentPosition","getPropertyValue","startX","startY","startRatio","resizeHandleClassList","elmtContentRect","aspectRatioContent","hdrHeight","ftrHeight","maxWidthEast","maxWidthWest","maxHeightSouth","maxHeightNorth","scrollLeft","scrollTop","computedStyle","wDif","hDif","xDif","yDif","eventX","eventY","rect","hf","vf","setStyleHeight","normData","updateCache","slaves","slave","reference","elmtBox","parentStyle","parentBorderWidth","referenceRect","evtX","evtY","evtXparent","evtYparent","overlapsX","overlapsY","setSize","panelSize","dimensions","onWindowResize","onwindowresize","sel","btnClass","getAttribute","setControlStatus","ctrl","action","setControlSize","ctrlSize","icon","fontSize","setHeaderControls","customControls","addControl","controls","ctrls","ctrlName","substring","option","setHeaderLogo","logo","logos","minPanel","img","childNodes","nodeName","setHeaderRemove","setHeaderTitle","hdrTitle","titles","classArray","textArray","reverse","addToolbar","place","tb","tool","addCloseControl","rtl","html","count","control","name","insertBefore","ariaLabel","handler","afterInsert","setRtl","dir","lang","headerLogo","bars","bar","headerToolbar","contentAjax","contentFetch","contentOverflow","overflowX","overflowY","autoclose","slider","animation","syncMargins","startstatus","setStatus","onparentresize","onResize","parentPanel","parentContainer","parentContainerSize"],"mappings":"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","sourcesContent":["/**\n * jsPanel - A JavaScript library to create highly configurable multifunctional floating panels that can also be used as modal, tooltip, hint or contextmenu\n * @version v4.11.4\n * @homepage https://jspanel.de/\n * @license MIT\n * @author Stefan Sträßer - info@jspanel.de\n * @github https://github.com/Flyer53/jsPanel4.git\n */\n\nexport // eslint-disable-next-line no-redeclare\r\n// noinspection JSVoidFunctionReturnValueUsed\r\n// eslint-disable-next-line no-redeclare\r\nlet jsPanel = {\r\n    version: '4.11.4',\r\n    date: '2021-04-10 09:23',\r\n    ajaxAlwaysCallbacks: [],\r\n    autopositionSpacing: 4,\r\n    closeOnEscape: (() => {\r\n        document.addEventListener(\r\n            'keydown',\r\n            (e) => {\r\n                if (e.key === 'Escape' || e.code === 'Escape' || e.key === 'Esc') {\r\n                    jsPanel\r\n                        .getPanels(function () {\r\n                            return this.classList.contains('jsPanel');\r\n                        })\r\n                        .some((item) => {\r\n                            if (item.options.closeOnEscape) {\r\n                                item.close(null, true);\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        });\r\n                }\r\n            },\r\n            false\r\n        );\r\n    })(),\r\n    defaults: {\r\n        boxShadow: 3,\r\n        container: 'window',\r\n        contentSize: { width: '400px', height: '200px' }, // must be object\r\n        dragit: {\r\n            cursor: 'move',\r\n            handles: '.jsPanel-headerlogo, .jsPanel-titlebar, .jsPanel-ftr', // do not use .jsPanel-headerbar\r\n            opacity: 0.8,\r\n            disableOnMaximized: true,\r\n        },\r\n        header: true,\r\n        headerTitle: 'jsPanel',\r\n        headerControls: { size: 'md' }, // must be object\r\n        iconfont: undefined,\r\n        maximizedMargin: 0,\r\n        minimizeTo: 'default',\r\n        paneltype: 'standard',\r\n        position: { my: 'center', at: 'center' }, // default position.of MUST NOT be set with new positioning engine\r\n        resizeit: {\r\n            handles: 'n, e, s, w, ne, se, sw, nw',\r\n            minWidth: 128,\r\n            minHeight: 38,\r\n        },\r\n        theme: 'default',\r\n    },\r\n    defaultAutocloseConfig: { time: '8s', progressbar: true },\r\n    defaultSnapConfig: {\r\n        sensitivity: 70,\r\n        trigger: 'panel',\r\n        active: 'both',\r\n    },\r\n    extensions: {},\r\n    globalCallbacks: false,\r\n    icons: {\r\n        close: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M13.7,11l6.1-6.1c0.4-0.4,0.4-0.9,0-1.3l-1.4-1.4c-0.4-0.4-0.9-0.4-1.3,0L11,8.3L4.9,2.3C4.6,1.9,4,1.9,3.7,2.3L2.3,3.7 C1.9,4,1.9,4.6,2.3,4.9L8.3,11l-6.1,6.1c-0.4,0.4-0.4,0.9,0,1.3l1.4,1.4c0.4,0.4,0.9,0.4,1.3,0l6.1-6.1l6.1,6.1 c0.4,0.4,0.9,0.4,1.3,0l1.4-1.4c0.4-0.4,0.4-0.9,0-1.3L13.7,11z\"/></svg>`,\r\n        maximize: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M18.3,2H3.7C2.8,2,2,2.9,2,3.9v14.1C2,19.1,2.8,20,3.7,20h14.6c0.9,0,1.7-0.9,1.7-1.9V3.9C20,2.9,19.2,2,18.3,2z M18.3,17.8 c0,0.1-0.1,0.2-0.2,0.2H3.9c-0.1,0-0.2-0.1-0.2-0.2V8.4h14.6V17.8z\"/></svg>`,\r\n        normalize: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M18.3,2H7.1C6.1,2,5.4,2.8,5.4,3.7v1.7H3.7C2.8,5.4,2,6.1,2,7.1v11.3C2,19.2,2.8,20,3.7,20h11.3c0.9,0,1.7-0.8,1.7-1.7v-1.7 h1.7c0.9,0,1.7-0.8,1.7-1.7V3.7C20,2.8,19.2,2,18.3,2z M14.9,18.3H3.7V11h11.3V18.3z M18.3,14.9h-1.7V7.1c0-0.9-0.8-1.7-1.7-1.7H7.1 V3.7h11.3V14.9z\"/></svg>`,\r\n        minimize: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M18.9,19.8H3.1c-0.6,0-1.1-0.5-1.1-1.1s0.5-1.1,1.1-1.1h15.8c0.6,0,1.1,0.5,1.1,1.1S19.5,19.8,18.9,19.8z\"/></svg>`,\r\n        smallify: `<svg focusable=\"false\" class=\"jsPanel-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\"><path fill=\"currentColor\" d=\"M2.1,15.2L2.9,16c0.2,0.2,0.5,0.2,0.7,0L11,8.7l7.4,7.3c0.2,0.2,0.5,0.2,0.7,0l0.8-0.8c0.2-0.2,0.2-0.5,0-0.7L11.3,6 c-0.2-0.2-0.5-0.2-0.7,0l-8.5,8.5C2,14.7,2,15,2.1,15.2z\"/></svg>`,\r\n    },\r\n    idCounter: 0,\r\n    isIE: (() => {\r\n        return navigator.appVersion.match(/Trident/);\r\n    })(),\r\n    // pointerdown: 'onpointerdown' in window ? ['pointerdown'] : 'ontouchend' in window ? ['touchstart', 'mousedown'] : ['mousedown'],\r\n    // pointermove: 'onpointermove' in window ? ['pointermove'] : 'ontouchend' in window ? ['touchmove', 'mousemove'] : ['mousemove'],\r\n    // pointerup: 'onpointerup' in window ? ['pointerup'] : 'ontouchend' in window ? ['touchend', 'mouseup'] : ['mouseup'],\r\n    pointerdown: 'ontouchend' in window ? ['touchstart', 'mousedown'] : ['mousedown'],\r\n    pointermove: 'ontouchend' in window ? ['touchmove', 'mousemove'] : ['mousemove'],\r\n    pointerup: 'ontouchend' in window ? ['touchend', 'mouseup'] : ['mouseup'],\r\n    polyfills: (() => {\r\n        // Polyfills for IE11 only\r\n        // Object.assign polyfill - https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n        if (!Object.assign) {\r\n            Object.defineProperty(Object, 'assign', {\r\n                enumerable: false,\r\n                configurable: true,\r\n                writable: true,\r\n                value: function (target) {\r\n                    if (target === undefined || target === null) {\r\n                        throw new TypeError('Cannot convert first argument to object');\r\n                    }\r\n                    let to = Object(target);\r\n                    for (let i = 1; i < arguments.length; i++) {\r\n                        let nextSource = arguments[i];\r\n                        if (nextSource === undefined || nextSource === null) {\r\n                            continue;\r\n                        }\r\n                        nextSource = Object(nextSource);\r\n                        let keysArray = Object.keys(Object(nextSource));\r\n                        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\r\n                            let nextKey = keysArray[nextIndex];\r\n                            let desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n                            if (desc !== undefined && desc.enumerable) {\r\n                                to[nextKey] = nextSource[nextKey];\r\n                            }\r\n                        }\r\n                    }\r\n                    return to;\r\n                },\r\n            });\r\n        }\r\n        // NodeList.prototype.forEach() polyfill - https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\r\n        if (window.NodeList && !NodeList.prototype.forEach) {\r\n            NodeList.prototype.forEach = function (callback, thisArg) {\r\n                thisArg = thisArg || window;\r\n                for (let i = 0; i < this.length; i++) {\r\n                    callback.call(thisArg, this[i], i, this);\r\n                }\r\n            };\r\n        }\r\n        // .append() polyfill - https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/append\r\n        (function (arr) {\r\n            arr.forEach(function (item) {\r\n                item.append =\r\n                    item.append ||\r\n                    function () {\r\n                        let argArr = Array.prototype.slice.call(arguments),\r\n                            docFrag = document.createDocumentFragment();\r\n                        argArr.forEach(function (argItem) {\r\n                            let isNode = argItem instanceof Node;\r\n                            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\r\n                        });\r\n                        this.appendChild(docFrag);\r\n                    };\r\n            });\r\n        })([Element.prototype, Document.prototype, DocumentFragment.prototype]);\r\n        // Element.closest() polyfill - https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\r\n        if (window.Element && !Element.prototype.closest) {\r\n            // noinspection JSValidateTypes\r\n            Element.prototype.closest = function (s) {\r\n                // noinspection JSUnresolvedVariable\r\n                let matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                    i,\r\n                    el = this;\r\n                do {\r\n                    i = matches.length;\r\n                    // eslint-disable-next-line no-empty\r\n                    while (--i >= 0 && matches.item(i) !== el) {}\r\n                } while (i < 0 && (el = el.parentElement));\r\n                return el;\r\n            };\r\n        }\r\n        // CustomEvent - https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n        (function () {\r\n            if (typeof window.CustomEvent === 'function') return false;\r\n            function CustomEvent(event, params) {\r\n                params = params || {\r\n                    bubbles: false,\r\n                    cancelable: false,\r\n                    detail: undefined,\r\n                };\r\n                let evt = document.createEvent('CustomEvent');\r\n                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n                return evt;\r\n            }\r\n            // noinspection JSValidateTypes\r\n            CustomEvent.prototype = window.Event.prototype;\r\n            // noinspection JSValidateTypes\r\n            window.CustomEvent = CustomEvent;\r\n        })();\r\n        // String.prototype.endsWith() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\r\n        if (!String.prototype.endsWith) {\r\n            String.prototype.endsWith = function (searchStr, Position) {\r\n                // This works much better than >= because\r\n                // it compensates for NaN:\r\n                if (!(Position < this.length)) Position = this.length;\r\n                else Position |= 0; // round position\r\n                return this.substr(Position - searchStr.length, searchStr.length) === searchStr;\r\n            };\r\n        }\r\n        // String.prototype.startsWith() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\r\n        if (!String.prototype.startsWith) {\r\n            String.prototype.startsWith = function (searchString, position) {\r\n                return this.substr(position || 0, searchString.length) === searchString;\r\n            };\r\n        }\r\n        // String.prototype.includes() - https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/String/includes\r\n        if (!String.prototype.includes) {\r\n            String.prototype.includes = function (search, start) {\r\n                if (typeof start !== 'number') {\r\n                    start = 0;\r\n                }\r\n                if (start + search.length > this.length) {\r\n                    return false;\r\n                } else {\r\n                    return this.indexOf(search, start) !== -1;\r\n                }\r\n            };\r\n        }\r\n        // Number.isInteger() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n        Number.isInteger =\r\n            Number.isInteger ||\r\n            function (value) {\r\n                return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n            };\r\n        // Array.prototype.includes() - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\r\n        if (!Array.prototype.includes) {\r\n            Object.defineProperty(Array.prototype, 'includes', {\r\n                value: function (searchElement, fromIndex) {\r\n                    if (this == null) {\r\n                        throw new TypeError('\"this\" is null or not defined');\r\n                    }\r\n                    // 1. Let O be ? ToObject(this value).\r\n                    let o = Object(this);\r\n                    // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n                    let len = o.length >>> 0;\r\n                    // 3. If len is 0, return false.\r\n                    if (len === 0) {\r\n                        return false;\r\n                    }\r\n                    // 4. Let n be ? ToInteger(fromIndex).\r\n                    //    (If fromIndex is undefined, this step produces the value 0.)\r\n                    let n = fromIndex | 0;\r\n                    // 5. If n ≥ 0, then\r\n                    //  a. Let k be n.\r\n                    // 6. Else n < 0,\r\n                    //  a. Let k be len + n.\r\n                    //  b. If k < 0, let k be 0.\r\n                    let k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n                    function sameValueZero(x, y) {\r\n                        return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n                    }\r\n                    // 7. Repeat, while k < len\r\n                    while (k < len) {\r\n                        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n                        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n                        if (sameValueZero(o[k], searchElement)) {\r\n                            return true;\r\n                        }\r\n                        // c. Increase k by 1.\r\n                        k++;\r\n                    }\r\n                    // 8. Return false\r\n                    return false;\r\n                },\r\n            });\r\n        }\r\n    })(),\r\n    themes: ['default', 'primary', 'secondary', 'info', 'success', 'warning', 'danger', 'light', 'dark'],\r\n    ziBase: 100,\r\n    colorFilledLight: 0.81,\r\n    colorFilledDark: 0.08,\r\n    colorFilled: 0,\r\n    colorBrightnessThreshold: 0.55,\r\n    colorNames: {\r\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords\r\n        aliceblue: 'f0f8ff',\r\n        antiquewhite: 'faebd7',\r\n        aqua: '0ff',\r\n        aquamarine: '7fffd4',\r\n        azure: 'f0ffff',\r\n        beige: 'f5f5dc',\r\n        bisque: 'ffe4c4',\r\n        black: '000',\r\n        blanchedalmond: 'ffebcd',\r\n        blue: '00f',\r\n        blueviolet: '8a2be2',\r\n        brown: 'a52a2a',\r\n        burlywood: 'deb887',\r\n        cadetblue: '5f9ea0',\r\n        chartreuse: '7fff00',\r\n        chocolate: 'd2691e',\r\n        coral: 'ff7f50',\r\n        cornflowerblue: '6495ed',\r\n        cornsilk: 'fff8dc',\r\n        crimson: 'dc143c',\r\n        cyan: '0ff',\r\n        darkblue: '00008b',\r\n        darkcyan: '008b8b',\r\n        darkgoldenrod: 'b8860b',\r\n        darkgray: 'a9a9a9',\r\n        darkgrey: 'a9a9a9',\r\n        darkgreen: '006400',\r\n        darkkhaki: 'bdb76b',\r\n        darkmagenta: '8b008b',\r\n        darkolivegreen: '556b2f',\r\n        darkorange: 'ff8c00',\r\n        darkorchid: '9932cc',\r\n        darkred: '8b0000',\r\n        darksalmon: 'e9967a',\r\n        darkseagreen: '8fbc8f',\r\n        darkslateblue: '483d8b',\r\n        darkslategray: '2f4f4f',\r\n        darkslategrey: '2f4f4f',\r\n        darkturquoise: '00ced1',\r\n        darkviolet: '9400d3',\r\n        deeppink: 'ff1493',\r\n        deepskyblue: '00bfff',\r\n        dimgray: '696969',\r\n        dimgrey: '696969',\r\n        dodgerblue: '1e90ff',\r\n        firebrick: 'b22222',\r\n        floralwhite: 'fffaf0',\r\n        forestgreen: '228b22',\r\n        fuchsia: 'f0f',\r\n        gainsboro: 'dcdcdc',\r\n        ghostwhite: 'f8f8ff',\r\n        gold: 'ffd700',\r\n        goldenrod: 'daa520',\r\n        gray: '808080',\r\n        grey: '808080',\r\n        green: '008000',\r\n        greenyellow: 'adff2f',\r\n        honeydew: 'f0fff0',\r\n        hotpink: 'ff69b4',\r\n        indianred: 'cd5c5c',\r\n        indigo: '4b0082',\r\n        ivory: 'fffff0',\r\n        khaki: 'f0e68c',\r\n        lavender: 'e6e6fa',\r\n        lavenderblush: 'fff0f5',\r\n        lawngreen: '7cfc00',\r\n        lemonchiffon: 'fffacd',\r\n        lightblue: 'add8e6',\r\n        lightcoral: 'f08080',\r\n        lightcyan: 'e0ffff',\r\n        lightgoldenrodyellow: 'fafad2',\r\n        lightgray: 'd3d3d3',\r\n        lightgrey: 'd3d3d3',\r\n        lightgreen: '90ee90',\r\n        lightpink: 'ffb6c1',\r\n        lightsalmon: 'ffa07a',\r\n        lightseagreen: '20b2aa',\r\n        lightskyblue: '87cefa',\r\n        lightslategray: '789',\r\n        lightslategrey: '789',\r\n        lightsteelblue: 'b0c4de',\r\n        lightyellow: 'ffffe0',\r\n        lime: '0f0',\r\n        limegreen: '32cd32',\r\n        linen: 'faf0e6',\r\n        magenta: 'f0f',\r\n        maroon: '800000',\r\n        mediumaquamarine: '66cdaa',\r\n        mediumblue: '0000cd',\r\n        mediumorchid: 'ba55d3',\r\n        mediumpurple: '9370d8',\r\n        mediumseagreen: '3cb371',\r\n        mediumslateblue: '7b68ee',\r\n        mediumspringgreen: '00fa9a',\r\n        mediumturquoise: '48d1cc',\r\n        mediumvioletred: 'c71585',\r\n        midnightblue: '191970',\r\n        mintcream: 'f5fffa',\r\n        mistyrose: 'ffe4e1',\r\n        moccasin: 'ffe4b5',\r\n        navajowhite: 'ffdead',\r\n        navy: '000080',\r\n        oldlace: 'fdf5e6',\r\n        olive: '808000',\r\n        olivedrab: '6b8e23',\r\n        orange: 'ffa500',\r\n        orangered: 'ff4500',\r\n        orchid: 'da70d6',\r\n        palegoldenrod: 'eee8aa',\r\n        palegreen: '98fb98',\r\n        paleturquoise: 'afeeee',\r\n        palevioletred: 'd87093',\r\n        papayawhip: 'ffefd5',\r\n        peachpuff: 'ffdab9',\r\n        peru: 'cd853f',\r\n        pink: 'ffc0cb',\r\n        plum: 'dda0dd',\r\n        powderblue: 'b0e0e6',\r\n        purple: '800080',\r\n        rebeccapurple: '639',\r\n        red: 'f00',\r\n        rosybrown: 'bc8f8f',\r\n        royalblue: '4169e1',\r\n        saddlebrown: '8b4513',\r\n        salmon: 'fa8072',\r\n        sandybrown: 'f4a460',\r\n        seagreen: '2e8b57',\r\n        seashell: 'fff5ee',\r\n        sienna: 'a0522d',\r\n        silver: 'c0c0c0',\r\n        skyblue: '87ceeb',\r\n        slateblue: '6a5acd',\r\n        slategray: '708090',\r\n        slategrey: '708090',\r\n        snow: 'fffafa',\r\n        springgreen: '00ff7f',\r\n        steelblue: '4682b4',\r\n        tan: 'd2b48c',\r\n        teal: '008080',\r\n        thistle: 'd8bfd8',\r\n        tomato: 'ff6347',\r\n        turquoise: '40e0d0',\r\n        violet: 'ee82ee',\r\n        wheat: 'f5deb3',\r\n        white: 'fff',\r\n        whitesmoke: 'f5f5f5',\r\n        yellow: 'ff0',\r\n        yellowgreen: '9acd32',\r\n        /* Material Design Colors https://material.io/design/color/the-color-system.html#tools-for-picking-colors */\r\n        grey50: 'fafafa',\r\n        grey100: 'f5f5f5',\r\n        grey200: 'eee',\r\n        grey300: 'e0e0e0',\r\n        grey400: 'bdbdbd',\r\n        grey500: '9e9e9e',\r\n        grey600: '757575',\r\n        grey700: '616161',\r\n        grey800: '424242',\r\n        grey900: '212121',\r\n        gray50: 'fafafa',\r\n        gray100: 'f5f5f5',\r\n        gray200: 'eee',\r\n        gray300: 'e0e0e0',\r\n        gray400: 'bdbdbd',\r\n        gray500: '9e9e9e',\r\n        gray600: '757575',\r\n        gray700: '616161',\r\n        gray800: '424242',\r\n        gray900: '212121',\r\n        bluegrey50: 'eceff1',\r\n        bluegrey100: 'CFD8DC',\r\n        bluegrey200: 'B0BEC5',\r\n        bluegrey300: '90A4AE',\r\n        bluegrey400: '78909C',\r\n        bluegrey500: '607D8B',\r\n        bluegrey600: '546E7A',\r\n        bluegrey700: '455A64',\r\n        bluegrey800: '37474F',\r\n        bluegrey900: '263238',\r\n        bluegray50: 'eceff1',\r\n        bluegray100: 'CFD8DC',\r\n        bluegray200: 'B0BEC5',\r\n        bluegray300: '90A4AE',\r\n        bluegray400: '78909C',\r\n        bluegray500: '607D8B',\r\n        bluegray600: '546E7A',\r\n        bluegray700: '455A64',\r\n        bluegray800: '37474F',\r\n        bluegray900: '263238',\r\n        red50: 'FFEBEE',\r\n        red100: 'FFCDD2',\r\n        red200: 'EF9A9A',\r\n        red300: 'E57373',\r\n        red400: 'EF5350',\r\n        red500: 'F44336',\r\n        red600: 'E53935',\r\n        red700: 'D32F2F',\r\n        red800: 'C62828',\r\n        red900: 'B71C1C',\r\n        reda100: 'FF8A80',\r\n        reda200: 'FF5252',\r\n        reda400: 'FF1744',\r\n        reda700: 'D50000',\r\n        pink50: 'FCE4EC',\r\n        pink100: 'F8BBD0',\r\n        pink200: 'F48FB1',\r\n        pink300: 'F06292',\r\n        pink400: 'EC407A',\r\n        pink500: 'E91E63',\r\n        pink600: 'D81B60',\r\n        pink700: 'C2185B',\r\n        pink800: 'AD1457',\r\n        pink900: '880E4F',\r\n        pinka100: 'FF80AB',\r\n        pinka200: 'FF4081',\r\n        pinka400: 'F50057',\r\n        pinka700: 'C51162',\r\n        purple50: 'F3E5F5',\r\n        purple100: 'E1BEE7',\r\n        purple200: 'CE93D8',\r\n        purple300: 'BA68C8',\r\n        purple400: 'AB47BC',\r\n        purple500: '9C27B0',\r\n        purple600: '8E24AA',\r\n        purple700: '7B1FA2',\r\n        purple800: '6A1B9A',\r\n        purple900: '4A148C',\r\n        purplea100: 'EA80FC',\r\n        purplea200: 'E040FB',\r\n        purplea400: 'D500F9',\r\n        purplea700: 'AA00FF',\r\n        deeppurple50: 'EDE7F6',\r\n        deeppurple100: 'D1C4E9',\r\n        deeppurple200: 'B39DDB',\r\n        deeppurple300: '9575CD',\r\n        deeppurple400: '7E57C2',\r\n        deeppurple500: '673AB7',\r\n        deeppurple600: '5E35B1',\r\n        deeppurple700: '512DA8',\r\n        deeppurple800: '4527A0',\r\n        deeppurple900: '311B92',\r\n        deeppurplea100: 'B388FF',\r\n        deeppurplea200: '7C4DFF',\r\n        deeppurplea400: '651FFF',\r\n        deeppurplea700: '6200EA',\r\n        indigo50: 'E8EAF6',\r\n        indigo100: 'C5CAE9',\r\n        indigo200: '9FA8DA',\r\n        indigo300: '7986CB',\r\n        indigo400: '5C6BC0',\r\n        indigo500: '3F51B5',\r\n        indigo600: '3949AB',\r\n        indigo700: '303F9F',\r\n        indigo800: '283593',\r\n        indigo900: '1A237E',\r\n        indigoa100: '8C9EFF',\r\n        indigoa200: '536DFE',\r\n        indigoa400: '3D5AFE',\r\n        indigoa700: '304FFE',\r\n        blue50: 'E3F2FD',\r\n        blue100: 'BBDEFB',\r\n        blue200: '90CAF9',\r\n        blue300: '64B5F6',\r\n        blue400: '42A5F5',\r\n        blue500: '2196F3',\r\n        blue600: '1E88E5',\r\n        blue700: '1976D2',\r\n        blue800: '1565C0',\r\n        blue900: '0D47A1',\r\n        bluea100: '82B1FF',\r\n        bluea200: '448AFF',\r\n        bluea400: '2979FF',\r\n        bluea700: '2962FF',\r\n        lightblue50: 'E1F5FE',\r\n        lightblue100: 'B3E5FC',\r\n        lightblue200: '81D4FA',\r\n        lightblue300: '4FC3F7',\r\n        lightblue400: '29B6F6',\r\n        lightblue500: '03A9F4',\r\n        lightblue600: '039BE5',\r\n        lightblue700: '0288D1',\r\n        lightblue800: '0277BD',\r\n        lightblue900: '01579B',\r\n        lightbluea100: '80D8FF',\r\n        lightbluea200: '40C4FF',\r\n        lightbluea400: '00B0FF',\r\n        lightbluea700: '0091EA',\r\n        cyan50: 'E0F7FA',\r\n        cyan100: 'B2EBF2',\r\n        cyan200: '80DEEA',\r\n        cyan300: '4DD0E1',\r\n        cyan400: '26C6DA',\r\n        cyan500: '00BCD4',\r\n        cyan600: '00ACC1',\r\n        cyan700: '0097A7',\r\n        cyan800: '00838F',\r\n        cyan900: '006064',\r\n        cyana100: '84FFFF',\r\n        cyana200: '18FFFF',\r\n        cyana400: '00E5FF',\r\n        cyana700: '00B8D4',\r\n        teal50: 'E0F2F1',\r\n        teal100: 'B2DFDB',\r\n        teal200: '80CBC4',\r\n        teal300: '4DB6AC',\r\n        teal400: '26A69A',\r\n        teal500: '009688',\r\n        teal600: '00897B',\r\n        teal700: '00796B',\r\n        teal800: '00695C',\r\n        teal900: '004D40',\r\n        teala100: 'A7FFEB',\r\n        teala200: '64FFDA',\r\n        teala400: '1DE9B6',\r\n        teala700: '00BFA5',\r\n        green50: 'E8F5E9',\r\n        green100: 'C8E6C9',\r\n        green200: 'A5D6A7',\r\n        green300: '81C784',\r\n        green400: '66BB6A',\r\n        green500: '4CAF50',\r\n        green600: '43A047',\r\n        green700: '388E3C',\r\n        green800: '2E7D32',\r\n        green900: '1B5E20',\r\n        greena100: 'B9F6CA',\r\n        greena200: '69F0AE',\r\n        greena400: '00E676',\r\n        greena700: '00C853',\r\n        lightgreen50: 'F1F8E9',\r\n        lightgreen100: 'DCEDC8',\r\n        lightgreen200: 'C5E1A5',\r\n        lightgreen300: 'AED581',\r\n        lightgreen400: '9CCC65',\r\n        lightgreen500: '8BC34A',\r\n        lightgreen600: '7CB342',\r\n        lightgreen700: '689F38',\r\n        lightgreen800: '558B2F',\r\n        lightgreen900: '33691E',\r\n        lightgreena100: 'CCFF90',\r\n        lightgreena200: 'B2FF59',\r\n        lightgreena400: '76FF03',\r\n        lightgreena700: '64DD17',\r\n        lime50: 'F9FBE7',\r\n        lime100: 'F0F4C3',\r\n        lime200: 'E6EE9C',\r\n        lime300: 'DCE775',\r\n        lime400: 'D4E157',\r\n        lime500: 'CDDC39',\r\n        lime600: 'C0CA33',\r\n        lime700: 'AFB42B',\r\n        lime800: '9E9D24',\r\n        lime900: '827717',\r\n        limea100: 'F4FF81',\r\n        limea200: 'EEFF41',\r\n        limea400: 'C6FF00',\r\n        limea700: 'AEEA00',\r\n        yellow50: 'FFFDE7',\r\n        yellow100: 'FFF9C4',\r\n        yellow200: 'FFF59D',\r\n        yellow300: 'FFF176',\r\n        yellow400: 'FFEE58',\r\n        yellow500: 'FFEB3B',\r\n        yellow600: 'FDD835',\r\n        yellow700: 'FBC02D',\r\n        yellow800: 'F9A825',\r\n        yellow900: 'F57F17',\r\n        yellowa100: 'FFFF8D',\r\n        yellowa200: 'FFFF00',\r\n        yellowa400: 'FFEA00',\r\n        yellowa700: 'FFD600',\r\n        amber50: 'FFF8E1',\r\n        amber100: 'FFECB3',\r\n        amber200: 'FFE082',\r\n        amber300: 'FFD54F',\r\n        amber400: 'FFCA28',\r\n        amber500: 'FFC107',\r\n        amber600: 'FFB300',\r\n        amber700: 'FFA000',\r\n        amber800: 'FF8F00',\r\n        amber900: 'FF6F00',\r\n        ambera100: 'FFE57F',\r\n        ambera200: 'FFD740',\r\n        ambera400: 'FFC400',\r\n        ambera700: 'FFAB00',\r\n        orange50: 'FFF3E0',\r\n        orange100: 'FFE0B2',\r\n        orange200: 'FFCC80',\r\n        orange300: 'FFB74D',\r\n        orange400: 'FFA726',\r\n        orange500: 'FF9800',\r\n        orange600: 'FB8C00',\r\n        orange700: 'F57C00',\r\n        orange800: 'EF6C00',\r\n        orange900: 'E65100',\r\n        orangea100: 'FFD180',\r\n        orangea200: 'FFAB40',\r\n        orangea400: 'FF9100',\r\n        orangea700: 'FF6D00',\r\n        deeporange50: 'FBE9E7',\r\n        deeporange100: 'FFCCBC',\r\n        deeporange200: 'FFAB91',\r\n        deeporange300: 'FF8A65',\r\n        deeporange400: 'FF7043',\r\n        deeporange500: 'FF5722',\r\n        deeporange600: 'F4511E',\r\n        deeporange700: 'E64A19',\r\n        deeporange800: 'D84315',\r\n        deeporange900: 'BF360C',\r\n        deeporangea100: 'FF9E80',\r\n        deeporangea200: 'FF6E40',\r\n        deeporangea400: 'FF3D00',\r\n        deeporangea700: 'DD2C00',\r\n        brown50: 'EFEBE9',\r\n        brown100: 'D7CCC8',\r\n        brown200: 'BCAAA4',\r\n        brown300: 'A1887F',\r\n        brown400: '8D6E63',\r\n        brown500: '795548',\r\n        brown600: '6D4C41',\r\n        brown700: '5D4037',\r\n        brown800: '4E342E',\r\n        brown900: '3E2723',\r\n    },\r\n    errorReporting: 1,\r\n    modifier: false,\r\n    helper: (() => {\r\n        document.addEventListener('keydown', (e) => {\r\n            jsPanel.modifier = e;\r\n        });\r\n        document.addEventListener('keyup', () => {\r\n            jsPanel.modifier = false;\r\n        });\r\n    })(),\r\n\r\n    // color methods ---------------\r\n    color(val) {\r\n        let color = val.toLowerCase(),\r\n            r,\r\n            g,\r\n            b,\r\n            h,\r\n            s,\r\n            l,\r\n            match,\r\n            channels,\r\n            hsl,\r\n            result = {};\r\n        const hexPattern = /^#?([0-9a-f]{3}|[0-9a-f]{6})$/gi, // matches \"#123\" or \"#f05a78\" with or without \"#\"\r\n            RGBAPattern = /^rgba?\\(([0-9]{1,3}),([0-9]{1,3}),([0-9]{1,3}),?(0|1|0\\.[0-9]{1,2}|\\.[0-9]{1,2})?\\)$/gi, // matches rgb/rgba color values, whitespace allowed\r\n            HSLAPattern = /^hsla?\\(([0-9]{1,3}),([0-9]{1,3}%),([0-9]{1,3}%),?(0|1|0\\.[0-9]{1,2}|\\.[0-9]{1,2})?\\)$/gi,\r\n            namedColors = this.colorNames;\r\n\r\n        // change named color to corresponding hex value\r\n        if (namedColors[color]) {\r\n            color = namedColors[color];\r\n        }\r\n\r\n        // check val for hex color\r\n        if (color.match(hexPattern) !== null) {\r\n            // '#' remove\r\n            color = color.replace('#', '');\r\n            // color has either 3 or 6 characters\r\n            if (color.length % 2 === 1) {\r\n                // color has 3 char -> convert to 6 char\r\n                // r = color.substr(0,1).repeat(2);\r\n                // g = color.substr(1,1).repeat(2); // String.prototype.repeat() doesn't work in IE11\r\n                // b = color.substr(2,1).repeat(2);\r\n                r = String(color.substr(0, 1)) + color.substr(0, 1);\r\n                g = String(color.substr(1, 1)) + color.substr(1, 1);\r\n                b = String(color.substr(2, 1)) + color.substr(2, 1);\r\n\r\n                result.rgb = {\r\n                    r: parseInt(r, 16),\r\n                    g: parseInt(g, 16),\r\n                    b: parseInt(b, 16),\r\n                };\r\n\r\n                result.hex = `#${r}${g}${b}`;\r\n            } else {\r\n                // color has 6 char\r\n                result.rgb = {\r\n                    r: parseInt(color.substr(0, 2), 16),\r\n                    g: parseInt(color.substr(2, 2), 16),\r\n                    b: parseInt(color.substr(4, 2), 16),\r\n                };\r\n\r\n                result.hex = `#${color}`;\r\n            }\r\n\r\n            hsl = this.rgbToHsl(result.rgb.r, result.rgb.g, result.rgb.b);\r\n            result.hsl = hsl;\r\n            result.rgb.css = `rgb(${result.rgb.r},${result.rgb.g},${result.rgb.b})`;\r\n        }\r\n        // check val for rgb/rgba color\r\n        else if (color.match(RGBAPattern)) {\r\n            match = RGBAPattern.exec(color);\r\n            result.rgb = { css: color, r: match[1], g: match[2], b: match[3] };\r\n            result.hex = this.rgbToHex(match[1], match[2], match[3]);\r\n            hsl = this.rgbToHsl(match[1], match[2], match[3]);\r\n            result.hsl = hsl;\r\n        }\r\n        // check val for hsl/hsla color\r\n        else if (color.match(HSLAPattern)) {\r\n            match = HSLAPattern.exec(color);\r\n\r\n            h = match[1] / 360;\r\n            s = match[2].substr(0, match[2].length - 1) / 100;\r\n            l = match[3].substr(0, match[3].length - 1) / 100;\r\n\r\n            channels = this.hslToRgb(h, s, l);\r\n\r\n            result.rgb = {\r\n                css: `rgb(${channels[0]},${channels[1]},${channels[2]})`,\r\n                r: channels[0],\r\n                g: channels[1],\r\n                b: channels[2],\r\n            };\r\n            result.hex = this.rgbToHex(result.rgb.r, result.rgb.g, result.rgb.b);\r\n            result.hsl = {\r\n                css: `hsl(${match[1]},${match[2]},${match[3]})`,\r\n                h: match[1],\r\n                s: match[2],\r\n                l: match[3],\r\n            };\r\n        }\r\n\r\n        // or return #f5f5f5\r\n        else {\r\n            result.hex = '#f5f5f5';\r\n            result.rgb = { css: 'rgb(245,245,245)', r: 245, g: 245, b: 245 };\r\n            result.hsl = { css: 'hsl(0,0%,96%)', h: 0, s: '0%', l: '96%' };\r\n        }\r\n\r\n        return result;\r\n    },\r\n    calcColors(primaryColor) {\r\n        const threshold = this.colorBrightnessThreshold,\r\n            primeColor = this.color(primaryColor),\r\n            filledlightColor = this.lighten(primaryColor, this.colorFilledLight),\r\n            filledColor = this.darken(primaryColor, this.colorFilled),\r\n            fontColorForPrimary = this.perceivedBrightness(primaryColor) <= threshold ? '#ffffff' : '#000000',\r\n            fontColorFilledlight = this.perceivedBrightness(filledlightColor) <= threshold ? '#ffffff' : '#000000',\r\n            fontColorFilled = this.perceivedBrightness(filledColor) <= threshold ? '#ffffff' : '#000000',\r\n            filleddarkColor = this.lighten(primaryColor, this.colorFilledDark),\r\n            fontColorFilleddark = this.perceivedBrightness(filleddarkColor) <= threshold ? '#ffffff' : '#000000';\r\n        return [\r\n            primeColor.hsl.css,\r\n            filledlightColor,\r\n            filledColor,\r\n            fontColorForPrimary,\r\n            fontColorFilledlight,\r\n            fontColorFilled,\r\n            filleddarkColor,\r\n            fontColorFilleddark,\r\n        ];\r\n    },\r\n    darken(val, amount) {\r\n        // amount is value between 0 and 1\r\n        const hsl = this.color(val).hsl,\r\n            l = parseFloat(hsl.l),\r\n            lnew = Math.round(l - l * amount) + '%';\r\n        return `hsl(${hsl.h},${hsl.s},${lnew})`;\r\n    },\r\n    lighten(val, amount) {\r\n        // amount is value between 0 and 1\r\n        const hsl = this.color(val).hsl,\r\n            l = parseFloat(hsl.l),\r\n            lnew = Math.round(l + (100 - l) * amount) + '%';\r\n        return `hsl(${hsl.h},${hsl.s},${lnew})`;\r\n    },\r\n    hslToRgb(h, s, l) {\r\n        // h, s and l must be values between 0 and 1\r\n        let r, g, b;\r\n        if (s === 0) {\r\n            r = g = b = l; // achromatic\r\n        } else {\r\n            let hue2rgb = (p, q, t) => {\r\n                if (t < 0) {\r\n                    t += 1;\r\n                }\r\n                if (t > 1) {\r\n                    t -= 1;\r\n                }\r\n                if (t < 1 / 6) {\r\n                    return p + (q - p) * 6 * t;\r\n                }\r\n                if (t < 1 / 2) {\r\n                    return q;\r\n                }\r\n                if (t < 2 / 3) {\r\n                    return p + (q - p) * (2 / 3 - t) * 6;\r\n                }\r\n                return p;\r\n            };\r\n            let q = l < 0.5 ? l * (1 + s) : l + s - l * s,\r\n                p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1 / 3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1 / 3);\r\n        }\r\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n    },\r\n    rgbToHsl(r, g, b) {\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        let max = Math.max(r, g, b),\r\n            min = Math.min(r, g, b),\r\n            h,\r\n            s,\r\n            l = (max + min) / 2;\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            let d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / d + (g < b ? 6 : 0);\r\n                    break;\r\n                case g:\r\n                    h = (b - r) / d + 2;\r\n                    break;\r\n                case b:\r\n                    h = (r - g) / d + 4;\r\n                    break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        //return [ h, s, l ];\r\n        h = Math.round(h * 360);\r\n        s = Math.round(s * 100) + '%';\r\n        l = Math.round(l * 100) + '%';\r\n        return { css: 'hsl(' + h + ',' + s + ',' + l + ')', h: h, s: s, l: l };\r\n    },\r\n    rgbToHex(r, g, b) {\r\n        let red = Number(r).toString(16),\r\n            green = Number(g).toString(16),\r\n            blue = Number(b).toString(16);\r\n        if (red.length === 1) {\r\n            red = `0${red}`;\r\n        }\r\n        if (green.length === 1) {\r\n            green = `0${green}`;\r\n        }\r\n        if (blue.length === 1) {\r\n            blue = `0${blue}`;\r\n        }\r\n        return `#${red}${green}${blue}`;\r\n    },\r\n    perceivedBrightness(val) {\r\n        const rgb = this.color(val).rgb;\r\n        // return value is in the range 0 - 1 and input rgb values must also be in the range 0 - 1\r\n        // https://www.w3.org/TR/WCAG20-TECHS/G18.html\r\n        return (rgb.r / 255) * 0.2126 + (rgb.g / 255) * 0.7152 + (rgb.b / 255) * 0.0722;\r\n    },\r\n\r\n    // positioning methods ---------------\r\n    pOposition(positionshorthand) {\r\n        let result = {};\r\n        // remove leading and trailing whitespace and split position shorthand string into array\r\n        let pos = positionshorthand.trim().split(/\\s+/);\r\n\r\n        // find autoposition value and assign to result, must be the first item to find and remove\r\n        let auto = pos.filter((item) => {\r\n            return item.match(/^(down|right|up|left)$/i);\r\n        });\r\n        if (auto.length) {\r\n            result.autoposition = auto[0];\r\n            pos.splice(pos.indexOf(auto[0]), 1);\r\n        }\r\n\r\n        // find my and at values and assign to result\r\n        let my_at = pos.filter((item) => {\r\n            return item.match(/^(left-|right-)(top|center|bottom)$|(^center-)(top|bottom)$|(^center$)/i);\r\n        });\r\n        if (my_at.length) {\r\n            result.my = my_at[0];\r\n            result.at = my_at[1] || my_at[0];\r\n            pos.splice(pos.indexOf(my_at[0]), 1);\r\n            if (my_at[1]) {\r\n                pos.splice(pos.indexOf(my_at[1]), 1);\r\n            }\r\n        } else {\r\n            result.my = 'center';\r\n            result.at = 'center';\r\n        }\r\n\r\n        // find offset and assign to result\r\n        let offsets = pos.filter((item) => {\r\n            return item.match(/^[+-]?\\d*\\.?\\d+[a-z%]*$/i);\r\n        });\r\n        if (offsets.length) {\r\n            result.offsetX = offsets[0].match(/^[+-]?\\d*\\.?\\d+$/i) ? `${offsets[0]}px` : offsets[0];\r\n            if (offsets[1]) {\r\n                result.offsetY = offsets[1].match(/^[+-]?\\d*\\.?\\d+$/i) ? `${offsets[1]}px` : offsets[1];\r\n            } else {\r\n                // noinspection JSSuspiciousNameCombination\r\n                result.offsetY = result.offsetX;\r\n            }\r\n            pos.splice(pos.indexOf(offsets[0]), 1);\r\n            if (offsets[1]) {\r\n                pos.splice(pos.indexOf(offsets[1]), 1);\r\n            }\r\n        }\r\n\r\n        // last to find and assign is of value and must be all the rest (if there is a rest)\r\n        if (pos.length) {\r\n            result.of = pos.join(' ');\r\n        }\r\n\r\n        return result;\r\n    },\r\n    position(panel, position) {\r\n        // @panel:     selector string | Element | jQuery object\r\n        //                - usually the jsPanel to position\r\n        // @position:  object\r\n        //                - positioning configuration\r\n        //                - if panel config uses a position shorthand string it must be converted to object before it's passed to this function\r\n\r\n        // if @position is not set return panel\r\n        if (!position) {\r\n            panel.style.opacity = 1;\r\n            return panel;\r\n        }\r\n\r\n        // merge position defaults with @position\r\n        if (typeof position === 'string') {\r\n            position = Object.assign({}, this.defaults.position, this.pOposition(position));\r\n        } else {\r\n            position = Object.assign({}, this.defaults.position, position);\r\n        }\r\n\r\n        // process parameter functions for 'my', 'at', 'of'\r\n        // 'offsetX', 'offsetY', 'minLeft', 'maxLeft', 'minTop', 'maxTop' are processed when params are applied\r\n        ['my', 'at', 'of'].forEach((item) => {\r\n            if (typeof position[item] === 'function') {\r\n                position[item] = position[item].call(panel, panel);\r\n            }\r\n        });\r\n\r\n        // panel uses option.container: 'window' position is always fixed\r\n        if (panel.options.container === 'window') {\r\n            panel.style.position = 'fixed';\r\n        }\r\n\r\n        // normalize param @panel to ensure it's an Element object\r\n        if (typeof panel === 'string') {\r\n            panel = document.querySelector(panel);\r\n        } else if (Object.getPrototypeOf(panel).jquery) {\r\n            panel = panel[0];\r\n        } // else panel is assumed to be element object\r\n\r\n        // container is either 'window' or the panel's parent element\r\n        const container = panel.options.container === 'window' ? 'window' : panel.parentElement;\r\n\r\n        // get base values in order to calculate position deltas\r\n        // since getBoundingClientRect() calculates values relative to the viewport the parentElement of panel/elmtToPositionAgainst is irrelevant\r\n        const panelRect = panel.getBoundingClientRect(),\r\n            containerDomRect = panel.parentElement.getBoundingClientRect(),\r\n            containerRect =\r\n                container === 'window'\r\n                    ? {\r\n                          left: 0,\r\n                          top: 0,\r\n                          width: document.documentElement.clientWidth,\r\n                          height: window.innerHeight,\r\n                      } // fake window.getBoundingClientRect() return value\r\n                    : //: panel.parentElement.getBoundingClientRect(); // using 'container' instead of 'panel.parentElement' produces an error\r\n                      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\r\n                      // due to the infos from above link IE and EDGE (old version not based on Chromium) report an error in strict mode -> line of code above replaced with line below\r\n                      {\r\n                          width: containerDomRect.width,\r\n                          height: containerDomRect.height,\r\n                          left: containerDomRect.left,\r\n                          top: containerDomRect.top,\r\n                      };\r\n\r\n        // calculate scale factors, needed for correct positioning if container is scaled - transform: scale()\r\n        // window is never scaled --> scale factors default to 1\r\n        const scaleFactor =\r\n            container === 'window'\r\n                ? { x: 1, y: 1 }\r\n                : {\r\n                      x: containerRect.width / container.offsetWidth,\r\n                      y: containerRect.height / container.offsetHeight,\r\n                  };\r\n\r\n        // get and apply border width values of container - needed for positioning corrections due to positioning with %-values\r\n        const containerStyle =\r\n            container === 'window'\r\n                ? {\r\n                      borderTopWidth: '0px',\r\n                      borderRightWidth: '0px',\r\n                      borderBottomWidth: '0px',\r\n                      borderLeftWidth: '0px',\r\n                  } // fake getComputedStyle(window) return value\r\n                : window.getComputedStyle(container);\r\n\r\n        containerRect.width -= (parseFloat(containerStyle.borderLeftWidth) + parseFloat(containerStyle.borderRightWidth)) * scaleFactor.x;\r\n        containerRect.height -= (parseFloat(containerStyle.borderTopWidth) + parseFloat(containerStyle.borderBottomWidth)) * scaleFactor.y;\r\n\r\n        // calculate @position.of rect if @position.of is set\r\n        let positionOfRect;\r\n        if (!position.of) {\r\n            positionOfRect = containerRect;\r\n        } else {\r\n            if (typeof position.of === 'string') {\r\n                positionOfRect =\r\n                    position.of === 'window'\r\n                        ? {\r\n                              borderTopWidth: '0px',\r\n                              borderRightWidth: '0px',\r\n                              borderBottomWidth: '0px',\r\n                              borderLeftWidth: '0px',\r\n                          } // fake getComputedStyle(window) return value\r\n                        : document.querySelector(position.of).getBoundingClientRect();\r\n            } else if (Object.getPrototypeOf(position.of).jquery) {\r\n                positionOfRect = position.of[0].getBoundingClientRect();\r\n            } else {\r\n                positionOfRect = position.of.getBoundingClientRect();\r\n            }\r\n        }\r\n\r\n        // check for scrollbar width values\r\n        let scrollbarwidthsWindow = this.getScrollbarWidth(document.body),\r\n            scrollbarwidthsContainer = this.getScrollbarWidth(panel.parentElement);\r\n\r\n        // calc css left for @panel in regard of @position.my and @position.at\r\n        let left = '0px';\r\n        if (position.my.startsWith('left-')) {\r\n            if (position.at.startsWith('left-')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + 'px';\r\n                } else {\r\n                    left = '0px';\r\n                }\r\n            } else if (position.at.startsWith('center')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + positionOfRect.width / 2 + 'px';\r\n                } else {\r\n                    left = containerRect.width / 2 + 'px';\r\n                }\r\n            } else if (position.at.startsWith('right-')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) + positionOfRect.width + 'px';\r\n                } else {\r\n                    left = containerRect.width + 'px';\r\n                }\r\n            }\r\n        } else if (position.my.startsWith('center')) {\r\n            if (position.at.startsWith('left-')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) - panelRect.width / 2 + 'px';\r\n                } else {\r\n                    left = -panelRect.width / 2 + 'px';\r\n                }\r\n            } else if (position.at.startsWith('center')) {\r\n                if (position.of) {\r\n                    left =\r\n                        positionOfRect.left -\r\n                        containerRect.left -\r\n                        parseFloat(containerStyle.borderLeftWidth) -\r\n                        (panelRect.width - positionOfRect.width) / 2 +\r\n                        'px';\r\n                } else {\r\n                    left = containerRect.width / 2 - panelRect.width / 2 + 'px';\r\n                }\r\n            } else if (position.at.startsWith('right-')) {\r\n                if (position.of) {\r\n                    left =\r\n                        positionOfRect.left -\r\n                        containerRect.left -\r\n                        parseFloat(containerStyle.borderLeftWidth) +\r\n                        (positionOfRect.width - panelRect.width / 2) +\r\n                        'px';\r\n                } else {\r\n                    left = containerRect.width - panelRect.width / 2 + 'px';\r\n                }\r\n            }\r\n        } else if (position.my.startsWith('right-')) {\r\n            if (position.at.startsWith('left-')) {\r\n                if (position.of) {\r\n                    left = positionOfRect.left - containerRect.left - parseFloat(containerStyle.borderLeftWidth) - panelRect.width + 'px';\r\n                } else {\r\n                    left = -panelRect.width + 'px';\r\n                }\r\n            } else if (position.at.startsWith('center')) {\r\n                if (position.of) {\r\n                    left =\r\n                        positionOfRect.left -\r\n                        containerRect.left -\r\n                        parseFloat(containerStyle.borderLeftWidth) -\r\n                        panelRect.width +\r\n                        positionOfRect.width / 2 +\r\n                        'px';\r\n                } else {\r\n                    left = containerRect.width / 2 - panelRect.width + 'px';\r\n                }\r\n            } else if (position.at.startsWith('right-')) {\r\n                if (position.of) {\r\n                    left =\r\n                        positionOfRect.left -\r\n                        containerRect.left -\r\n                        parseFloat(containerStyle.borderLeftWidth) +\r\n                        positionOfRect.width -\r\n                        panelRect.width +\r\n                        'px';\r\n                } else {\r\n                    left = containerRect.width - panelRect.width + 'px';\r\n                }\r\n                // correction for vertical scrollbar only needed for panels using my: 'right-*' together with at: 'right-*'\r\n                if (container !== 'window') {\r\n                    left = parseFloat(left) - scrollbarwidthsContainer.y + 'px';\r\n                }\r\n            }\r\n        }\r\n\r\n        // calc css top for @panel in regard of @position.my and @position.at\r\n        let top = '0px';\r\n        if (position.my.endsWith('-top')) {\r\n            if (position.at.endsWith('-top')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) + 'px';\r\n                } else {\r\n                    top = '0px';\r\n                }\r\n            } else if (position.at.endsWith('center')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) + positionOfRect.height / 2 + 'px';\r\n                } else {\r\n                    top = containerRect.height / 2 + 'px';\r\n                }\r\n            } else if (position.at.endsWith('-bottom')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) + positionOfRect.height + 'px';\r\n                } else {\r\n                    top = containerRect.height + 'px';\r\n                }\r\n            }\r\n        } else if (position.my.endsWith('center')) {\r\n            if (position.at.endsWith('-top')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height / 2 + 'px';\r\n                } else {\r\n                    top = -panelRect.height / 2 + 'px';\r\n                }\r\n            } else if (position.at.endsWith('center')) {\r\n                if (position.of) {\r\n                    top =\r\n                        positionOfRect.top -\r\n                        containerRect.top -\r\n                        parseFloat(containerStyle.borderTopWidth) -\r\n                        panelRect.height / 2 +\r\n                        positionOfRect.height / 2 +\r\n                        'px';\r\n                } else {\r\n                    top = containerRect.height / 2 - panelRect.height / 2 + 'px';\r\n                }\r\n            } else if (position.at.endsWith('-bottom')) {\r\n                if (position.of) {\r\n                    top =\r\n                        positionOfRect.top -\r\n                        containerRect.top -\r\n                        parseFloat(containerStyle.borderTopWidth) -\r\n                        panelRect.height / 2 +\r\n                        positionOfRect.height +\r\n                        'px';\r\n                } else {\r\n                    top = containerRect.height - panelRect.height / 2 + 'px';\r\n                }\r\n            }\r\n        } else if (position.my.endsWith('-bottom')) {\r\n            if (position.at.endsWith('-top')) {\r\n                if (position.of) {\r\n                    top = positionOfRect.top - containerRect.top - parseFloat(containerStyle.borderTopWidth) - panelRect.height + 'px';\r\n                } else {\r\n                    top = -panelRect.height + 'px';\r\n                }\r\n            } else if (position.at.endsWith('center')) {\r\n                if (position.of) {\r\n                    top =\r\n                        positionOfRect.top -\r\n                        containerRect.top -\r\n                        parseFloat(containerStyle.borderTopWidth) -\r\n                        panelRect.height +\r\n                        positionOfRect.height / 2 +\r\n                        'px';\r\n                } else {\r\n                    top = containerRect.height / 2 - panelRect.height + 'px';\r\n                }\r\n            } else if (position.at.endsWith('-bottom')) {\r\n                if (position.of) {\r\n                    top =\r\n                        positionOfRect.top -\r\n                        containerRect.top -\r\n                        parseFloat(containerStyle.borderTopWidth) -\r\n                        panelRect.height +\r\n                        positionOfRect.height +\r\n                        'px';\r\n                } else {\r\n                    top = containerRect.height - panelRect.height + 'px';\r\n                }\r\n                // correction for horizontal scrollbar only needed for panels using my: '*-bottom' together with at: '*-bottom'\r\n                if (container !== 'window') {\r\n                    top = parseFloat(top) - scrollbarwidthsContainer.x + 'px';\r\n                } else {\r\n                    top = parseFloat(top) - scrollbarwidthsWindow.x + 'px';\r\n                }\r\n            }\r\n        }\r\n        panel.style.left = scaleFactor.x === 1 ? left : parseFloat(left) / scaleFactor.x + 'px';\r\n        panel.style.top = scaleFactor.y === 1 ? top : parseFloat(top) / scaleFactor.y + 'px';\r\n        // at this point panels are correctly positioned according to the my/at values\r\n\r\n        let panelStyle = getComputedStyle(panel);\r\n        // eslint-disable-next-line no-unused-vars\r\n        let pos = { left: panelStyle.left, top: panelStyle.top };\r\n        //console.log('pos after applying my/at/of:', pos);\r\n\r\n        // apply autoposition only if ...\r\n        if (\r\n            position.autoposition &&\r\n            position.my === position.at &&\r\n            ['left-top', 'center-top', 'right-top', 'left-bottom', 'center-bottom', 'right-bottom'].indexOf(position.my) >= 0\r\n        ) {\r\n            pos = this.applyPositionAutopos(panel, pos, position);\r\n            //console.log('let pos after applying autoposition:', pos);\r\n        }\r\n\r\n        // apply position.offsetX and position.offsetY\r\n        if (position.offsetX || position.offsetY) {\r\n            pos = this.applyPositionOffset(panel, pos, position);\r\n            //console.log('pos after applying offsets:', pos);\r\n        }\r\n\r\n        // calculate and apply position.minLeft, position.minTop, position.maxLeft and position.maxTop\r\n        if (position.minLeft || position.minTop || position.maxLeft || position.maxTop) {\r\n            pos = this.applyPositionMinMax(panel, pos, position);\r\n            //console.log('pos after applying minLeft, maxLeft, maxTop, minTop:', pos);\r\n        }\r\n\r\n        // apply position.modify\r\n        // must be function returning an object with keys left/top, each with valid css length value\r\n        if (position.modify) {\r\n            // eslint-disable-next-line no-unused-vars\r\n            pos = this.applyPositionModify(panel, pos, position);\r\n            //console.log('pos after applying modify():', pos);\r\n        }\r\n\r\n        typeof panel.options.opacity === 'number' ? (panel.style.opacity = panel.options.opacity) : (panel.style.opacity = 1);\r\n\r\n        return panel;\r\n    },\r\n    applyPositionAutopos(panel, pos, position) {\r\n        // add class with position and autoposition direction\r\n        const newClass = `${position.my}-${position.autoposition.toLowerCase()}`;\r\n        panel.classList.add(newClass);\r\n\r\n        // get all panels with same class\r\n        const newClassAll = Array.prototype.slice.call(document.querySelectorAll(`.${newClass}`)),\r\n            ownIndex = newClassAll.indexOf(panel);\r\n\r\n        // if more than 1 position new panel\r\n        if (newClassAll.length > 1) {\r\n            switch (position.autoposition) {\r\n                case 'down':\r\n                    // collect heights of all elmts to calc new top position\r\n                    newClassAll.forEach((item, index) => {\r\n                        if (index > 0 && index <= ownIndex) {\r\n                            pos.top = parseFloat(pos.top) + newClassAll[--index].getBoundingClientRect().height + jsPanel.autopositionSpacing + 'px';\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'up':\r\n                    newClassAll.forEach((item, index) => {\r\n                        if (index > 0 && index <= ownIndex) {\r\n                            pos.top = parseFloat(pos.top) - newClassAll[--index].getBoundingClientRect().height - jsPanel.autopositionSpacing + 'px';\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'right':\r\n                    // collect widths of all elmts to calc new left position\r\n                    newClassAll.forEach((item, index) => {\r\n                        if (index > 0 && index <= ownIndex) {\r\n                            pos.left = parseFloat(pos.left) + newClassAll[--index].getBoundingClientRect().width + jsPanel.autopositionSpacing + 'px';\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'left':\r\n                    newClassAll.forEach((item, index) => {\r\n                        if (index > 0 && index <= ownIndex) {\r\n                            pos.left = parseFloat(pos.left) - newClassAll[--index].getBoundingClientRect().width - jsPanel.autopositionSpacing + 'px';\r\n                        }\r\n                    });\r\n                    break;\r\n            }\r\n            panel.style.left = pos.left;\r\n            panel.style.top = pos.top;\r\n        }\r\n        return { left: pos.left, top: pos.top };\r\n    },\r\n    applyPositionOffset(panel, pos, position) {\r\n        ['offsetX', 'offsetY'].forEach((offset) => {\r\n            if (position[offset]) {\r\n                if (typeof position[offset] === 'function') {\r\n                    position[offset] = position[offset].call(pos, pos, position);\r\n                }\r\n                if (isNaN(position[offset]) === false) {\r\n                    // if an offset's value type is integer it's interpreted as pixel value\r\n                    position[offset] = `${position[offset]}px`;\r\n                } // else it's assumed offsets are strings with valid css length values\r\n            } else {\r\n                position[offset] = '0px';\r\n            }\r\n        });\r\n        panel.style.left = `calc(${panel.style.left} + ${position.offsetX})`; // offsetX\r\n        panel.style.top = `calc(${panel.style.top} + ${position.offsetY})`; // offsetY\r\n        const panelStyle = getComputedStyle(panel);\r\n        return { left: panelStyle.left, top: panelStyle.top };\r\n    },\r\n    applyPositionMinMax(panel, pos, position) {\r\n        ['minLeft', 'minTop', 'maxLeft', 'maxTop'].forEach((val) => {\r\n            if (position[val]) {\r\n                if (typeof position[val] === 'function') {\r\n                    position[val] = position[val].call(pos, pos, position);\r\n                }\r\n                if (Number.isInteger(position[val]) || position[val].match(/^\\d+$/)) {\r\n                    // if  val type is integer it's interpreted as pixel value\r\n                    position[val] = `${position[val]}px`;\r\n                } // else it's assumed val is string with valid css length value\r\n            }\r\n        });\r\n        // process minLeft\r\n        if (position.minLeft) {\r\n            // apply minLeft value in order to compare with previous left (pos.left)\r\n            panel.style.left = position.minLeft;\r\n            // now get computed css left\r\n            let left = getComputedStyle(panel).left; // returns string with pixel value\r\n            // now compare current left (minLeft) with pos.left\r\n            if (parseFloat(left) < parseFloat(pos.left)) {\r\n                // if minLeft is less than pos.left return to pos.left\r\n                panel.style.left = pos.left;\r\n            } else {\r\n                // if minLeft is greater than pos.left keep minLeft and reset pos.left to new value\r\n                pos.left = left;\r\n            }\r\n        }\r\n        // process minTop\r\n        if (position.minTop) {\r\n            panel.style.top = position.minTop;\r\n            let top = getComputedStyle(panel).top;\r\n            if (parseFloat(top) < parseFloat(pos.top)) {\r\n                panel.style.top = pos.top;\r\n            } else {\r\n                pos.top = top;\r\n            }\r\n        }\r\n        // process maxLeft\r\n        if (position.maxLeft) {\r\n            panel.style.left = position.maxLeft;\r\n            let left = getComputedStyle(panel).left;\r\n            if (parseFloat(left) > parseFloat(pos.left)) {\r\n                panel.style.left = pos.left;\r\n            } else {\r\n                pos.left = left;\r\n            }\r\n        }\r\n        // process maxTop\r\n        if (position.maxTop) {\r\n            panel.style.top = position.maxTop;\r\n            let top = getComputedStyle(panel).top;\r\n            if (parseFloat(top) > parseFloat(pos.top)) {\r\n                panel.style.top = pos.top;\r\n            } else {\r\n                pos.top = top;\r\n            }\r\n        }\r\n        const panelStyle = getComputedStyle(panel);\r\n        return { left: panelStyle.left, top: panelStyle.top };\r\n    },\r\n    applyPositionModify(panel, pos, position) {\r\n        if (position.modify && typeof position.modify === 'function') {\r\n            const modifiedPosition = position.modify.call(pos, pos, position);\r\n            panel.style.left =\r\n                Number.isInteger(modifiedPosition.left) || modifiedPosition.left.match(/^\\d+$/)\r\n                    ? `${modifiedPosition.left}px`\r\n                    : modifiedPosition.left;\r\n            panel.style.top =\r\n                Number.isInteger(modifiedPosition.top) || modifiedPosition.top.match(/^\\d+$/) ? `${modifiedPosition.top}px` : modifiedPosition.top;\r\n        }\r\n        const panelStyle = getComputedStyle(panel);\r\n        return { left: panelStyle.left, top: panelStyle.top };\r\n    },\r\n    autopositionRemaining(panel) {\r\n        let autoPos,\r\n            parent = panel.options.container;\r\n        [\r\n            'left-top-down',\r\n            'left-top-right',\r\n            'center-top-down',\r\n            'right-top-down',\r\n            'right-top-left',\r\n            'left-bottom-up',\r\n            'left-bottom-right',\r\n            'center-bottom-up',\r\n            'right-bottom-up',\r\n            'right-bottom-left',\r\n        ].forEach((item) => {\r\n            if (panel.classList.contains(item)) {\r\n                autoPos = item;\r\n            }\r\n        });\r\n        if (autoPos) {\r\n            const box = parent === 'window' ? document.body : typeof parent === 'string' ? document.querySelector(parent) : parent;\r\n            box.querySelectorAll(`.${autoPos}`).forEach((item) => {\r\n                item.reposition();\r\n            });\r\n        }\r\n    },\r\n    // ---------------------------------------------------\r\n\r\n    addScript(path, type = 'application/javascript', cb) {\r\n        if (!document.querySelector(`script[src=\"${path}\"]`)) {\r\n            const script = document.createElement('script');\r\n            if (cb) {\r\n                script.onload = cb;\r\n            }\r\n            script.src = path;\r\n            script.type = type;\r\n            document.head.appendChild(script);\r\n        }\r\n    },\r\n\r\n    ajax(ajaxConfig, panel) {\r\n        let config,\r\n            urlParts,\r\n            xhr = new XMLHttpRequest();\r\n        const configDefaults = {\r\n            method: 'GET',\r\n            async: true,\r\n            user: '',\r\n            pwd: '',\r\n            done: function () {\r\n                if (panel) {\r\n                    let res = jsPanel.strToHtml(this.responseText);\r\n                    if (config.urlSelector) {\r\n                        res = res.querySelector(config.urlSelector);\r\n                    }\r\n                    panel.contentRemove();\r\n                    panel.content.append(res);\r\n                }\r\n            },\r\n            autoresize: true,\r\n            autoreposition: true,\r\n        };\r\n\r\n        if (panel && typeof ajaxConfig === 'string') {\r\n            config = Object.assign({}, configDefaults, {\r\n                url: ajaxConfig,\r\n            });\r\n        } else if (typeof ajaxConfig === 'object' && ajaxConfig.url) {\r\n            config = Object.assign({}, configDefaults, ajaxConfig);\r\n            config.url = ajaxConfig.url;\r\n            // reset timeout to 0, withCredentials & responseType to false if request is synchronous\r\n            if (config.async === false) {\r\n                config.timeout = 0;\r\n                if (config.withCredentials) {\r\n                    config.withCredentials = undefined;\r\n                }\r\n                if (config.responseType) {\r\n                    config.responseType = undefined;\r\n                }\r\n            }\r\n        } else {\r\n            if (this.errorReporting) {\r\n                let err = 'XMLHttpRequest seems to miss the <mark>url</mark> parameter!';\r\n                jsPanel.errorpanel(err);\r\n            }\r\n            return;\r\n        }\r\n        // check url for added selector\r\n        urlParts = config.url.trim().split(/\\s+/);\r\n        config.url = encodeURI(urlParts[0]);\r\n        if (urlParts.length > 1) {\r\n            urlParts.shift();\r\n            config.urlSelector = urlParts.join(' ');\r\n        }\r\n\r\n        xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    panel ? config.done.call(xhr, xhr, panel) : config.done.call(xhr, xhr);\r\n                } else {\r\n                    if (config.fail) {\r\n                        panel ? config.fail.call(xhr, xhr, panel) : config.fail.call(xhr, xhr);\r\n                    }\r\n                }\r\n\r\n                if (config.always) {\r\n                    panel ? config.always.call(xhr, xhr, panel) : config.always.call(xhr, xhr);\r\n                }\r\n\r\n                // resize and/or reposition panel if either width or height is set to 'auto'\r\n                if (panel) {\r\n                    if (config.autoresize || config.autoreposition) {\r\n                        jsPanel.ajaxAutoresizeAutoreposition(panel, config);\r\n                    }\r\n                }\r\n\r\n                // allows plugins to add callback functions to the ajax always callback\r\n                if (jsPanel.ajaxAlwaysCallbacks.length) {\r\n                    jsPanel.ajaxAlwaysCallbacks.forEach((item) => {\r\n                        panel ? item.call(xhr, xhr, panel) : item.call(xhr, xhr);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        xhr.open(config.method, config.url, config.async, config.user, config.pwd);\r\n        xhr.timeout = config.timeout || 0;\r\n        if (config.withCredentials) {\r\n            xhr.withCredentials = config.withCredentials;\r\n        }\r\n        if (config.responseType) {\r\n            xhr.responseType = config.responseType;\r\n        }\r\n        if (config.beforeSend) {\r\n            panel ? config.beforeSend.call(xhr, xhr, panel) : config.beforeSend.call(xhr, xhr);\r\n        }\r\n        config.data ? xhr.send(config.data) : xhr.send(null);\r\n    },\r\n    ajaxAutoresizeAutoreposition(panel, ajaxOrFetchConfig) {\r\n        const oContentSize = panel.options.contentSize;\r\n        if (typeof oContentSize === 'string' && oContentSize.match(/auto/i)) {\r\n            const parts = oContentSize.split(' '),\r\n                sizes = Object.assign({}, { width: parts[0], height: parts[1] });\r\n            if (ajaxOrFetchConfig.autoresize) {\r\n                panel.resize(sizes);\r\n            }\r\n            if (!panel.classList.contains('jsPanel-contextmenu')) {\r\n                if (ajaxOrFetchConfig.autoreposition) {\r\n                    panel.reposition();\r\n                }\r\n            }\r\n        } else if (typeof oContentSize === 'object' && (oContentSize.width === 'auto' || oContentSize.height === 'auto')) {\r\n            const sizes = Object.assign({}, oContentSize);\r\n            if (ajaxOrFetchConfig.autoresize) {\r\n                panel.resize(sizes);\r\n            }\r\n            if (!panel.classList.contains('jsPanel-contextmenu')) {\r\n                if (ajaxOrFetchConfig.autoreposition) {\r\n                    panel.reposition();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    createPanelTemplate(dataAttr = true) {\r\n        const panel = document.createElement('div');\r\n        panel.className = 'jsPanel';\r\n        panel.style.left = '0';\r\n        panel.style.top = '0';\r\n        if (dataAttr) {\r\n            ['close', 'maximize', 'normalize', 'minimize', 'smallify'].forEach((item) => {\r\n                panel.setAttribute(`data-btn${item}`, 'enabled');\r\n            });\r\n        }\r\n        panel.innerHTML = `<div class=\"jsPanel-hdr\">\r\n                                <div class=\"jsPanel-headerbar\">\r\n                                    <div class=\"jsPanel-headerlogo\"></div>\r\n                                    <div class=\"jsPanel-titlebar\">\r\n                                        <div class=\"jsPanel-title\"></div>\r\n                                    </div>\r\n                                    <div class=\"jsPanel-controlbar\">\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-smallify\"  aria-label=\"Smallify\">${this.icons.smallify}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-minimize\"  aria-label=\"Minimize\">${this.icons.minimize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-normalize\" aria-label=\"Normalize\">${this.icons.normalize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-maximize\"  aria-label=\"Maximize\">${this.icons.maximize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-close\"     aria-label=\"Close\">${this.icons.close}</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"jsPanel-hdr-toolbar\"></div>\r\n                            </div>\r\n                            <div class=\"jsPanel-progressbar\">\r\n                                <div class=\"jsPanel-progressbar-slider\"></div>\r\n                            </div>\r\n                            <div class=\"jsPanel-content\"></div>\r\n                            <div class=\"jsPanel-minimized-box\"></div>\r\n                            <div class=\"jsPanel-ftr\"></div>`;\r\n        return panel;\r\n    },\r\n    createMinimizedTemplate() {\r\n        const panel = document.createElement('div');\r\n        panel.className = 'jsPanel-replacement';\r\n        panel.innerHTML = `<div class=\"jsPanel-hdr\">\r\n                                <div class=\"jsPanel-headerbar\">\r\n                                    <div class=\"jsPanel-headerlogo\"></div>\r\n                                    <div class=\"jsPanel-titlebar\">\r\n                                        <div class=\"jsPanel-title\"></div>\r\n                                    </div>\r\n                                    <div class=\"jsPanel-controlbar\">\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-sm jsPanel-btn-normalize\" aria-label=\"Normalize\">${this.icons.normalize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-sm jsPanel-btn-maximize\"  aria-label=\"Maximize\">${this.icons.maximize}</button>\r\n                                        <button type=\"button\" class=\"jsPanel-btn jsPanel-btn-sm jsPanel-btn-close\"     aria-label=\"Close\">${this.icons.close}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>`;\r\n        return panel;\r\n    },\r\n    createSnapArea(panel, pos, snapsens) {\r\n        const el = document.createElement('div'),\r\n            parent = panel.parentElement;\r\n        el.className = `jsPanel-snap-area jsPanel-snap-area-${pos}`;\r\n        if (pos === 'lt' || pos === 'rt' || pos === 'rb' || pos === 'lb') {\r\n            el.style.width = snapsens + 'px';\r\n            el.style.height = snapsens + 'px';\r\n        } else if (pos === 'ct' || pos === 'cb') {\r\n            el.style.height = snapsens + 'px';\r\n        } else if (pos === 'lc' || pos === 'rc') {\r\n            el.style.width = snapsens + 'px';\r\n        }\r\n        if (parent !== document.body) {\r\n            el.style.position = 'absolute';\r\n        }\r\n        if (!document.querySelector(`.jsPanel-snap-area.jsPanel-snap-area-${pos}`)) {\r\n            panel.parentElement.appendChild(el);\r\n        }\r\n    },\r\n\r\n    emptyNode(node) {\r\n        while (node.firstChild) {\r\n            node.removeChild(node.firstChild);\r\n        }\r\n        return node;\r\n    },\r\n\r\n    extend(obj) {\r\n        // obj needs to be a plain object (to extend the individual panel, not the global object)\r\n        if (Object.prototype.toString.call(obj) === '[object Object]') {\r\n            for (let ext in obj) {\r\n                if (Object.prototype.hasOwnProperty.call(obj, ext)) {\r\n                    this.extensions[ext] = obj[ext];\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    fetch(fetchConfig, panel) {\r\n        let config;\r\n        const configDefaults = {\r\n            bodyMethod: 'text',\r\n            autoresize: true,\r\n            autoreposition: true,\r\n            done: function (response, panel) {\r\n                if (panel) {\r\n                    let res = jsPanel.strToHtml(response);\r\n                    panel.contentRemove();\r\n                    panel.content.append(res);\r\n                }\r\n            },\r\n        };\r\n        if (panel && typeof fetchConfig === 'string') {\r\n            config = Object.assign({}, configDefaults, {\r\n                resource: encodeURI(fetchConfig),\r\n            });\r\n        } else if (typeof fetchConfig === 'object' && fetchConfig.resource) {\r\n            config = Object.assign({}, configDefaults, fetchConfig);\r\n            config.resource = encodeURI(fetchConfig.resource);\r\n        } else {\r\n            if (this.errorReporting) {\r\n                let err = 'Fetch Request seems to miss the <mark>resource</mark> parameter!';\r\n                jsPanel.errorpanel(err);\r\n            }\r\n            return;\r\n        }\r\n\r\n        const fetchInit = config.fetchInit || {};\r\n\r\n        if (config.beforeSend) {\r\n            panel ? config.beforeSend.call(fetchConfig, fetchConfig, panel) : config.beforeSend.call(fetchConfig, fetchConfig);\r\n        }\r\n\r\n        fetch(config.resource, fetchInit)\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response[config.bodyMethod]();\r\n                }\r\n            })\r\n            .then((response) => {\r\n                panel ? config.done.call(response, response, panel) : config.done.call(response, response);\r\n                if (panel) {\r\n                    // resize and/or reposition panel if either width or height is set to 'auto'\r\n                    if (config.autoresize || config.autoreposition) {\r\n                        jsPanel.ajaxAutoresizeAutoreposition(panel, config);\r\n                    }\r\n                }\r\n            });\r\n    },\r\n\r\n    getPanels(\r\n        condition = function () {\r\n            return this.classList.contains('jsPanel-standard');\r\n        }\r\n    ) {\r\n        return Array.prototype.slice\r\n            .call(document.querySelectorAll('.jsPanel'))\r\n            .filter((value) => {\r\n                return condition.call(value, value);\r\n            })\r\n            .sort((a, b) => {\r\n                return b.style.zIndex - a.style.zIndex;\r\n            });\r\n    },\r\n\r\n    pOcontainer(container) {\r\n        if (container === 'window') {\r\n            return document.body;\r\n        } else if (typeof container === 'string') {\r\n            let list = document.querySelectorAll(container);\r\n            // a returned list is a NodeList\r\n            return list.length && list.length > 0 ? list : false;\r\n        } else if (container.nodeType === 1) {\r\n            return container;\r\n        } else if (container.length) {\r\n            return container[0];\r\n        }\r\n        return false;\r\n    },\r\n    // normalizes values for option.maximizedMargin and containment of dragit/resizeit\r\n    pOcontainment(arg) {\r\n        let value = arg;\r\n        if (typeof arg === 'function') {\r\n            value = arg();\r\n        }\r\n        if (typeof value === 'number') {\r\n            // value: 20 => value: [20, 20, 20, 20]\r\n            return [value, value, value, value];\r\n        } else if (Array.isArray(value)) {\r\n            if (value.length === 1) {\r\n                // value: [20] => value: [20, 20, 20, 20]\r\n                return [value[0], value[0], value[0], value[0]];\r\n            } else if (value.length === 2) {\r\n                // value: [20, 40] => value: [20, 40, 20, 40]\r\n                return value.concat(value);\r\n            } else if (value.length === 3) {\r\n                value[3] = value[1];\r\n            }\r\n        }\r\n        return value; // assumed to be array with 4 values\r\n    },\r\n    pOsize(panel, size) {\r\n        let values = size || this.defaults.contentSize;\r\n        const parent = panel.parentElement;\r\n        if (typeof values === 'string') {\r\n            const nums = values.trim().split(' ');\r\n            values = {};\r\n            values.width = nums[0];\r\n            nums.length === 2 ? (values.height = nums[1]) : (values.height = nums[0]);\r\n        } else {\r\n            if (values.width && !values.height) {\r\n                // noinspection JSSuspiciousNameCombination\r\n                values.height = values.width;\r\n            } else if (values.height && !values.width) {\r\n                // noinspection JSSuspiciousNameCombination\r\n                values.width = values.height;\r\n            }\r\n        }\r\n\r\n        if (String(values.width).match(/^[0-9.]+$/gi)) {\r\n            // if number only\r\n            values.width += 'px';\r\n        } else if (typeof values.width === 'string' && values.width.endsWith('%')) {\r\n            if (parent === document.body) {\r\n                values.width = window.innerWidth * (parseFloat(values.width) / 100) + 'px';\r\n            } else {\r\n                const prtStyles = window.getComputedStyle(parent),\r\n                    border = parseFloat(prtStyles.borderLeftWidth) + parseFloat(prtStyles.borderRightWidth);\r\n                values.width = (parseFloat(prtStyles.width) - border) * (parseFloat(values.width) / 100) + 'px';\r\n            }\r\n        } else if (typeof values.width === 'function') {\r\n            values.width = values.width.call(panel, panel);\r\n            if (typeof values.width === 'number') {\r\n                values.width += 'px';\r\n            } else if (typeof values.width === 'string' && values.width.match(/^[0-9.]+$/gi)) {\r\n                values.width += 'px';\r\n            }\r\n        }\r\n\r\n        if (String(values.height).match(/^[0-9.]+$/gi)) {\r\n            // if number only\r\n            values.height += 'px';\r\n        } else if (typeof values.height === 'string' && values.height.endsWith('%')) {\r\n            if (parent === document.body) {\r\n                values.height = window.innerHeight * (parseFloat(values.height) / 100) + 'px';\r\n            } else {\r\n                const prtStyles = window.getComputedStyle(parent),\r\n                    border = parseFloat(prtStyles.borderTopWidth) + parseFloat(prtStyles.borderBottomWidth);\r\n                values.height = (parseFloat(prtStyles.height) - border) * (parseFloat(values.height) / 100) + 'px';\r\n            }\r\n        } else if (typeof values.height === 'function') {\r\n            values.height = values.height.call(panel, panel);\r\n            if (typeof values.height === 'number') {\r\n                values.height += 'px';\r\n            } else if (typeof values.height === 'string' && values.height.match(/^[0-9.]+$/gi)) {\r\n                values.height += 'px';\r\n            }\r\n        }\r\n\r\n        return values; // return value must be object {width: xxx, height: xxx}\r\n    },\r\n    pOborder(border) {\r\n        border = border.trim();\r\n        const values = new Array(3),\r\n            regexStyle = /\\s*(none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset)\\s*/gi,\r\n            regexWidth = /\\s*(thin|medium|thick)|(\\d*\\.?\\d+[a-zA-Z]{2,4})\\s*/gi,\r\n            borderStyle = border.match(regexStyle),\r\n            borderWidth = border.match(regexWidth);\r\n\r\n        if (borderStyle) {\r\n            values[1] = borderStyle[0].trim();\r\n            border = border.replace(values[1], '');\r\n        } else {\r\n            values[1] = 'solid';\r\n        }\r\n        if (borderWidth) {\r\n            values[0] = borderWidth[0].trim();\r\n            border = border.replace(values[0], '');\r\n        } else {\r\n            values[0] = 'medium';\r\n        }\r\n        values[2] = border.trim();\r\n        return values;\r\n    },\r\n    pOheaderControls(oHdrCtrls) {\r\n        if (typeof oHdrCtrls === 'string') {\r\n            let setting = {},\r\n                str = oHdrCtrls.toLowerCase(),\r\n                sizeMatch = str.match(/xl|lg|md|sm|xs/),\r\n                ctrlMatch = str.match(/closeonly|none/);\r\n            if (sizeMatch) {\r\n                setting.size = sizeMatch[0];\r\n            }\r\n            if (ctrlMatch) {\r\n                setting = Object.assign({}, setting, {\r\n                    maximize: 'remove',\r\n                    normalize: 'remove',\r\n                    minimize: 'remove',\r\n                    smallify: 'remove',\r\n                });\r\n                if (ctrlMatch[0] === 'none') {\r\n                    setting.close = 'remove';\r\n                }\r\n            }\r\n            return Object.assign({}, this.defaults.headerControls, setting);\r\n        } else {\r\n            return Object.assign({}, this.defaults.headerControls, oHdrCtrls);\r\n        }\r\n    },\r\n\r\n    processCallbacks(panel, arg, someOrEvery = 'some', param, param2) {\r\n        // if arg != array make it one\r\n        if (typeof arg === 'function') {\r\n            arg = [arg];\r\n        }\r\n        // some():  execute callbacks until one is found returning a truthy value\r\n        // every(): execute callbacks until one is found returning a falsy value\r\n        // truthy values are: '0' (string with single zero), 'false' (string with text false), [] (empty array), {} (empty object), function(){} (\"empty\" function)\r\n        // falsy values are: false, 0, '', \"\", null, undefined, NaN\r\n        if (someOrEvery) {\r\n            return arg[someOrEvery]((cb) => {\r\n                return cb.call(panel, panel, param, param2);\r\n            });\r\n        } else {\r\n            arg.forEach((cb) => {\r\n                cb.call(panel, panel, param, param2);\r\n            });\r\n        }\r\n    },\r\n\r\n    removeSnapAreas() {\r\n        document.querySelectorAll('.jsPanel-snap-area').forEach((el) => {\r\n            el.parentElement.removeChild(el);\r\n        });\r\n    },\r\n\r\n    resetZi() {\r\n        this.zi = ((startValue = jsPanel.ziBase) => {\r\n            let val = startValue;\r\n            return {\r\n                next: () => {\r\n                    return val++;\r\n                },\r\n            };\r\n        })();\r\n        Array.prototype.slice\r\n            .call(document.querySelectorAll('.jsPanel-standard'))\r\n            .sort((a, b) => {\r\n                return a.style.zIndex - b.style.zIndex;\r\n            })\r\n            .forEach((panel) => {\r\n                panel.style.zIndex = jsPanel.zi.next();\r\n            });\r\n    },\r\n\r\n    getScrollbarWidth(elmt = document.body) {\r\n        if (elmt === document.body) {\r\n            return {\r\n                y: window.innerWidth - document.documentElement.clientWidth,\r\n                x: window.innerHeight - document.documentElement.clientHeight,\r\n            };\r\n        } else {\r\n            let styles = getComputedStyle(elmt);\r\n            return {\r\n                y: elmt.offsetWidth - elmt.clientWidth - parseFloat(styles.borderRightWidth) - parseFloat(styles.borderLeftWidth),\r\n                x: elmt.offsetHeight - elmt.clientHeight - parseFloat(styles.borderBottomWidth) - parseFloat(styles.borderTopWidth),\r\n            };\r\n        }\r\n    },\r\n    remClass(elmt, classnames) {\r\n        classnames\r\n            .trim()\r\n            .split(/\\s+/)\r\n            .forEach((item) => elmt.classList.remove(item));\r\n        return elmt;\r\n    },\r\n    setClass(elmt, classnames) {\r\n        classnames\r\n            .trim()\r\n            .split(/\\s+/)\r\n            .forEach((item) => elmt.classList.add(item));\r\n        return elmt;\r\n    },\r\n    setStyles(elmt, stylesobject) {\r\n        // code taken from https://blissfuljs.com/docs.html#fn-style\r\n        for (let prop in stylesobject) {\r\n            if (prop in elmt.style) {\r\n                // noinspection JSUnfilteredForInLoop,JSUnfilteredForInLoop\r\n                elmt.style[prop] = stylesobject[prop];\r\n            } else {\r\n                // This way we can set CSS Variables too and use normal prop names\r\n                // noinspection JSUnfilteredForInLoop\r\n                elmt.style.setProperty(prop, stylesobject[prop]);\r\n            }\r\n        }\r\n        return elmt;\r\n    },\r\n    setStyle(elmt, stylesobject) {\r\n        return this.setStyles.call(elmt, elmt, stylesobject);\r\n    }, // alias for setStyles()\r\n    strToHtml(str) {\r\n        // TODO: add param to strip script tags from returned DocumentFragment\r\n        /* str has to be an HTMLString\r\n         * returns a DocumentFragment - https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\r\n         * after inserting executes inline script and script tags */\r\n        return document.createRange().createContextualFragment(str);\r\n    },\r\n    toggleClass(elmt, classnames) {\r\n        // IE11 doesn't support https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\r\n        classnames\r\n            .trim()\r\n            .split(/\\s+/)\r\n            .forEach((classname) => {\r\n                elmt.classList.contains(classname) ? elmt.classList.remove(classname) : elmt.classList.add(classname);\r\n            });\r\n        return elmt;\r\n    },\r\n\r\n    errorpanel(e) {\r\n        this.create({\r\n            paneltype: 'error',\r\n            dragit: false,\r\n            resizeit: false,\r\n            theme: {\r\n                bgPanel: 'white',\r\n                bgContent: 'white',\r\n                colorHeader: 'rebeccapurple',\r\n                colorContent: '#333',\r\n                border: '2px solid rebeccapurple',\r\n            },\r\n            borderRadius: '.33rem',\r\n            headerControls: 'closeonly xs',\r\n            headerTitle: '&#9888; jsPanel Error',\r\n            contentSize: { width: '50%', height: 'auto' },\r\n            position: 'center-top 0 5 down',\r\n            animateIn: 'jsPanelFadeIn',\r\n            content: `<div class=\"jsPanel-error-content-separator\"></div><p>${e}</p>`,\r\n        });\r\n    },\r\n\r\n    // METHOD CREATING THE PANEL ---------------------------------------------\r\n    create(options = {}, cb) {\r\n        // initialize z-index generator\r\n        if (!jsPanel.zi) {\r\n            jsPanel.zi = ((startValue = jsPanel.ziBase) => {\r\n                let val = startValue;\r\n                return {\r\n                    next: () => {\r\n                        return val++;\r\n                    },\r\n                };\r\n            })();\r\n        }\r\n\r\n        if (options.config) {\r\n            options = Object.assign({}, this.defaults, options.config, options);\r\n            delete options.config;\r\n        } else {\r\n            options = Object.assign({}, this.defaults, options);\r\n        }\r\n        if (!options.id) {\r\n            options.id = `jsPanel-${(jsPanel.idCounter += 1)}`;\r\n        } else if (typeof options.id === 'function') {\r\n            options.id = options.id();\r\n        }\r\n        const p = document.getElementById(options.id);\r\n        if (p !== null) {\r\n            // if a panel with passed id already exists, front it and return false\r\n            if (p.classList.contains('jsPanel')) {\r\n                p.front();\r\n            }\r\n            if (this.errorReporting) {\r\n                let err = `&#9664; COULD NOT CREATE NEW JSPANEL &#9658;<br>An element with the ID <mark>${options.id}</mark> already exists in the document.`;\r\n                jsPanel.errorpanel(err);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // check whether container is valid -> if not return and throw error\r\n        let panelContainer = this.pOcontainer(options.container);\r\n        // panelContainer might be a NodeList, so use only first node in list\r\n        if (typeof panelContainer === 'object' && panelContainer.length && panelContainer.length > 0) {\r\n            panelContainer = panelContainer[0];\r\n        }\r\n        if (!panelContainer) {\r\n            if (this.errorReporting) {\r\n                let err = '&#9664; COULD NOT CREATE NEW JSPANEL &#9658;<br>The container to append the panel to does not exist';\r\n                jsPanel.errorpanel(err);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // normalize on... callbacks\r\n        // callbacks must be array of function(s) in order to be able to dynamically add/remove callbacks (for example in extensions)\r\n        [\r\n            'onbeforeclose',\r\n            'onbeforemaximize',\r\n            'onbeforeminimize',\r\n            'onbeforenormalize',\r\n            'onbeforesmallify',\r\n            'onbeforeunsmallify',\r\n            'onclosed',\r\n            'onfronted',\r\n            'onmaximized',\r\n            'onminimized',\r\n            'onnormalized',\r\n            'onsmallified',\r\n            'onstatuschange',\r\n            'onunsmallified',\r\n        ].forEach((item) => {\r\n            if (options[item]) {\r\n                if (typeof options[item] === 'function') {\r\n                    options[item] = [options[item]];\r\n                }\r\n            } else {\r\n                options[item] = [];\r\n            }\r\n        });\r\n\r\n        const self = options.template ? options.template : this.createPanelTemplate();\r\n\r\n        // Properties\r\n        self.options = options;\r\n        self.closetimer = undefined;\r\n        self.status = 'initialized';\r\n        self.currentData = {};\r\n        self.header = self.querySelector('.jsPanel-hdr'); // complete header section\r\n        self.headerbar = self.header.querySelector('.jsPanel-headerbar'); // log, title and controls\r\n        self.titlebar = self.header.querySelector('.jsPanel-titlebar'); // div surrounding title div\r\n        self.headerlogo = self.headerbar.querySelector('.jsPanel-headerlogo'); // logo only\r\n        self.headertitle = self.headerbar.querySelector('.jsPanel-title'); // title div\r\n        self.controlbar = self.headerbar.querySelector('.jsPanel-controlbar'); // div surrounding all controls\r\n        self.headertoolbar = self.header.querySelector('.jsPanel-hdr-toolbar');\r\n        self.content = self.querySelector('.jsPanel-content');\r\n        self.footer = self.querySelector('.jsPanel-ftr');\r\n        self.snappableTo = false;\r\n        self.snapped = false;\r\n        self.droppableTo = false;\r\n        self.progressbar = self.autocloseProgressbar = self.querySelector('.jsPanel-progressbar'); // self.autocloseProgressbar kept for compatibility\r\n\r\n        // Events\r\n        const jspanelloaded = new CustomEvent('jspanelloaded', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelstatuschange = new CustomEvent('jspanelstatuschange', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforenormalize = new CustomEvent('jspanelbeforenormalize', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelnormalized = new CustomEvent('jspanelnormalized', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforemaximize = new CustomEvent('jspanelbeforemaximize', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelmaximized = new CustomEvent('jspanelmaximized', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforeminimize = new CustomEvent('jspanelbeforeminimize', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelminimized = new CustomEvent('jspanelminimized', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforesmallify = new CustomEvent('jspanelbeforesmallify', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelsmallified = new CustomEvent('jspanelsmallified', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelsmallifiedmax = new CustomEvent('jspanelsmallifiedmax', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforeunsmallify = new CustomEvent('jspanelbeforeunsmallify', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelfronted = new CustomEvent('jspanelfronted', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelbeforeclose = new CustomEvent('jspanelbeforeclose', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelclosed = new CustomEvent('jspanelclosed', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            }),\r\n            jspanelcloseduser = new CustomEvent('jspanelcloseduser', {\r\n                detail: options.id,\r\n                cancelable: true,\r\n            });\r\n        // make panel available as event object property 'panel'\r\n        [\r\n            jspanelloaded,\r\n            jspanelstatuschange,\r\n            jspanelbeforenormalize,\r\n            jspanelnormalized,\r\n            jspanelbeforemaximize,\r\n            jspanelmaximized,\r\n            jspanelbeforeminimize,\r\n            jspanelminimized,\r\n            jspanelbeforesmallify,\r\n            jspanelsmallified,\r\n            jspanelsmallifiedmax,\r\n            jspanelbeforeunsmallify,\r\n            jspanelfronted,\r\n            jspanelbeforeclose,\r\n        ].forEach((evt) => {\r\n            evt.panel = self;\r\n        });\r\n\r\n        // controls buttons\r\n        const closeBtn = self.querySelector('.jsPanel-btn-close'),\r\n            maxBtn = self.querySelector('.jsPanel-btn-maximize'),\r\n            normBtn = self.querySelector('.jsPanel-btn-normalize'),\r\n            smallBtn = self.querySelector('.jsPanel-btn-smallify'),\r\n            minBtn = self.querySelector('.jsPanel-btn-minimize');\r\n\r\n        if (closeBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                closeBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    // disable close for all mouse buttons but left\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.close(null, true); // true indicates panel closed by using the close control\r\n                });\r\n            });\r\n        }\r\n        if (maxBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                maxBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.maximize();\r\n                });\r\n            });\r\n        }\r\n        if (normBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                normBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.normalize();\r\n                });\r\n            });\r\n        }\r\n        if (smallBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                smallBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    if (self.status === 'normalized' || self.status === 'maximized') {\r\n                        self.smallify();\r\n                    } else if (self.status === 'smallified' || self.status === 'smallifiedmax') {\r\n                        self.unsmallify();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (minBtn) {\r\n            jsPanel.pointerup.forEach((item) => {\r\n                minBtn.addEventListener(item, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.minimize();\r\n                });\r\n            });\r\n        }\r\n\r\n        // import extensions (extensions of the individual panel, not the global object jsPanel)\r\n        let extensions = jsPanel.extensions;\r\n        for (let ext in extensions) {\r\n            if (Object.prototype.hasOwnProperty.call(extensions, ext)) {\r\n                self[ext] = extensions[ext];\r\n            }\r\n        }\r\n\r\n        // Methods\r\n        self.clearTheme = (cb) => {\r\n            jsPanel.themes.forEach((value) => {\r\n                ['panel', `jsPanel-theme-${value}`, `panel-${value}`, `${value}-color`].forEach((item) => {\r\n                    self.classList.remove(item);\r\n                });\r\n                self.header.classList.remove(`jsPanel-theme-${value}`);\r\n            });\r\n            self.content.classList.remove('jsPanel-content-filled', 'jsPanel-content-filledlight');\r\n            self.header.classList.remove('jsPanel-hdr-light');\r\n            self.header.classList.remove('jsPanel-hdr-dark');\r\n            self.style.backgroundColor = '';\r\n            jsPanel.setStyle(self.headertoolbar, {\r\n                boxShadow: '',\r\n                width: '',\r\n                marginLeft: '',\r\n                borderTopColor: 'transparent',\r\n            });\r\n            jsPanel.setStyle(self.content, {\r\n                background: '',\r\n                borderTopColor: 'transparent',\r\n            });\r\n            self.header.style.background = '';\r\n            Array.prototype.slice\r\n                .call(self.controlbar.querySelectorAll('.jsPanel-icon'))\r\n                .concat([self.headerlogo, self.headertitle, self.headertoolbar, self.content])\r\n                .forEach((item) => {\r\n                    item.style.color = '';\r\n                });\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.getThemeDetails = (th) => {\r\n            const passedTheme = th.toLowerCase(),\r\n                theme = { color: false, colors: false, filling: false },\r\n                step1 = passedTheme.split('fill');\r\n            theme.color = step1[0].trim().replace(/\\s*/g, '');\r\n            if (step1.length === 2) {\r\n                if (step1[1].startsWith('edlight')) {\r\n                    theme.filling = 'filledlight';\r\n                } else if (step1[1].startsWith('eddark')) {\r\n                    theme.filling = 'filleddark';\r\n                } else if (step1[1].startsWith('ed')) {\r\n                    theme.filling = 'filled';\r\n                } else if (step1[1].startsWith('color')) {\r\n                    let step2 = step1[1].split('color'),\r\n                        fillcolor = step2[step2.length - 1].trim().replace(/\\s*/g, '');\r\n                    if (jsPanel.colorNames[fillcolor]) {\r\n                        fillcolor = jsPanel.colorNames[fillcolor];\r\n                    }\r\n                    if (fillcolor.match(/^([0-9a-f]{3}|[0-9a-f]{6})$/gi)) {\r\n                        fillcolor = '#' + fillcolor;\r\n                    }\r\n                    theme.filling = fillcolor;\r\n                }\r\n            }\r\n\r\n            const builtIn = jsPanel.themes.some((item) => {\r\n                return item === theme.color.split(/\\s/i)[0];\r\n            });\r\n            if (builtIn) {\r\n                let baseTheme = theme.color.split(/\\s/i)[0],\r\n                    btn = document.createElement('button');\r\n                btn.className = baseTheme + '-bg';\r\n                document.body.appendChild(btn);\r\n                theme.color = getComputedStyle(btn).backgroundColor.replace(/\\s+/gi, '');\r\n                document.body.removeChild(btn);\r\n                // noinspection JSUnusedAssignment\r\n                btn = undefined;\r\n            } else if (theme.color.startsWith('bootstrap-')) {\r\n                // works with bootstrap 3 and 4\r\n                let index = theme.color.indexOf('-'),\r\n                    btn = document.createElement('button');\r\n                btn.className = 'btn btn' + theme.color.slice(index);\r\n                document.body.appendChild(btn);\r\n                theme.color = getComputedStyle(btn).backgroundColor.replace(/\\s+/gi, '');\r\n                document.body.removeChild(btn);\r\n                // noinspection JSUnusedAssignment\r\n                btn = undefined;\r\n            } else if (theme.color.startsWith('mdb-')) {\r\n                // material design for bootstrap theme\r\n                let index = theme.color.indexOf('-') + 1,\r\n                    span = document.createElement('span'),\r\n                    testClass;\r\n                if (theme.color.endsWith('-dark')) {\r\n                    testClass = theme.color.slice(index);\r\n                    testClass = testClass.replace('-dark', '-color-dark');\r\n                } else {\r\n                    testClass = theme.color.slice(index) + '-color';\r\n                }\r\n                span.className = testClass;\r\n                document.body.appendChild(span);\r\n                theme.color = getComputedStyle(span).backgroundColor.replace(/\\s+/gi, '');\r\n                document.body.removeChild(span);\r\n                // noinspection JSUnusedAssignment\r\n                span = undefined;\r\n            }\r\n            theme.colors = jsPanel.calcColors(theme.color);\r\n            return theme;\r\n        };\r\n        self.applyColorTheme = (themeDetails) => {\r\n            self.style.backgroundColor = themeDetails.colors[0];\r\n            self.header.style.backgroundColor = themeDetails.colors[0];\r\n            self.header.style.color = themeDetails.colors[3];\r\n            ['.jsPanel-headerlogo', '.jsPanel-title', '.jsPanel-hdr-toolbar'].forEach((item) => {\r\n                self.querySelector(item).style.color = themeDetails.colors[3];\r\n            });\r\n            self.querySelectorAll('.jsPanel-controlbar .jsPanel-btn').forEach((item) => {\r\n                item.style.color = themeDetails.colors[3];\r\n            });\r\n            // apply border to content only themes 'filled'\r\n            if (typeof self.options.theme === 'string' && themeDetails.filling === 'filled') {\r\n                self.content.style.borderTop =\r\n                    themeDetails.colors[3] === '#000000' ? '1px solid rgba(0,0,0,0.15)' : '1px solid rgba(255,255,255,0.15)';\r\n            }\r\n\r\n            if (themeDetails.colors[3] === '#000000') {\r\n                self.header.classList.add('jsPanel-hdr-light');\r\n            } else {\r\n                self.header.classList.add('jsPanel-hdr-dark');\r\n            }\r\n\r\n            if (themeDetails.filling) {\r\n                switch (themeDetails.filling) {\r\n                    case 'filled':\r\n                        jsPanel.setStyle(self.content, {\r\n                            backgroundColor: themeDetails.colors[2],\r\n                            color: themeDetails.colors[3],\r\n                        });\r\n                        break;\r\n                    case 'filledlight':\r\n                        self.content.style.backgroundColor = themeDetails.colors[1];\r\n                        break;\r\n                    case 'filleddark':\r\n                        jsPanel.setStyle(self.content, {\r\n                            backgroundColor: themeDetails.colors[6],\r\n                            color: themeDetails.colors[7],\r\n                        });\r\n                        break;\r\n                    default:\r\n                        self.content.style.backgroundColor = themeDetails.filling;\r\n                        self.content.style.color =\r\n                            jsPanel.perceivedBrightness(themeDetails.filling) <= jsPanel.colorBrightnessThreshold ? '#fff' : '#000';\r\n                }\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.applyCustomTheme = (theme) => {\r\n            let defaults = {\r\n                    bgPanel: '#fff',\r\n                    bgContent: '#fff',\r\n                    colorHeader: '#000',\r\n                    colorContent: '#000',\r\n                },\r\n                passedTheme;\r\n            if (typeof theme === 'object') {\r\n                passedTheme = Object.assign(defaults, theme);\r\n            } else {\r\n                passedTheme = defaults;\r\n            }\r\n            let bgPanel = passedTheme.bgPanel,\r\n                bgContent = passedTheme.bgContent,\r\n                colorHeader = passedTheme.colorHeader,\r\n                colorContent = passedTheme.colorContent;\r\n\r\n            // set background panel/header\r\n            jsPanel.colorNames[bgPanel] ? (self.style.background = '#' + jsPanel.colorNames[bgPanel]) : (self.style.background = bgPanel);\r\n\r\n            // set font color header\r\n            if (jsPanel.colorNames[colorHeader]) {\r\n                colorHeader = '#' + jsPanel.colorNames[colorHeader];\r\n            }\r\n            ['.jsPanel-headerlogo', '.jsPanel-title', '.jsPanel-hdr-toolbar'].forEach((item) => {\r\n                self.querySelector(item).style.color = colorHeader;\r\n            });\r\n            self.querySelectorAll('.jsPanel-controlbar .jsPanel-btn').forEach((item) => {\r\n                item.style.color = colorHeader;\r\n            });\r\n\r\n            // set content background\r\n            jsPanel.colorNames[bgContent]\r\n                ? (self.content.style.background = '#' + jsPanel.colorNames[bgContent])\r\n                : (self.content.style.background = bgContent);\r\n\r\n            // set content font color\r\n            jsPanel.colorNames[colorContent]\r\n                ? (self.content.style.color = '#' + jsPanel.colorNames[colorContent])\r\n                : (self.content.style.color = colorContent);\r\n\r\n            // set border-top for header toolbar and add header class\r\n            const pbPanel = jsPanel.perceivedBrightness(colorHeader);\r\n            if (pbPanel > jsPanel.colorBrightnessThreshold) {\r\n                self.header.classList.add('jsPanel-hdr-dark');\r\n            } else {\r\n                self.header.classList.add('jsPanel-hdr-light');\r\n            }\r\n\r\n            // set border-top for content\r\n            const pbContent = jsPanel.perceivedBrightness(colorContent);\r\n            pbContent > jsPanel.colorBrightnessThreshold\r\n                ? (self.content.style.borderTop = '1px solid rgba(255,255,255,0.15)')\r\n                : (self.content.style.borderTop = '1px solid rgba(0,0,0,0.15)');\r\n\r\n            // set panel border (option.border does not work for themes using an object)\r\n            if (passedTheme.border) {\r\n                let border = passedTheme.border,\r\n                    index = border.lastIndexOf(' '),\r\n                    col = border.slice(++index);\r\n                if (jsPanel.colorNames[col]) {\r\n                    border = border.replace(col, '#' + jsPanel.colorNames[col]);\r\n                }\r\n                self.style.border = border;\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.setBorder = (val) => {\r\n            let border = jsPanel.pOborder(val);\r\n            if (!border[2].length) {\r\n                border[2] = self.style.backgroundColor;\r\n            } else if (jsPanel.colorNames[border[2]]) {\r\n                border[2] = '#' + jsPanel.colorNames[border[2]];\r\n            }\r\n            border = border.join(' ');\r\n            self.style.border = border;\r\n            self.options.border = border;\r\n            return self;\r\n        };\r\n        self.setBorderRadius = (rad) => {\r\n            if (typeof rad === 'number') {\r\n                rad += 'px';\r\n            }\r\n            self.style.borderRadius = rad;\r\n            const br = getComputedStyle(self);\r\n            // set border-radius of either header or content section depending on presence of header\r\n            if (self.options.header) {\r\n                self.header.style.borderTopLeftRadius = br.borderTopLeftRadius;\r\n                self.header.style.borderTopRightRadius = br.borderTopRightRadius;\r\n            } else {\r\n                self.content.style.borderTopLeftRadius = br.borderTopLeftRadius;\r\n                self.content.style.borderTopRightRadius = br.borderTopRightRadius;\r\n            }\r\n            // set border-radius of either footer or content section depending on presence of footer\r\n            if (self.options.footerToolbar) {\r\n                self.footer.style.borderBottomRightRadius = br.borderBottomRightRadius;\r\n                self.footer.style.borderBottomLeftRadius = br.borderBottomLeftRadius;\r\n            } else {\r\n                self.content.style.borderBottomRightRadius = br.borderBottomRightRadius;\r\n                self.content.style.borderBottomLeftRadius = br.borderBottomLeftRadius;\r\n            }\r\n            return self;\r\n        };\r\n        self.setTheme = (theme = options.theme, cb) => {\r\n            // if panel is minimized normalize it for theme change\r\n            let minimized;\r\n            if (self.status === 'minimized') {\r\n                minimized = true;\r\n                self.normalize();\r\n            }\r\n            // first remove all theme related styles\r\n            self.clearTheme();\r\n            if (typeof theme === 'object') {\r\n                options.border = undefined;\r\n                self.applyCustomTheme(theme);\r\n            } else {\r\n                if (theme === 'none') {\r\n                    theme = 'white';\r\n                }\r\n                let themeDetails = self.getThemeDetails(theme);\r\n                self.applyColorTheme(themeDetails);\r\n            }\r\n            // minimize again if panel was minimized prior theme change\r\n            if (minimized) {\r\n                self.minimize();\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.remove = (id, closedBy, cb) => {\r\n            // self.remove() is just a helper func used in self.close()\r\n            self.parentElement.removeChild(self);\r\n            if (!document.getElementById(id)) {\r\n                self.removeMinimizedReplacement();\r\n                if (closedBy) {\r\n                    document.dispatchEvent(jspanelcloseduser);\r\n                }\r\n                document.dispatchEvent(jspanelclosed);\r\n                if (self.options.onclosed) {\r\n                    jsPanel.processCallbacks(self, self.options.onclosed, 'every', closedBy);\r\n                }\r\n                jsPanel.autopositionRemaining(self);\r\n                if (cb) {\r\n                    cb.call(id, id);\r\n                }\r\n            } else {\r\n                if (cb) {\r\n                    cb.call(self, id, self);\r\n                }\r\n            }\r\n            window.removeEventListener('resize', self.windowResizeHandler);\r\n            document.removeEventListener('jspanelresize', self.parentResizeHandler);\r\n        };\r\n        self.close = (cb, closedByUser) => {\r\n            if (self.closetimer) {\r\n                window.clearInterval(self.closetimer);\r\n            }\r\n            document.dispatchEvent(jspanelbeforeclose);\r\n            if (\r\n                self.options.onbeforeclose &&\r\n                self.options.onbeforeclose.length > 0 &&\r\n                !jsPanel.processCallbacks(self, self.options.onbeforeclose, 'some', self.status, closedByUser)\r\n            ) {\r\n                return self;\r\n            }\r\n            if (self.options.animateOut) {\r\n                if (self.options.animateIn) {\r\n                    jsPanel.remClass(self, self.options.animateIn);\r\n                }\r\n                jsPanel.setClass(self, self.options.animateOut);\r\n                self.addEventListener('animationend', (e) => {\r\n                    e.stopPropagation();\r\n                    self.remove(self.id, closedByUser, cb);\r\n                });\r\n            } else {\r\n                self.remove(self.id, closedByUser, cb);\r\n            }\r\n        };\r\n        self.maximize = (cb, donotfront) => {\r\n            // Note: do not disable maximize method for already maximized panels -> onContainerResize wouldn't work\r\n            self.statusBefore = self.status;\r\n            if (\r\n                options.onbeforemaximize &&\r\n                options.onbeforemaximize.length > 0 &&\r\n                !jsPanel.processCallbacks(self, options.onbeforemaximize, 'some', self.statusBefore)\r\n            ) {\r\n                return self;\r\n            }\r\n\r\n            document.dispatchEvent(jspanelbeforemaximize);\r\n\r\n            const parent = self.parentElement,\r\n                margins = jsPanel.pOcontainment(options.maximizedMargin); // normalize maximizedMargin\r\n\r\n            if (parent === document.body) {\r\n                // maximize within window\r\n                /*\r\n                   When clientHeight is used on the root element (the <html> element), (or on <body> if the document is in quirks mode),\r\n                   the viewport's height (excluding any scrollbar) is returned. This is a special case of clientHeight.\r\n                   See https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\r\n                   document.documentElement in the code below returns the <html> element\r\n                */\r\n                self.style.width = document.documentElement.clientWidth - margins[1] - margins[3] + 'px';\r\n                self.style.height = document.documentElement.clientHeight - margins[0] - margins[2] + 'px';\r\n                self.style.left = margins[3] + 'px';\r\n                self.style.top = margins[0] + 'px';\r\n            } else {\r\n                // maximize within parentElement\r\n                self.style.width = parent.clientWidth - margins[1] - margins[3] + 'px';\r\n                self.style.height = parent.clientHeight - margins[0] - margins[2] + 'px';\r\n                self.style.left = margins[3] + 'px';\r\n                self.style.top = margins[0] + 'px';\r\n            }\r\n\r\n            smallBtn.style.transform = 'unset';\r\n            self.removeMinimizedReplacement();\r\n            self.status = 'maximized';\r\n            self.setControls(['.jsPanel-btn-maximize']);\r\n            if (!donotfront) {\r\n                self.front();\r\n            }\r\n            document.dispatchEvent(jspanelmaximized);\r\n            document.dispatchEvent(jspanelstatuschange);\r\n\r\n            if (options.onstatuschange) {\r\n                jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self, self.statusBefore);\r\n            }\r\n\r\n            if (options.onmaximized) {\r\n                jsPanel.processCallbacks(self, options.onmaximized, 'every', self.statusBefore);\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.minimize = (cb) => {\r\n            if (self.status === 'minimized') {\r\n                return self;\r\n            }\r\n            self.statusBefore = self.status;\r\n\r\n            if (\r\n                options.onbeforeminimize &&\r\n                options.onbeforeminimize.length > 0 &&\r\n                !jsPanel.processCallbacks(self, options.onbeforeminimize, 'some', self.statusBefore)\r\n            ) {\r\n                return self;\r\n            }\r\n\r\n            document.dispatchEvent(jspanelbeforeminimize);\r\n\r\n            // create container for minimized replacements if not already there\r\n            if (!document.getElementById('jsPanel-replacement-container')) {\r\n                const replacementContainer = document.createElement('div');\r\n                replacementContainer.id = 'jsPanel-replacement-container';\r\n                document.body.append(replacementContainer);\r\n            }\r\n\r\n            self.style.left = '-9999px';\r\n            self.status = 'minimized';\r\n            document.dispatchEvent(jspanelminimized);\r\n            document.dispatchEvent(jspanelstatuschange);\r\n\r\n            if (options.onstatuschange) {\r\n                jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n            }\r\n\r\n            if (options.minimizeTo) {\r\n                let replacement = self.createMinimizedReplacement(),\r\n                    container,\r\n                    parent,\r\n                    list;\r\n                switch (options.minimizeTo) {\r\n                    case 'default':\r\n                        document.getElementById('jsPanel-replacement-container').append(replacement);\r\n                        break;\r\n                    case 'parentpanel':\r\n                        parent = self.closest('.jsPanel-content').parentElement;\r\n                        list = parent.querySelectorAll('.jsPanel-minimized-box');\r\n                        container = list[list.length - 1];\r\n                        container.append(replacement);\r\n                        break;\r\n                    case 'parent':\r\n                        parent = self.parentElement;\r\n                        container = parent.querySelector('.jsPanel-minimized-container');\r\n                        if (!container) {\r\n                            container = document.createElement('div');\r\n                            container.className = 'jsPanel-minimized-container';\r\n                            parent.append(container);\r\n                        }\r\n                        container.append(replacement);\r\n                        break;\r\n                    default:\r\n                        // all other strings are assumed to be selector strings returning a single element to append the min replacement to\r\n                        document.querySelector(options.minimizeTo).append(replacement);\r\n                }\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self, self.statusBefore);\r\n            }\r\n\r\n            if (options.onminimized) {\r\n                jsPanel.processCallbacks(self, options.onminimized, 'every', self.statusBefore);\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.normalize = (cb) => {\r\n            if (self.status === 'normalized') {\r\n                return self;\r\n            }\r\n            self.statusBefore = self.status;\r\n            // ensure smallify/unsmallify transition is turned off when resizing begins\r\n            //self.style.transition = 'unset';\r\n\r\n            if (\r\n                options.onbeforenormalize &&\r\n                options.onbeforenormalize.length > 0 &&\r\n                !jsPanel.processCallbacks(self, options.onbeforenormalize, 'some', self.statusBefore)\r\n            ) {\r\n                return self;\r\n            }\r\n\r\n            document.dispatchEvent(jspanelbeforenormalize);\r\n            self.style.width = self.currentData.width;\r\n            self.style.height = self.currentData.height;\r\n            if (self.snapped) {\r\n                // if panel is snapped before minimizing restore snapped position\r\n                self.snap(self.snapped, true);\r\n            } else {\r\n                self.style.left = self.currentData.left;\r\n                self.style.top = self.currentData.top;\r\n            }\r\n            smallBtn.style.transform = 'unset';\r\n            self.removeMinimizedReplacement();\r\n            self.status = 'normalized';\r\n            self.setControls(['.jsPanel-btn-normalize']);\r\n            self.front();\r\n            document.dispatchEvent(jspanelnormalized);\r\n            document.dispatchEvent(jspanelstatuschange);\r\n\r\n            if (options.onstatuschange) {\r\n                jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self, self.statusBefore);\r\n            }\r\n\r\n            if (options.onnormalized) {\r\n                jsPanel.processCallbacks(self, options.onnormalized, 'every', self.statusBefore);\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.smallify = (cb) => {\r\n            if (self.status === 'smallified' || self.status === 'smallifiedmax') {\r\n                return self;\r\n            }\r\n            self.statusBefore = self.status;\r\n\r\n            if (\r\n                options.onbeforesmallify &&\r\n                options.onbeforesmallify.length > 0 &&\r\n                !jsPanel.processCallbacks(self, options.onbeforesmallify, 'some', self.statusBefore)\r\n            ) {\r\n                return self;\r\n            }\r\n\r\n            document.dispatchEvent(jspanelbeforesmallify);\r\n\r\n            self.style.overflow = 'hidden';\r\n            const selfStyles = window.getComputedStyle(self),\r\n                selfHeaderHeight = parseFloat(window.getComputedStyle(self.headerbar).height);\r\n            self.style.height = parseFloat(selfStyles.borderTopWidth) + parseFloat(selfStyles.borderBottomWidth) + selfHeaderHeight + 'px';\r\n\r\n            smallBtn.style.transform = 'rotate(180deg)';\r\n\r\n            if (self.status === 'normalized') {\r\n                self.setControls(['.jsPanel-btn-normalize']);\r\n                self.status = 'smallified';\r\n                document.dispatchEvent(jspanelsmallified);\r\n                document.dispatchEvent(jspanelstatuschange);\r\n                if (options.onstatuschange) {\r\n                    jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n                }\r\n            } else if (self.status === 'maximized') {\r\n                self.setControls(['.jsPanel-btn-maximize']);\r\n                self.status = 'smallifiedmax';\r\n                document.dispatchEvent(jspanelsmallifiedmax);\r\n                document.dispatchEvent(jspanelstatuschange);\r\n                if (options.onstatuschange) {\r\n                    jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n                }\r\n            }\r\n\r\n            const minBoxes = self.querySelectorAll('.jsPanel-minimized-box');\r\n            minBoxes[minBoxes.length - 1].style.display = 'none';\r\n\r\n            if (cb) {\r\n                cb.call(self, self, self.statusBefore);\r\n            }\r\n\r\n            if (options.onsmallified) {\r\n                jsPanel.processCallbacks(self, options.onsmallified, 'every', self.statusBefore);\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.unsmallify = (cb) => {\r\n            self.statusBefore = self.status;\r\n\r\n            if (self.status === 'smallified' || self.status === 'smallifiedmax') {\r\n                if (\r\n                    options.onbeforeunsmallify &&\r\n                    options.onbeforeunsmallify.length > 0 &&\r\n                    !jsPanel.processCallbacks(self, options.onbeforeunsmallify, 'some', self.statusBefore)\r\n                ) {\r\n                    return self;\r\n                }\r\n\r\n                document.dispatchEvent(jspanelbeforeunsmallify);\r\n                self.style.overflow = 'visible';\r\n                self.front();\r\n\r\n                if (self.status === 'smallified') {\r\n                    self.style.height = self.currentData.height;\r\n                    self.setControls(['.jsPanel-btn-normalize']);\r\n                    self.status = 'normalized';\r\n                    document.dispatchEvent(jspanelnormalized);\r\n                    document.dispatchEvent(jspanelstatuschange);\r\n                    if (options.onstatuschange) {\r\n                        jsPanel.processCallbacks(self, options.onstatuschange, 'every', self.statusBefore);\r\n                    }\r\n                } else if (self.status === 'smallifiedmax') {\r\n                    self.maximize();\r\n                } else if (self.status === 'minimized') {\r\n                    self.normalize();\r\n                }\r\n                smallBtn.style.transform = 'rotate(0deg)';\r\n\r\n                const minBoxes = self.querySelectorAll('.jsPanel-minimized-box');\r\n                minBoxes[minBoxes.length - 1].style.display = 'flex';\r\n\r\n                if (cb) {\r\n                    cb.call(self, self, self.statusBefore);\r\n                }\r\n\r\n                if (options.onunsmallified) {\r\n                    jsPanel.processCallbacks(self, options.onunsmallified, 'every', self.statusBefore);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        };\r\n        self.front = (callback, execOnFrontedCallbacks = true) => {\r\n            if (self.status === 'minimized') {\r\n                self.statusBefore === 'maximized' ? self.maximize() : self.normalize();\r\n            } else {\r\n                const newArr = Array.prototype.slice.call(document.querySelectorAll('.jsPanel-standard')).map((panel) => {\r\n                    return panel.style.zIndex;\r\n                });\r\n                if (Math.max(...newArr) > self.style.zIndex) {\r\n                    self.style.zIndex = jsPanel.zi.next();\r\n                }\r\n                jsPanel.resetZi();\r\n            }\r\n            document.dispatchEvent(jspanelfronted);\r\n            if (callback) {\r\n                callback.call(self, self);\r\n            }\r\n            if (options.onfronted && execOnFrontedCallbacks) {\r\n                jsPanel.processCallbacks(self, options.onfronted, 'every', self.status);\r\n            }\r\n            return self;\r\n        };\r\n        self.snap = (pos, alreadySnapped = false) => {\r\n            // store panel size before it snaps, only if not snapped already\r\n            if (!alreadySnapped) {\r\n                self.currentData.beforeSnap = {\r\n                    width: self.currentData.width,\r\n                    height: self.currentData.height,\r\n                };\r\n            }\r\n            // snap panel\r\n            if (pos && typeof pos === 'function' && !alreadySnapped) {\r\n                pos.call(self, self, self.snappableTo);\r\n            } else if (pos !== false) {\r\n                let offsets = [0, 0];\r\n                if (self.options.dragit.snap.containment) {\r\n                    if (self.options.dragit.containment) {\r\n                        const containment = jsPanel.pOcontainment(self.options.dragit.containment),\r\n                            position = self.snappableTo;\r\n                        if (position.startsWith('left')) {\r\n                            offsets[0] = containment[3];\r\n                        } else if (position.startsWith('right')) {\r\n                            offsets[0] = -containment[1];\r\n                        }\r\n                        if (position.endsWith('top')) {\r\n                            offsets[1] = containment[0];\r\n                        } else if (position.endsWith('bottom')) {\r\n                            offsets[1] = -containment[2];\r\n                        }\r\n                    }\r\n                }\r\n                self.reposition(`${self.snappableTo} ${offsets[0]} ${offsets[1]}`);\r\n            }\r\n            if (!alreadySnapped) {\r\n                self.snapped = self.snappableTo;\r\n            }\r\n        };\r\n        self.move = (target, cb) => {\r\n            let overlaps = self.overlaps(target, 'paddingbox'),\r\n                source = self.parentElement;\r\n            target.appendChild(self);\r\n            self.options.container = target;\r\n            self.style.left = overlaps.left + 'px';\r\n            self.style.top = overlaps.top + 'px';\r\n            self.saveCurrentDimensions();\r\n            self.saveCurrentPosition();\r\n            self.calcSizeFactors(); // important for option.onContainerResize\r\n            if (cb) {\r\n                cb.call(self, self, target, source);\r\n            }\r\n            return self;\r\n        };\r\n\r\n        self.closeChildpanels = (cb) => {\r\n            self.getChildpanels().forEach((item) => item.close());\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.getChildpanels = (cb) => {\r\n            const childpanels = self.content.querySelectorAll('.jsPanel');\r\n            if (cb) {\r\n                childpanels.forEach((panel, index, list) => {\r\n                    cb.call(panel, panel, index, list);\r\n                });\r\n            }\r\n            return childpanels;\r\n        };\r\n        self.isChildpanel = (cb) => {\r\n            const pp = self.closest('.jsPanel-content'),\r\n                parentpanel = pp ? pp.parentElement : null;\r\n            if (cb) {\r\n                cb.call(self, self, parentpanel);\r\n            }\r\n            // if panel is childpanel of another panel returns parentpanel, otherwise false\r\n            return pp ? parentpanel : false;\r\n        };\r\n        self.contentRemove = (cb) => {\r\n            jsPanel.emptyNode(self.content);\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.createMinimizedReplacement = () => {\r\n            const tpl = jsPanel.createMinimizedTemplate(),\r\n                color = window.getComputedStyle(self.headertitle).color,\r\n                selfStyles = window.getComputedStyle(self),\r\n                font = options.iconfont,\r\n                controlbar = tpl.querySelector('.jsPanel-controlbar');\r\n\r\n            // if panel background is an image (that includes gradients) instead of a color value\r\n            if (self.options.header !== 'auto-show-hide') {\r\n                jsPanel.setStyle(tpl, {\r\n                    backgroundColor: selfStyles.backgroundColor,\r\n                    backgroundPositionX: selfStyles.backgroundPositionX,\r\n                    backgroundPositionY: selfStyles.backgroundPositionY,\r\n                    backgroundRepeat: selfStyles.backgroundRepeat,\r\n                    backgroundAttachment: selfStyles.backgroundAttachment,\r\n                    backgroundImage: selfStyles.backgroundImage,\r\n                    backgroundSize: selfStyles.backgroundSize,\r\n                    backgroundOrigin: selfStyles.backgroundOrigin,\r\n                    backgroundClip: selfStyles.backgroundClip,\r\n                });\r\n            } else {\r\n                tpl.style.backgroundColor = window.getComputedStyle(self.header).backgroundColor;\r\n            }\r\n\r\n            tpl.id = self.id + '-min';\r\n            tpl.querySelector('.jsPanel-headerbar').replaceChild(self.headerlogo.cloneNode(true), tpl.querySelector('.jsPanel-headerlogo'));\r\n            tpl.querySelector('.jsPanel-titlebar').replaceChild(self.headertitle.cloneNode(true), tpl.querySelector('.jsPanel-title'));\r\n            tpl.querySelector('.jsPanel-titlebar').setAttribute('title', self.headertitle.textContent);\r\n            tpl.querySelector('.jsPanel-title').style.color = color;\r\n            controlbar.style.color = color;\r\n\r\n            controlbar.querySelectorAll('button').forEach((btn) => {\r\n                btn.style.color = color;\r\n            });\r\n\r\n            ['jsPanel-hdr-dark', 'jsPanel-hdr-light'].forEach((item) => {\r\n                if (self.header.classList.contains(item)) {\r\n                    tpl.querySelector('.jsPanel-hdr').classList.add(item);\r\n                }\r\n            });\r\n\r\n            // set iconfont\r\n            self.setIconfont(font, tpl);\r\n\r\n            if (self.dataset.btnnormalize === 'enabled') {\r\n                jsPanel.pointerup.forEach((evt) => {\r\n                    tpl.querySelector('.jsPanel-btn-normalize').addEventListener(evt, (e) => {\r\n                        e.preventDefault();\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n                        self.normalize();\r\n                    });\r\n                });\r\n            } else {\r\n                controlbar.querySelector('.jsPanel-btn-normalize').style.display = 'none';\r\n            }\r\n            if (self.dataset.btnmaximize === 'enabled') {\r\n                jsPanel.pointerup.forEach((evt) => {\r\n                    tpl.querySelector('.jsPanel-btn-maximize').addEventListener(evt, (e) => {\r\n                        e.preventDefault();\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n                        self.maximize();\r\n                    });\r\n                });\r\n            } else {\r\n                controlbar.querySelector('.jsPanel-btn-maximize').style.display = 'none';\r\n            }\r\n            if (self.dataset.btnclose === 'enabled') {\r\n                jsPanel.pointerup.forEach((evt) => {\r\n                    tpl.querySelector('.jsPanel-btn-close').addEventListener(evt, (e) => {\r\n                        e.preventDefault();\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n                        self.close(null, true);\r\n                    });\r\n                });\r\n            } else {\r\n                controlbar.querySelector('.jsPanel-btn-close').style.display = 'none';\r\n            }\r\n\r\n            return tpl;\r\n        };\r\n        self.removeMinimizedReplacement = () => {\r\n            const elmt = document.getElementById(`${self.id}-min`);\r\n            if (elmt) {\r\n                elmt.parentElement.removeChild(elmt);\r\n            }\r\n        };\r\n\r\n        self.drag = (options = {}) => {\r\n            let dragstarted, dragElmt, opts;\r\n            const jspaneldragstart = new CustomEvent('jspaneldragstart', { detail: self.id }),\r\n                jspaneldrag = new CustomEvent('jspaneldrag', { detail: self.id }),\r\n                jspaneldragstop = new CustomEvent('jspaneldragstop', { detail: self.id });\r\n\r\n            // make panel available as event object property 'panel'\r\n            [jspaneldragstart, jspaneldrag, jspaneldragstop].forEach((evt) => {\r\n                evt.panel = self;\r\n            });\r\n\r\n            const camelcase = (string) => {\r\n                // 'left-top' converted to 'snapLeftTop'\r\n                let str = string.split('-');\r\n                str.forEach((word, index) => {\r\n                    str[index] = word.charAt(0).toUpperCase() + word.slice(1);\r\n                });\r\n                return 'snap' + str.join('');\r\n            };\r\n            function windowListener(e) {\r\n                if (e.relatedTarget === null) {\r\n                    jsPanel.pointermove.forEach((evt) => {\r\n                        document.removeEventListener(evt, dragElmt, false);\r\n                        self.style.opacity = 1;\r\n                    });\r\n                }\r\n            }\r\n            // attach handler to each drag handle\r\n            let handles = options.handles || jsPanel.defaults.dragit.handles;\r\n            let cursor = options.cursor || jsPanel.defaults.dragit.cursor;\r\n\r\n            function pointerUpHandlerDragit(e) {\r\n                jsPanel.pointermove.forEach((e) => {\r\n                    document.removeEventListener(e, dragElmt);\r\n                });\r\n                jsPanel.removeSnapAreas();\r\n                if (dragstarted) {\r\n                    self.style.opacity = 1;\r\n                    dragstarted = undefined;\r\n                    if (opts.snap) {\r\n                        switch (self.snappableTo) {\r\n                            case 'left-top':\r\n                                self.snap(opts.snap.snapLeftTop);\r\n                                break;\r\n                            case 'center-top':\r\n                                self.snap(opts.snap.snapCenterTop);\r\n                                break;\r\n                            case 'right-top':\r\n                                self.snap(opts.snap.snapRightTop);\r\n                                break;\r\n                            case 'right-center':\r\n                                self.snap(opts.snap.snapRightCenter);\r\n                                break;\r\n                            case 'right-bottom':\r\n                                self.snap(opts.snap.snapRightBottom);\r\n                                break;\r\n                            case 'center-bottom':\r\n                                self.snap(opts.snap.snapCenterBottom);\r\n                                break;\r\n                            case 'left-bottom':\r\n                                self.snap(opts.snap.snapLeftBottom);\r\n                                break;\r\n                            case 'left-center':\r\n                                self.snap(opts.snap.snapLeftCenter);\r\n                                break;\r\n                        }\r\n\r\n                        if (opts.snap.callback && self.snappableTo && typeof opts.snap.callback === 'function') {\r\n                            opts.snap.callback.call(self, self);\r\n                            if (opts.snap.repositionOnSnap && opts.snap[camelcase(self.snappableTo)] !== false) {\r\n                                self.repositionOnSnap(self.snappableTo);\r\n                            }\r\n                        }\r\n                        if (self.snappableTo && opts.snap.repositionOnSnap && opts.snap[camelcase(self.snappableTo)]) {\r\n                            self.repositionOnSnap(self.snappableTo);\r\n                        }\r\n                    }\r\n                    // opts.drop\r\n                    if (self.droppableTo && self.droppableTo) {\r\n                        let sourceContainer = self.parentElement;\r\n                        self.move(self.droppableTo);\r\n                        if (opts.drop.callback) {\r\n                            opts.drop.callback.call(self, self, self.droppableTo, sourceContainer);\r\n                        }\r\n                    }\r\n                    document.dispatchEvent(jspaneldragstop);\r\n                    if (opts.stop.length) {\r\n                        let stopStyles = window.getComputedStyle(self),\r\n                            paneldata = {\r\n                                left: parseFloat(stopStyles.left),\r\n                                top: parseFloat(stopStyles.top),\r\n                                width: parseFloat(stopStyles.width),\r\n                                height: parseFloat(stopStyles.height),\r\n                            };\r\n                        jsPanel.processCallbacks(self, opts.stop, false, paneldata, e);\r\n                    }\r\n                    self.saveCurrentPosition();\r\n                    self.calcSizeFactors(); // important for options onwindowresize/onparentresize\r\n                }\r\n                self.controlbar.style.pointerEvents = 'inherit';\r\n                self.content.style.pointerEvents = 'inherit';\r\n                // restore other panel's css pointer-events\r\n                document.querySelectorAll('iframe').forEach((frame) => {\r\n                    frame.style.pointerEvents = 'auto';\r\n                });\r\n                document.removeEventListener(e, pointerUpHandlerDragit);\r\n            }\r\n\r\n            self.querySelectorAll(handles).forEach((handle) => {\r\n                handle.style.touchAction = 'none';\r\n                handle.style.cursor = cursor;\r\n\r\n                jsPanel.pointerdown.forEach((evt) => {\r\n                    handle.addEventListener(evt, (e) => {\r\n                        // disable dragging for all mouse buttons but left\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n\r\n                        // setup and normalize dragit options\r\n                        opts = Object.assign({}, jsPanel.defaults.dragit, options);\r\n\r\n                        if (opts.disableOnMaximized && self.status === 'maximized') {\r\n                            return false;\r\n                        }\r\n\r\n                        if (opts.containment || opts.containment === 0) {\r\n                            opts.containment = jsPanel.pOcontainment(opts.containment);\r\n                        }\r\n\r\n                        if (opts.grid) {\r\n                            if (Array.isArray(opts.grid)) {\r\n                                if (opts.grid.length === 1) {\r\n                                    opts.grid[1] = opts.grid[0];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (opts.snap) {\r\n                            if (typeof opts.snap === 'object') {\r\n                                opts.snap = Object.assign({}, jsPanel.defaultSnapConfig, opts.snap);\r\n                            } else {\r\n                                opts.snap = jsPanel.defaultSnapConfig;\r\n                            }\r\n                        }\r\n\r\n                        // footer elmts with the class \"jsPanel-ftr-btn\" don't drag a panel\r\n                        // do not compare e.target with e.currentTarget because there might be footer elmts supposed to drag the panel\r\n                        // noinspection JSUnresolvedFunction\r\n                        if (e.target.closest('.jsPanel-ftr-btn')) {\r\n                            return;\r\n                        }\r\n\r\n                        self.controlbar.style.pointerEvents = 'none';\r\n                        self.content.style.pointerEvents = 'none'; // without this code handler might not be unbound when content has iframe or object tag\r\n                        // prevents iframes in other panel from interfering with drag action of dragged panel\r\n                        document.querySelectorAll('iframe').forEach((frame) => {\r\n                            frame.style.pointerEvents = 'none';\r\n                        });\r\n\r\n                        let startStyles = window.getComputedStyle(self),\r\n                            startLeft = parseFloat(startStyles.left),\r\n                            startTop = parseFloat(startStyles.top),\r\n                            startWidth = parseFloat(startStyles.width),\r\n                            startHeight = parseFloat(startStyles.height),\r\n                            psx = e.touches ? e.touches[0].clientX : e.clientX, // pointer x on mousedown (don't use pageX, doesn't work on FF for Android)\r\n                            psy = e.touches ? e.touches[0].clientY : e.clientY, // same as above\r\n                            parent = self.parentElement,\r\n                            parentRect = parent.getBoundingClientRect(),\r\n                            parentStyles = window.getComputedStyle(parent),\r\n                            scaleFactor = self.getScaleFactor(),\r\n                            startLeftCorrection = 0,\r\n                            scrollbarwidths = jsPanel.getScrollbarWidth(parent);\r\n\r\n                        // function actually dragging the elmt\r\n                        dragElmt = (e) => {\r\n                            e.preventDefault();\r\n\r\n                            if (!dragstarted) {\r\n                                document.dispatchEvent(jspaneldragstart);\r\n                                self.style.opacity = opts.opacity;\r\n                                // if configured restore panel size to values before snap and reposition reasonable before drag actually starts\r\n                                if (self.snapped && opts.snap.resizeToPreSnap && self.currentData.beforeSnap) {\r\n                                    self.resize(self.currentData.beforeSnap.width + ' ' + self.currentData.beforeSnap.height);\r\n                                    self.setControls(['.jsPanel-btn-normalize']);\r\n                                    let intermediateStyles = self.getBoundingClientRect(),\r\n                                        delta = psx - (intermediateStyles.left + intermediateStyles.width),\r\n                                        wHalf = intermediateStyles.width / 2;\r\n                                    if (delta > -wHalf) {\r\n                                        startLeftCorrection = delta + wHalf;\r\n                                    }\r\n                                }\r\n\r\n                                self.front();\r\n                                self.snapped = false;\r\n\r\n                                // panel is maximized on dragstart\r\n                                if (self.status === 'maximized') {\r\n                                    self.setControls(['.jsPanel-btn-normalize']);\r\n                                    self.status = 'normalized';\r\n                                }\r\n\r\n                                // opts.drop\r\n                                if (opts.drop && opts.drop.dropZones) {\r\n                                    //opts.drop.dropZones = opts.drop.dropZones.map(zone => jsPanel.pOcontainer(zone));\r\n                                    let dropzones = opts.drop.dropZones.map((zone) => jsPanel.pOcontainer(zone)); // -> array where each item is a NodeList\r\n                                    let dropzonelist = [];\r\n                                    dropzones.forEach(function (nodelist) {\r\n                                        if (nodelist.length) {\r\n                                            // an element node does not have a length property\r\n                                            nodelist.forEach(function (node) {\r\n                                                dropzonelist.push(node);\r\n                                            });\r\n                                        } else {\r\n                                            dropzonelist.push(nodelist);\r\n                                        }\r\n                                    });\r\n                                    // filter list to have only unique values\r\n                                    dropzonelist = dropzonelist.filter(function (value, index, self) {\r\n                                        return self.indexOf(value) === index;\r\n                                    });\r\n                                    opts.drop.dropZones = dropzonelist;\r\n                                }\r\n\r\n                                // dragstart callback\r\n                                if (opts.start.length) {\r\n                                    jsPanel.processCallbacks(\r\n                                        self,\r\n                                        opts.start,\r\n                                        false,\r\n                                        {\r\n                                            left: startLeft,\r\n                                            top: startTop,\r\n                                            width: startWidth,\r\n                                            height: startHeight,\r\n                                        },\r\n                                        e\r\n                                    );\r\n                                }\r\n                            }\r\n                            dragstarted = 1;\r\n                            let elmtL, elmtL2, elmtT, elmtT2, elmtR, elmtR2, elmtB, elmtB2, right, bottom;\r\n                            let pmx = e.touches ? e.touches[0].clientX : e.clientX, // current pointer x while pointer moves (don't use pageX, doesn't work on FF for Android)\r\n                                pmy = e.touches ? e.touches[0].clientY : e.clientY, // current pointer y while pointer moves (don't use pageY, doesn't work on FF for Android)\r\n                                dragStyles = window.getComputedStyle(self), // get current styles while dragging\r\n                                overlaps;\r\n\r\n                            // EDGE reports \"auto\" instead of pixel value using getComputedStyle(), so some values need to be calculated different\r\n                            // this whole block of code could be removed if EDGE not based on Chromium doesn't need to be supported\r\n                            if (parent === document.body) {\r\n                                let elmtRect = self.getBoundingClientRect();\r\n                                right =\r\n                                    window.innerWidth -\r\n                                    parseInt(parentStyles.borderLeftWidth, 10) -\r\n                                    parseInt(parentStyles.borderRightWidth, 10) -\r\n                                    (elmtRect.left + elmtRect.width);\r\n                                bottom =\r\n                                    window.innerHeight -\r\n                                    parseInt(parentStyles.borderTopWidth, 10) -\r\n                                    parseInt(parentStyles.borderBottomWidth, 10) -\r\n                                    (elmtRect.top + elmtRect.height);\r\n                            } else {\r\n                                right =\r\n                                    parseInt(parentStyles.width, 10) -\r\n                                    parseInt(parentStyles.borderLeftWidth, 10) -\r\n                                    parseInt(parentStyles.borderRightWidth, 10) -\r\n                                    (parseInt(dragStyles.left, 10) + parseInt(dragStyles.width, 10));\r\n                                bottom =\r\n                                    parseInt(parentStyles.height, 10) -\r\n                                    parseInt(parentStyles.borderTopWidth, 10) -\r\n                                    parseInt(parentStyles.borderBottomWidth, 10) -\r\n                                    (parseInt(dragStyles.top, 10) + parseInt(dragStyles.height, 10));\r\n                            }\r\n                            // -- -- --\r\n\r\n                            elmtL = parseFloat(dragStyles.left);\r\n                            elmtT = parseFloat(dragStyles.top);\r\n                            elmtR = right; // replace line with parseFloat(dragStyles.right); if EDGE code block above is removed\r\n                            elmtB = bottom; // replace line with parseFloat(dragStyles.bottom); if EDGE code block above is removed\r\n\r\n                            if (opts.snap) {\r\n                                if (opts.snap.trigger === 'panel') {\r\n                                    elmtL2 = elmtL ** 2;\r\n                                    elmtT2 = elmtT ** 2;\r\n                                    elmtR2 = elmtR ** 2;\r\n                                    elmtB2 = elmtB ** 2;\r\n                                } else if (opts.snap.trigger === 'pointer') {\r\n                                    if (self.options.container === 'window') {\r\n                                        elmtL = pmx;\r\n                                        elmtT = pmy;\r\n                                        elmtR = window.innerWidth - pmx;\r\n                                        elmtB = window.innerHeight - pmy;\r\n                                        elmtL2 = pmx ** 2;\r\n                                        elmtT2 = elmtT ** 2;\r\n                                        elmtR2 = elmtR ** 2;\r\n                                        elmtB2 = elmtB ** 2;\r\n                                    } else {\r\n                                        overlaps = self.overlaps(parent, 'paddingbox', e);\r\n                                        elmtL = overlaps.pointer.left;\r\n                                        elmtT = overlaps.pointer.top;\r\n                                        elmtR = overlaps.pointer.right;\r\n                                        elmtB = overlaps.pointer.bottom;\r\n                                        elmtL2 = overlaps.pointer.left ** 2;\r\n                                        elmtT2 = overlaps.pointer.top ** 2;\r\n                                        elmtR2 = overlaps.pointer.right ** 2;\r\n                                        elmtB2 = overlaps.pointer.bottom ** 2;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            let lefttopVectorDrag = Math.sqrt(elmtL2 + elmtT2),\r\n                                leftbottomVectorDrag = Math.sqrt(elmtL2 + elmtB2),\r\n                                righttopVectorDrag = Math.sqrt(elmtR2 + elmtT2),\r\n                                rightbottomVectorDrag = Math.sqrt(elmtR2 + elmtB2),\r\n                                horizontalDeltaDrag = Math.abs(elmtL - elmtR) / 2,\r\n                                verticalDeltaDrag = Math.abs(elmtT - elmtB) / 2,\r\n                                leftVectorDrag = Math.sqrt(elmtL2 + verticalDeltaDrag ** 2),\r\n                                topVectorDrag = Math.sqrt(elmtT2 + horizontalDeltaDrag ** 2),\r\n                                rightVectorDrag = Math.sqrt(elmtR2 + verticalDeltaDrag ** 2),\r\n                                bottomVectorDrag = Math.sqrt(elmtB2 + horizontalDeltaDrag ** 2);\r\n\r\n                            // prevent selections while dragging\r\n                            window.getSelection().removeAllRanges();\r\n\r\n                            // trigger drag permanently while dragging\r\n                            document.dispatchEvent(jspaneldrag);\r\n\r\n                            // move elmt and apply axis option\r\n                            if (!opts.axis || opts.axis === 'x') {\r\n                                self.style.left = startLeft + (pmx - psx) / scaleFactor.x + startLeftCorrection + 'px'; // set new css left of elmt depending on opts.axis\r\n                            }\r\n                            if (!opts.axis || opts.axis === 'y') {\r\n                                self.style.top = startTop + (pmy - psy) / scaleFactor.y + 'px'; // set new css top of elmt depending on opts.axis\r\n                            }\r\n\r\n                            // apply grid option\r\n                            if (opts.grid) {\r\n                                let grid = opts.grid,\r\n                                    axis = opts.axis;\r\n                                // formula rounds to nearest multiple of grid\r\n                                // https://www.webveteran.com/blog/web-coding/javascript-round-to-any-multiple-of-a-specific-number/\r\n                                let x = grid[0] * Math.round((startLeft + (pmx - psx)) / grid[0]),\r\n                                    y = grid[1] * Math.round((startTop + (pmy - psy)) / grid[1]);\r\n                                if (!axis || axis === 'x') {\r\n                                    self.style.left = `${x}px`;\r\n                                }\r\n                                if (!axis || axis === 'y') {\r\n                                    self.style.top = `${y}px`;\r\n                                }\r\n                            }\r\n\r\n                            // apply containment option\r\n                            if (opts.containment || opts.containment === 0) {\r\n                                let containment = opts.containment;\r\n                                let maxLeft, maxTop;\r\n                                // calc maxLeft and maxTop (minLeft and MinTop is equal to containment setting)\r\n                                if (self.options.container === 'window') {\r\n                                    maxLeft = window.innerWidth - parseFloat(dragStyles.width) - containment[1] - scrollbarwidths.y;\r\n                                    maxTop = window.innerHeight - parseFloat(dragStyles.height) - containment[2] - scrollbarwidths.x;\r\n                                } else {\r\n                                    let xCorr = parseFloat(parentStyles.borderLeftWidth) + parseFloat(parentStyles.borderRightWidth),\r\n                                        yCorr = parseFloat(parentStyles.borderTopWidth) + parseFloat(parentStyles.borderBottomWidth);\r\n                                    maxLeft =\r\n                                        parentRect.width / scaleFactor.x - parseFloat(dragStyles.width) - containment[1] - xCorr - scrollbarwidths.y;\r\n                                    maxTop =\r\n                                        parentRect.height / scaleFactor.y -\r\n                                        parseFloat(dragStyles.height) -\r\n                                        containment[2] -\r\n                                        yCorr -\r\n                                        scrollbarwidths.x;\r\n                                }\r\n\r\n                                if (parseFloat(self.style.left) <= containment[3]) {\r\n                                    self.style.left = containment[3] + 'px';\r\n                                }\r\n                                if (parseFloat(self.style.top) <= containment[0]) {\r\n                                    self.style.top = containment[0] + 'px';\r\n                                }\r\n                                if (parseFloat(self.style.left) >= maxLeft) {\r\n                                    self.style.left = maxLeft + 'px';\r\n                                }\r\n                                if (parseFloat(self.style.top) >= maxTop) {\r\n                                    self.style.top = maxTop + 'px';\r\n                                }\r\n                            }\r\n\r\n                            // callback while dragging\r\n                            if (opts.drag.length) {\r\n                                let paneldata = {\r\n                                    left: elmtL,\r\n                                    top: elmtT,\r\n                                    right: elmtR,\r\n                                    bottom: elmtB,\r\n                                    width: parseFloat(dragStyles.width),\r\n                                    height: parseFloat(dragStyles.height),\r\n                                };\r\n                                jsPanel.processCallbacks(self, opts.drag, false, paneldata, e);\r\n                            }\r\n\r\n                            // apply snap options\r\n                            if (opts.snap) {\r\n                                let snapSens = opts.snap.sensitivity,\r\n                                    topSensAreaLength = parent === document.body ? window.innerWidth / 8 : parentRect.width / 8,\r\n                                    sideSensAreaLength = parent === document.body ? window.innerHeight / 8 : parentRect.height / 8;\r\n                                self.snappableTo = false;\r\n                                jsPanel.removeSnapAreas();\r\n\r\n                                if (lefttopVectorDrag < snapSens) {\r\n                                    if (opts.snap.snapLeftTop !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'left-top';\r\n                                            jsPanel.createSnapArea(self, 'lt', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.left > 0 && overlaps.pointer.top > 0) {\r\n                                                self.snappableTo = 'left-top';\r\n                                                jsPanel.createSnapArea(self, 'lt', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (leftbottomVectorDrag < snapSens) {\r\n                                    if (opts.snap.snapLeftBottom !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'left-bottom';\r\n                                            jsPanel.createSnapArea(self, 'lb', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.left > 0 && overlaps.pointer.bottom > 0) {\r\n                                                self.snappableTo = 'left-bottom';\r\n                                                jsPanel.createSnapArea(self, 'lb', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (righttopVectorDrag < snapSens) {\r\n                                    if (opts.snap.snapRightTop !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'right-top';\r\n                                            jsPanel.createSnapArea(self, 'rt', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.right > 0 && overlaps.pointer.top > 0) {\r\n                                                self.snappableTo = 'right-top';\r\n                                                jsPanel.createSnapArea(self, 'rt', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (rightbottomVectorDrag < snapSens) {\r\n                                    if (opts.snap.snapRightBottom !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'right-bottom';\r\n                                            jsPanel.createSnapArea(self, 'rb', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.right > 0 && overlaps.pointer.bottom > 0) {\r\n                                                self.snappableTo = 'right-bottom';\r\n                                                jsPanel.createSnapArea(self, 'rb', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (elmtT < snapSens && topVectorDrag < topSensAreaLength) {\r\n                                    if (opts.snap.snapCenterTop !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'center-top';\r\n                                            jsPanel.createSnapArea(self, 'ct', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.top > 0) {\r\n                                                self.snappableTo = 'center-top';\r\n                                                jsPanel.createSnapArea(self, 'ct', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (elmtL < snapSens && leftVectorDrag < sideSensAreaLength) {\r\n                                    if (opts.snap.snapLeftCenter !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'left-center';\r\n                                            jsPanel.createSnapArea(self, 'lc', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.left > 0) {\r\n                                                self.snappableTo = 'left-center';\r\n                                                jsPanel.createSnapArea(self, 'lc', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (elmtR < snapSens && rightVectorDrag < sideSensAreaLength) {\r\n                                    if (opts.snap.snapRightCenter !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'right-center';\r\n                                            jsPanel.createSnapArea(self, 'rc', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.right > 0) {\r\n                                                self.snappableTo = 'right-center';\r\n                                                jsPanel.createSnapArea(self, 'rc', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else if (elmtB < snapSens && bottomVectorDrag < topSensAreaLength) {\r\n                                    if (opts.snap.snapCenterBottom !== false) {\r\n                                        if (!opts.snap.active || opts.snap.active === 'both') {\r\n                                            self.snappableTo = 'center-bottom';\r\n                                            jsPanel.createSnapArea(self, 'cb', snapSens);\r\n                                        } else if (opts.snap.trigger === 'pointer' && opts.snap.active && opts.snap.active === 'inside') {\r\n                                            if (overlaps.pointer.bottom > 0) {\r\n                                                self.snappableTo = 'center-bottom';\r\n                                                jsPanel.createSnapArea(self, 'cb', snapSens);\r\n                                            } else {\r\n                                                self.snappableTo = false;\r\n                                                jsPanel.removeSnapAreas();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // opts.drop\r\n                            if (opts.drop && opts.drop.dropZones) {\r\n                                // IE doesn't offer document.elementsFromPoint() but document.msElementsFromPoint()\r\n                                let elementsFromPoint = jsPanel.isIE ? 'msElementsFromPoint' : 'elementsFromPoint';\r\n                                let elementsFrom = document[elementsFromPoint](e.clientX, e.clientY);\r\n                                // document.msElementsFromPoint() returns a nodeList -> convert to array\r\n                                if (!Array.isArray(elementsFrom)) {\r\n                                    elementsFrom = Array.prototype.slice.call(elementsFrom);\r\n                                }\r\n                                opts.drop.dropZones.forEach((zone) => {\r\n                                    // Array.prototype.includes() needs polyfill in IE\r\n                                    if (elementsFrom.includes(zone)) {\r\n                                        self.droppableTo = zone;\r\n                                    }\r\n                                });\r\n                                // do not include following if statement in this.options.dragit.drop.dropZones.forEach !!!!\r\n                                if (!elementsFrom.includes(self.droppableTo)) {\r\n                                    self.droppableTo = false;\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        jsPanel.pointermove.forEach((e) => {\r\n                            document.addEventListener(e, dragElmt);\r\n                        });\r\n\r\n                        // remove drag handler when mouse leaves browser window (mouseleave doesn't work)\r\n                        window.addEventListener('mouseout', windowListener, false);\r\n                    });\r\n                });\r\n\r\n                jsPanel.pointerup.forEach((event) => {\r\n                    document.addEventListener(event, pointerUpHandlerDragit);\r\n                    window.removeEventListener('mouseout', windowListener);\r\n                });\r\n\r\n                // dragit is initialized - now disable if set\r\n                if (options.disable) {\r\n                    handle.style.pointerEvents = 'none';\r\n                }\r\n            });\r\n\r\n            return self;\r\n        };\r\n        self.dragit = (string) => {\r\n            const dragitOptions = Object.assign({}, jsPanel.defaults.dragit, options.dragit),\r\n                handles = self.querySelectorAll(dragitOptions.handles);\r\n            if (string === 'disable') {\r\n                handles.forEach((handle) => {\r\n                    handle.style.pointerEvents = 'none';\r\n                });\r\n            } else {\r\n                handles.forEach((handle) => {\r\n                    handle.style.pointerEvents = 'auto';\r\n                });\r\n            }\r\n            return self;\r\n        };\r\n\r\n        self.sizeit = (options = {}) => {\r\n            const jspanelresizestart = new CustomEvent('jspanelresizestart', { detail: self.id }),\r\n                jspanelresize = new CustomEvent('jspanelresize', { detail: self.id }),\r\n                jspanelresizestop = new CustomEvent('jspanelresizestop', { detail: self.id });\r\n            // make panel available as event object property 'panel'\r\n            [jspanelresizestart, jspanelresize, jspanelresizestop].forEach((evt) => {\r\n                evt.panel = self;\r\n            });\r\n            let opts = {},\r\n                resizePanel,\r\n                resizestarted,\r\n                w,\r\n                h,\r\n                startWidth,\r\n                startHeight;\r\n\r\n            opts.handles = options.handles || jsPanel.defaults.resizeit.handles;\r\n            opts.handles.split(',').forEach((item) => {\r\n                const node = document.createElement('DIV');\r\n                node.className = `jsPanel-resizeit-handle jsPanel-resizeit-${item.trim()}`;\r\n                //node.style.zIndex = 90;\r\n                self.append(node);\r\n            });\r\n            // cache option aspectRatio of original resizeit configuration (is restored on pointerup)\r\n            let cachedOptionAspectRatio = options.aspectRatio ? options.aspectRatio : false;\r\n\r\n            function windowListener(e) {\r\n                if (e.relatedTarget === null) {\r\n                    jsPanel.pointermove.forEach((evt) => {\r\n                        document.removeEventListener(evt, resizePanel, false);\r\n                    });\r\n                }\r\n            }\r\n\r\n            function pointerUpHandlerResizeit(e) {\r\n                jsPanel.pointermove.forEach((evt) => {\r\n                    document.removeEventListener(evt, resizePanel, false);\r\n                });\r\n                if (e.target.classList && e.target.classList.contains('jsPanel-resizeit-handle')) {\r\n                    let isLeftChange,\r\n                        isTopChange,\r\n                        cl = e.target.className;\r\n                    if (cl.match(/jsPanel-resizeit-nw|jsPanel-resizeit-w|jsPanel-resizeit-sw/i)) {\r\n                        isLeftChange = true;\r\n                    }\r\n                    if (cl.match(/jsPanel-resizeit-nw|jsPanel-resizeit-n|jsPanel-resizeit-ne/i)) {\r\n                        isTopChange = true;\r\n                    }\r\n\r\n                    // snap panel to grid (doesn't work that well if inside function resizePanel)\r\n                    if (opts.grid && Array.isArray(opts.grid)) {\r\n                        if (opts.grid.length === 1) {\r\n                            opts.grid[1] = opts.grid[0];\r\n                        }\r\n                        const cw = parseFloat(self.style.width),\r\n                            ch = parseFloat(self.style.height),\r\n                            modW = cw % opts.grid[0],\r\n                            modH = ch % opts.grid[1],\r\n                            cx = parseFloat(self.style.left),\r\n                            cy = parseFloat(self.style.top),\r\n                            modX = cx % opts.grid[0],\r\n                            modY = cy % opts.grid[1];\r\n\r\n                        if (modW < opts.grid[0] / 2) {\r\n                            self.style.width = cw - modW + 'px';\r\n                        } else {\r\n                            self.style.width = cw + (opts.grid[0] - modW) + 'px';\r\n                        }\r\n                        if (modH < opts.grid[1] / 2) {\r\n                            self.style.height = ch - modH + 'px';\r\n                        } else {\r\n                            self.style.height = ch + (opts.grid[1] - modH) + 'px';\r\n                        }\r\n\r\n                        if (isLeftChange) {\r\n                            if (modX < opts.grid[0] / 2) {\r\n                                self.style.left = cx - modX + 'px';\r\n                            } else {\r\n                                self.style.left = cx + (opts.grid[0] - modX) + 'px';\r\n                            }\r\n                        }\r\n                        if (isTopChange) {\r\n                            if (modY < opts.grid[1] / 2) {\r\n                                self.style.top = cy - modY + 'px';\r\n                            } else {\r\n                                self.style.top = cy + (opts.grid[1] - modY) + 'px';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (resizestarted) {\r\n                    self.content.style.pointerEvents = 'inherit';\r\n                    resizestarted = undefined;\r\n                    self.saveCurrentDimensions();\r\n                    self.saveCurrentPosition();\r\n                    self.calcSizeFactors();\r\n                    let smallifyBtn = self.controlbar.querySelector('.jsPanel-btn-smallify');\r\n                    let elmtRect = self.getBoundingClientRect();\r\n                    if (smallifyBtn && elmtRect.height > startHeight + 5) {\r\n                        smallifyBtn.style.transform = 'rotate(0deg)';\r\n                    }\r\n                    document.dispatchEvent(jspanelresizestop);\r\n\r\n                    if (opts.stop.length) {\r\n                        let stopStyles = window.getComputedStyle(self),\r\n                            paneldata = {\r\n                                left: parseFloat(stopStyles.left),\r\n                                top: parseFloat(stopStyles.top),\r\n                                width: parseFloat(stopStyles.width),\r\n                                height: parseFloat(stopStyles.height),\r\n                            };\r\n                        jsPanel.processCallbacks(self, opts.stop, false, paneldata, e);\r\n                    }\r\n                }\r\n                self.content.style.pointerEvents = 'inherit';\r\n                // restore other panel's css pointer-events\r\n                document.querySelectorAll('iframe').forEach((frame) => {\r\n                    frame.style.pointerEvents = 'auto';\r\n                });\r\n                // restore option aspectRatio to original configuration\r\n                opts.aspectRatio = cachedOptionAspectRatio;\r\n                document.removeEventListener(e, pointerUpHandlerResizeit);\r\n            }\r\n\r\n            self.querySelectorAll('.jsPanel-resizeit-handle').forEach((handle) => {\r\n                handle.style.touchAction = 'none';\r\n\r\n                jsPanel.pointerdown.forEach((event) => {\r\n                    handle.addEventListener(event, (e) => {\r\n                        // prevent window scroll while resizing elmt\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        // disable resizing for all mouse buttons but left\r\n                        if (e.button && e.button > 0) {\r\n                            return false;\r\n                        }\r\n                        // factor is needed only for the modifier key Shift feature\r\n                        let factor = 1;\r\n                        // setup and normalize resizeit options\r\n                        opts = Object.assign({}, jsPanel.defaults.resizeit, options);\r\n                        if (opts.containment || opts.containment === 0) {\r\n                            opts.containment = jsPanel.pOcontainment(opts.containment);\r\n                        }\r\n                        // legacy line: aspectRatio should be either 'panel' or 'content', not just true\r\n                        if (opts.aspectRatio && opts.aspectRatio === true) {\r\n                            opts.aspectRatio = 'panel';\r\n                        }\r\n                        // set aspectRatio according to modifier key\r\n                        if (jsPanel.modifier) {\r\n                            let modifier = jsPanel.modifier;\r\n                            if (modifier.altKey) {\r\n                                opts.aspectRatio = 'content';\r\n                            } else if (modifier.ctrlKey) {\r\n                                opts.aspectRatio = 'panel';\r\n                            } else if (modifier.shiftKey) {\r\n                                opts.aspectRatio = false;\r\n                                factor = 2; // does work only with 2 as value\r\n                            }\r\n                        }\r\n\r\n                        // noinspection JSUnresolvedFunction\r\n                        let maxWidth = typeof opts.maxWidth === 'function' ? opts.maxWidth() : opts.maxWidth || 10000,\r\n                            maxHeight = typeof opts.maxHeight === 'function' ? opts.maxHeight() : opts.maxHeight || 10000,\r\n                            minWidth = typeof opts.minWidth === 'function' ? opts.minWidth() : opts.minWidth,\r\n                            minHeight = typeof opts.minHeight === 'function' ? opts.minHeight() : opts.minHeight;\r\n\r\n                        self.content.style.pointerEvents = 'none';\r\n                        // prevents iframes in other panel from interfering with resize action of dragged panel\r\n                        document.querySelectorAll('iframe').forEach((frame) => {\r\n                            frame.style.pointerEvents = 'none';\r\n                        });\r\n\r\n                        // noinspection JSUnresolvedVariable\r\n                        const elmtParent = self.parentElement,\r\n                            elmtParentTagName = elmtParent.tagName.toLowerCase(),\r\n                            elmtRect = self.getBoundingClientRect(),\r\n                            elmtParentRect = elmtParent.getBoundingClientRect(),\r\n                            elmtParentStyles = window.getComputedStyle(elmtParent, null),\r\n                            elmtParentBLW = parseInt(elmtParentStyles.borderLeftWidth, 10),\r\n                            elmtParentBTW = parseInt(elmtParentStyles.borderTopWidth, 10),\r\n                            elmtParentPosition = elmtParentStyles.getPropertyValue('position'),\r\n                            startX = e.clientX || e.touches[0].clientX,\r\n                            startY = e.clientY || e.touches[0].clientY,\r\n                            startRatio = startX / startY,\r\n                            resizeHandleClassList = e.target.classList,\r\n                            scaleFactor = self.getScaleFactor(),\r\n                            aspectRatio = elmtRect.width / elmtRect.height,\r\n                            elmtContentRect = self.content.getBoundingClientRect(),\r\n                            aspectRatioContent = elmtContentRect.width / elmtContentRect.height,\r\n                            hdrHeight = self.header.getBoundingClientRect().height, // needed in aspectRatio\r\n                            ftrHeight = self.footer.getBoundingClientRect().height || 0; // needed in aspectRatio\r\n                        let startLeft = elmtRect.left,\r\n                            startTop = elmtRect.top,\r\n                            maxWidthEast = 10000,\r\n                            maxWidthWest = 10000,\r\n                            maxHeightSouth = 10000,\r\n                            maxHeightNorth = 10000;\r\n\r\n                        startWidth = elmtRect.width;\r\n                        startHeight = elmtRect.height;\r\n\r\n                        if (elmtParentTagName !== 'body') {\r\n                            startLeft = elmtRect.left - elmtParentRect.left + elmtParent.scrollLeft;\r\n                            startTop = elmtRect.top - elmtParentRect.top + elmtParent.scrollTop;\r\n                        }\r\n\r\n                        // calc min/max left/top values if containment is set - code from jsDraggable\r\n                        if (elmtParentTagName === 'body' && opts.containment) {\r\n                            maxWidthEast = document.documentElement.clientWidth - elmtRect.left;\r\n                            maxHeightSouth = document.documentElement.clientHeight - elmtRect.top;\r\n                            maxWidthWest = elmtRect.width + elmtRect.left;\r\n                            maxHeightNorth = elmtRect.height + elmtRect.top;\r\n                        } else {\r\n                            // if panel is NOT in body\r\n                            if (opts.containment) {\r\n                                if (elmtParentPosition === 'static') {\r\n                                    maxWidthEast = elmtParentRect.width - elmtRect.left + elmtParentBLW;\r\n                                    maxHeightSouth = elmtParentRect.height + elmtParentRect.top - elmtRect.top + elmtParentBTW;\r\n                                    maxWidthWest = elmtRect.width + (elmtRect.left - elmtParentRect.left) - elmtParentBLW;\r\n                                    maxHeightNorth = elmtRect.height + (elmtRect.top - elmtParentRect.top) - elmtParentBTW;\r\n                                } else {\r\n                                    maxWidthEast = elmtParent.clientWidth - (elmtRect.left - elmtParentRect.left) / scaleFactor.x + elmtParentBLW;\r\n                                    maxHeightSouth = elmtParent.clientHeight - (elmtRect.top - elmtParentRect.top) / scaleFactor.y + elmtParentBTW;\r\n                                    maxWidthWest = (elmtRect.width + elmtRect.left - elmtParentRect.left) / scaleFactor.x - elmtParentBLW;\r\n                                    maxHeightNorth = self.clientHeight + (elmtRect.top - elmtParentRect.top) / scaleFactor.y - elmtParentBTW;\r\n                                }\r\n                            }\r\n                        }\r\n                        // if original opts.containment is array\r\n                        if (opts.containment) {\r\n                            maxWidthWest -= opts.containment[3];\r\n                            maxHeightNorth -= opts.containment[0];\r\n                            maxWidthEast -= opts.containment[1];\r\n                            maxHeightSouth -= opts.containment[2];\r\n                        }\r\n\r\n                        // calculate corrections for rotated panels\r\n                        const computedStyle = window.getComputedStyle(self),\r\n                            wDif = parseFloat(computedStyle.width) - elmtRect.width,\r\n                            hDif = parseFloat(computedStyle.height) - elmtRect.height;\r\n                        let xDif = parseFloat(computedStyle.left) - elmtRect.left,\r\n                            yDif = parseFloat(computedStyle.top) - elmtRect.top;\r\n                        if (elmtParent !== document.body) {\r\n                            xDif += elmtParentRect.left;\r\n                            yDif += elmtParentRect.top;\r\n                        }\r\n                        // used in aspectRatio code\r\n                        let borderTopWidth = parseInt(computedStyle.borderTopWidth, 10),\r\n                            borderRightWidth = parseInt(computedStyle.borderRightWidth, 10),\r\n                            borderBottomWidth = parseInt(computedStyle.borderBottomWidth, 10),\r\n                            borderLeftWidth = parseInt(computedStyle.borderLeftWidth, 10);\r\n\r\n                        resizePanel = (evt) => {\r\n                            evt.preventDefault();\r\n                            // trigger resizestarted only once per resize\r\n                            if (!resizestarted) {\r\n                                document.dispatchEvent(jspanelresizestart);\r\n                                if (opts.start.length) {\r\n                                    jsPanel.processCallbacks(\r\n                                        self,\r\n                                        opts.start,\r\n                                        false,\r\n                                        {\r\n                                            width: startWidth,\r\n                                            height: startHeight,\r\n                                            left: startLeft,\r\n                                            top: startTop,\r\n                                        },\r\n                                        evt\r\n                                    );\r\n                                }\r\n                                self.front();\r\n                                if (elmtRect.height > startHeight + 5) {\r\n                                    self.status = 'normalized';\r\n                                    self.setControls(['.jsPanel-btn-normalize']);\r\n                                }\r\n                            }\r\n                            resizestarted = 1;\r\n                            // trigger resize permanently while resizing\r\n                            document.dispatchEvent(jspanelresize);\r\n\r\n                            // possibly updated while resizing\r\n                            let eventX = evt.touches ? evt.touches[0].clientX : evt.clientX,\r\n                                eventY = evt.touches ? evt.touches[0].clientY : evt.clientY,\r\n                                overlaps;\r\n\r\n                            if (resizeHandleClassList.contains('jsPanel-resizeit-e')) {\r\n                                //w = startWidth + (eventX - startX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((eventX - startX) * factor) / scaleFactor.x + wDif; // needs left adjust, for width and height adjust factor may be either 1 (no adjust) or 2\r\n                                if (w >= maxWidthEast) {\r\n                                    w = maxWidthEast;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (factor === 2) {\r\n                                    // factor works only with value of 2 when adjusting left or top\r\n                                    self.style.left = startLeft - (eventX - startX) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.height =\r\n                                        (w - borderRightWidth - borderLeftWidth) / aspectRatioContent +\r\n                                        hdrHeight +\r\n                                        ftrHeight +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-s')) {\r\n                                //h = startHeight + (eventY - startY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((eventY - startY) * factor) / scaleFactor.y + hDif; // needs top adjust\r\n                                if (h >= maxHeightSouth) {\r\n                                    h = maxHeightSouth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.top = startTop - (eventY - startY) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-w')) {\r\n                                //w = startWidth + (startX - eventX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((startX - eventX) * factor) / scaleFactor.x + wDif; // doesn't need left adjust\r\n                                if (w <= maxWidth && w >= minWidth && w <= maxWidthWest) {\r\n                                    self.style.left = startLeft + (eventX - startX) / scaleFactor.x + xDif + 'px';\r\n                                }\r\n                                if (w >= maxWidthWest) {\r\n                                    w = maxWidthWest;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.height =\r\n                                        (w - borderRightWidth - borderLeftWidth) / aspectRatioContent +\r\n                                        hdrHeight +\r\n                                        ftrHeight +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-n')) {\r\n                                //h = startHeight + (startY - eventY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((startY - eventY) * factor) / scaleFactor.y + hDif; // doesn't need top adjust\r\n                                if (h <= maxHeight && h >= minHeight && h <= maxHeightNorth) {\r\n                                    self.style.top = startTop + (eventY - startY) / scaleFactor.y + yDif + 'px';\r\n                                }\r\n                                if (h >= maxHeightNorth) {\r\n                                    h = maxHeightNorth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-se')) {\r\n                                //w = startWidth + (eventX - startX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((eventX - startX) * factor) / scaleFactor.x + wDif; // needs left adjust\r\n                                if (w >= maxWidthEast) {\r\n                                    w = maxWidthEast;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.left = startLeft - (eventX - startX) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio) {\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                }\r\n\r\n                                //h = startHeight + (eventY - startY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((eventY - startY) * factor) / scaleFactor.y + hDif; // needs top adjust\r\n                                if (h >= maxHeightSouth) {\r\n                                    h = maxHeightSouth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.top = startTop - (eventY - startY) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-sw')) {\r\n                                //h = startHeight + (eventY - startY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((eventY - startY) * factor) / scaleFactor.y + hDif; // needs top adjust\r\n                                if (h >= maxHeightSouth) {\r\n                                    h = maxHeightSouth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.top = startTop - (eventY - startY) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio) {\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                }\r\n\r\n                                //w = startWidth + (startX - eventX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((startX - eventX) * factor) / scaleFactor.x + wDif; // doesn't need left adjust\r\n                                if (w <= maxWidth && w >= minWidth && w <= maxWidthWest) {\r\n                                    self.style.left = startLeft + (eventX - startX) / scaleFactor.x + xDif + 'px';\r\n                                }\r\n                                if (w >= maxWidthWest) {\r\n                                    w = maxWidthWest;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.height =\r\n                                        (w - borderRightWidth - borderLeftWidth) / aspectRatioContent +\r\n                                        hdrHeight +\r\n                                        ftrHeight +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.bottom <= opts.containment[2]) {\r\n                                            self.style.height = maxHeightSouth + 'px';\r\n                                            self.style.width = maxHeightSouth * aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-ne')) {\r\n                                //w = startWidth + (eventX - startX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((eventX - startX) * factor) / scaleFactor.x + wDif; // needs left adjust\r\n                                if (w >= maxWidthEast) {\r\n                                    w = maxWidthEast;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (factor === 2) {\r\n                                    self.style.left = startLeft - (eventX - startX) + 'px';\r\n                                }\r\n                                if (opts.aspectRatio) {\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                }\r\n\r\n                                //h = startHeight + (startY - eventY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((startY - eventY) * factor) / scaleFactor.y + hDif; // doesn't need top adjust\r\n                                if (h <= maxHeight && h >= minHeight && h <= maxHeightNorth) {\r\n                                    self.style.top = startTop + (eventY - startY) / scaleFactor.y + yDif + 'px';\r\n                                }\r\n                                if (h >= maxHeightNorth) {\r\n                                    h = maxHeightNorth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatioContent + 'px';\r\n                                        }\r\n                                    }\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                    if (opts.containment) {\r\n                                        overlaps = self.overlaps(elmtParent);\r\n                                        if (overlaps.right <= opts.containment[1]) {\r\n                                            self.style.width = maxWidthEast + 'px';\r\n                                            self.style.height = maxWidthEast / aspectRatio + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } else if (resizeHandleClassList.contains('jsPanel-resizeit-nw')) {\r\n                                if (opts.aspectRatio && resizeHandleClassList.contains('jsPanel-resizeit-nw')) {\r\n                                    eventX = eventY * startRatio;\r\n                                    eventY = eventX / startRatio;\r\n                                }\r\n                                //w = startWidth + (startX - eventX) / scaleFactor.x + wDif;\r\n                                w = startWidth + ((startX - eventX) * factor) / scaleFactor.x + wDif; // doesn't need left adjust\r\n                                if (w <= maxWidth && w >= minWidth && w <= maxWidthWest) {\r\n                                    self.style.left = startLeft + (eventX - startX) / scaleFactor.x + xDif + 'px';\r\n                                }\r\n                                if (w >= maxWidthWest) {\r\n                                    w = maxWidthWest;\r\n                                }\r\n                                if (w >= maxWidth) {\r\n                                    w = maxWidth;\r\n                                }\r\n                                if (w <= minWidth) {\r\n                                    w = minWidth;\r\n                                }\r\n                                self.style.width = w + 'px';\r\n                                if (opts.aspectRatio) {\r\n                                    self.style.height = w / aspectRatio + 'px';\r\n                                }\r\n\r\n                                //h = startHeight + (startY - eventY) / scaleFactor.y + hDif;\r\n                                h = startHeight + ((startY - eventY) * factor) / scaleFactor.y + hDif; // doesn't need top adjust\r\n                                if (h <= maxHeight && h >= minHeight && h <= maxHeightNorth) {\r\n                                    self.style.top = startTop + (eventY - startY) / scaleFactor.y + yDif + 'px';\r\n                                }\r\n                                if (h >= maxHeightNorth) {\r\n                                    h = maxHeightNorth;\r\n                                }\r\n                                if (h >= maxHeight) {\r\n                                    h = maxHeight;\r\n                                }\r\n                                if (h <= minHeight) {\r\n                                    h = minHeight;\r\n                                }\r\n                                self.style.height = h + 'px';\r\n                                if (opts.aspectRatio === 'content') {\r\n                                    // if aspectRatio is true and set to 'content' the panels content section maintains its aspect ratio\r\n                                    self.style.width =\r\n                                        (h - hdrHeight - ftrHeight - borderTopWidth - borderBottomWidth) * aspectRatioContent +\r\n                                        borderTopWidth +\r\n                                        borderBottomWidth +\r\n                                        'px';\r\n                                } else if (opts.aspectRatio === 'panel') {\r\n                                    // otherwise the complete panel maintains its aspect ratio\r\n                                    self.style.width = h * aspectRatio + 'px';\r\n                                }\r\n                            }\r\n\r\n                            window.getSelection().removeAllRanges();\r\n\r\n                            // get current position and size values while resizing\r\n                            const styles = window.getComputedStyle(self),\r\n                                values = {\r\n                                    left: parseFloat(styles.left),\r\n                                    top: parseFloat(styles.top),\r\n                                    right: parseFloat(styles.right),\r\n                                    bottom: parseFloat(styles.bottom),\r\n                                    width: parseFloat(styles.width),\r\n                                    height: parseFloat(styles.height),\r\n                                };\r\n\r\n                            // callback while resizing\r\n                            if (opts.resize.length) {\r\n                                jsPanel.processCallbacks(self, opts.resize, false, values, evt);\r\n                            }\r\n                        };\r\n\r\n                        jsPanel.pointermove.forEach((event) => {\r\n                            document.addEventListener(event, resizePanel, false);\r\n                        });\r\n\r\n                        // remove resize handler when mouse leaves browser window (mouseleave doesn't work)\r\n                        window.addEventListener('mouseout', windowListener, false);\r\n                    });\r\n                });\r\n\r\n                jsPanel.pointerup.forEach(function (event) {\r\n                    document.addEventListener(event, pointerUpHandlerResizeit);\r\n                    window.removeEventListener('mouseout', windowListener);\r\n                });\r\n\r\n                // resizeit is initialized - now disable if set\r\n                if (options.disable) {\r\n                    handle.style.pointerEvents = 'none';\r\n                }\r\n            });\r\n\r\n            return self;\r\n        };\r\n        self.resizeit = (string) => {\r\n            const handles = self.querySelectorAll('.jsPanel-resizeit-handle');\r\n            if (string === 'disable') {\r\n                handles.forEach((handle) => {\r\n                    handle.style.pointerEvents = 'none';\r\n                });\r\n            } else {\r\n                handles.forEach((handle) => {\r\n                    handle.style.pointerEvents = 'auto';\r\n                });\r\n            }\r\n            return self;\r\n        };\r\n\r\n        self.getScaleFactor = () => {\r\n            const rect = self.getBoundingClientRect();\r\n            return {\r\n                x: rect.width / self.offsetWidth,\r\n                y: rect.height / self.offsetHeight,\r\n            };\r\n        };\r\n        self.calcSizeFactors = () => {\r\n            const styles = window.getComputedStyle(self);\r\n            if (options.container === 'window') {\r\n                self.hf = parseFloat(styles.left) / (window.innerWidth - parseFloat(styles.width));\r\n                self.vf = parseFloat(styles.top) / (window.innerHeight - parseFloat(styles.height));\r\n            } else {\r\n                if (self.parentElement) {\r\n                    let parentStyles = self.parentElement.getBoundingClientRect();\r\n                    self.hf = parseFloat(styles.left) / (parentStyles.width - parseFloat(styles.width));\r\n                    self.vf = parseFloat(styles.top) / (parentStyles.height - parseFloat(styles.height));\r\n                }\r\n            }\r\n        };\r\n        self.saveCurrentDimensions = (setStyleHeight = false) => {\r\n            const normData = window.getComputedStyle(self);\r\n            self.currentData.width = normData.width;\r\n            if (self.status === 'normalized') {\r\n                self.currentData.height = normData.height;\r\n            }\r\n            if (setStyleHeight) {\r\n                self.style.height = normData.height;\r\n            }\r\n        };\r\n        self.saveCurrentPosition = () => {\r\n            const normData = window.getComputedStyle(self);\r\n            self.currentData.left = normData.left;\r\n            self.currentData.top = normData.top;\r\n        };\r\n        self.reposition = (...params) => {\r\n            let pos = options.position,\r\n                updateCache = true,\r\n                callback;\r\n            params.forEach((value) => {\r\n                if (typeof value === 'string' || typeof value === 'object') {\r\n                    pos = value;\r\n                } else if (typeof value === 'boolean') {\r\n                    updateCache = value;\r\n                } else if (typeof value === 'function') {\r\n                    callback = value;\r\n                }\r\n            });\r\n\r\n            jsPanel.position(self, pos);\r\n\r\n            // check whether self has docked panels -> reposition docked panels as well\r\n            if (self.slaves && self.slaves.size > 0) {\r\n                self.slaves.forEach((slave) => {\r\n                    slave.reposition();\r\n                });\r\n            }\r\n\r\n            if (updateCache) {\r\n                self.saveCurrentPosition();\r\n            }\r\n            if (callback) {\r\n                callback.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.repositionOnSnap = (pos) => {\r\n            let offsetX = '0',\r\n                offsetY = '0',\r\n                margins = jsPanel.pOcontainment(options.dragit.containment);\r\n            // calculate offsets\r\n            if (options.dragit.snap.containment) {\r\n                switch (pos) {\r\n                    case 'left-top':\r\n                        offsetX = margins[3];\r\n                        offsetY = margins[0];\r\n                        break;\r\n                    case 'right-top':\r\n                        offsetX = -margins[1];\r\n                        offsetY = margins[0];\r\n                        break;\r\n                    case 'right-bottom':\r\n                        offsetX = -margins[1];\r\n                        offsetY = -margins[2];\r\n                        break;\r\n                    case 'left-bottom':\r\n                        offsetX = margins[3];\r\n                        offsetY = -margins[2];\r\n                        break;\r\n                    case 'center-top':\r\n                        offsetX = margins[3] / 2 - margins[1] / 2;\r\n                        offsetY = margins[0];\r\n                        break;\r\n                    case 'center-bottom':\r\n                        offsetX = margins[3] / 2 - margins[1] / 2;\r\n                        offsetY = -margins[2];\r\n                        break;\r\n                    case 'left-center':\r\n                        offsetX = margins[3];\r\n                        offsetY = margins[0] / 2 - margins[2] / 2;\r\n                        break;\r\n                    case 'right-center':\r\n                        offsetX = -margins[1];\r\n                        offsetY = margins[0] / 2 - margins[2] / 2;\r\n                        break;\r\n                }\r\n            }\r\n            /* jsPanel.position(self, `${pos} ${offsetX} ${offsetY}`);\r\n               For some reason I could not find the line above does not work (pos and offsets in one string), but only when\r\n               center-bottom is used with different settings for left/right margin.\r\n            */\r\n            jsPanel.position(self, pos);\r\n            jsPanel.setStyle(self, {\r\n                left: `calc(${self.style.left} + ${offsetX}px)`,\r\n                top: `calc(${self.style.top} + ${offsetY}px)`,\r\n            });\r\n        };\r\n        self.overlaps = (reference, elmtBox, event) => {\r\n            let panelRect = self.getBoundingClientRect(),\r\n                parentStyle = getComputedStyle(self.parentElement),\r\n                scaleFactor = self.getScaleFactor(),\r\n                parentBorderWidth = { top: 0, right: 0, bottom: 0, left: 0 },\r\n                referenceRect,\r\n                evtX = 0,\r\n                evtY = 0,\r\n                evtXparent = 0,\r\n                evtYparent = 0;\r\n\r\n            if (self.options.container !== 'window' && elmtBox === 'paddingbox') {\r\n                parentBorderWidth.top = parseInt(parentStyle.borderTopWidth, 10) * scaleFactor.y;\r\n                parentBorderWidth.right = parseInt(parentStyle.borderRightWidth, 10) * scaleFactor.x;\r\n                parentBorderWidth.bottom = parseInt(parentStyle.borderBottomWidth, 10) * scaleFactor.y;\r\n                parentBorderWidth.left = parseInt(parentStyle.borderLeftWidth, 10) * scaleFactor.x;\r\n            }\r\n\r\n            if (typeof reference === 'string') {\r\n                if (reference === 'window') {\r\n                    referenceRect = {\r\n                        left: 0,\r\n                        top: 0,\r\n                        right: window.innerWidth,\r\n                        bottom: window.innerHeight,\r\n                    };\r\n                } else if (reference === 'parent') {\r\n                    referenceRect = self.parentElement.getBoundingClientRect();\r\n                } else {\r\n                    referenceRect = document.querySelector(reference).getBoundingClientRect();\r\n                }\r\n            } else {\r\n                referenceRect = reference.getBoundingClientRect();\r\n            }\r\n\r\n            if (event) {\r\n                evtX = event.touches ? event.touches[0].clientX : event.clientX;\r\n                evtY = event.touches ? event.touches[0].clientY : event.clientY;\r\n                evtXparent = evtX - referenceRect.left;\r\n                evtYparent = evtY - referenceRect.top;\r\n            }\r\n\r\n            let overlapsX = panelRect.left < referenceRect.right && panelRect.right > referenceRect.left,\r\n                overlapsY = panelRect.top < referenceRect.bottom && panelRect.bottom > referenceRect.top,\r\n                overlaps = overlapsX && overlapsY;\r\n\r\n            return {\r\n                overlaps: overlaps,\r\n                top: panelRect.top - referenceRect.top - parentBorderWidth.top,\r\n                right: referenceRect.right - panelRect.right - parentBorderWidth.right,\r\n                bottom: referenceRect.bottom - panelRect.bottom - parentBorderWidth.bottom,\r\n                left: panelRect.left - referenceRect.left - parentBorderWidth.left,\r\n                parentBorderWidth: parentBorderWidth,\r\n                panelRect: panelRect,\r\n                referenceRect: referenceRect,\r\n                pointer: {\r\n                    // pointer coords relative to window and reference\r\n                    clientX: evtX,\r\n                    clientY: evtY,\r\n                    left: evtXparent - parentBorderWidth.left,\r\n                    top: evtYparent - parentBorderWidth.top,\r\n                    right: referenceRect.width - evtXparent - parentBorderWidth.right,\r\n                    bottom: referenceRect.height - evtYparent - parentBorderWidth.bottom,\r\n                },\r\n            };\r\n        };\r\n        self.setSize = () => {\r\n            if (options.panelSize) {\r\n                const values = jsPanel.pOsize(self, options.panelSize);\r\n                self.style.width = values.width;\r\n                self.style.height = values.height;\r\n            } else if (options.contentSize) {\r\n                const values = jsPanel.pOsize(self, options.contentSize);\r\n                self.content.style.width = values.width;\r\n                self.content.style.height = values.height;\r\n                self.style.width = values.width; // explicitly assign current width/height to panel\r\n                self.content.style.width = '100%';\r\n            }\r\n            return self;\r\n        };\r\n        self.resize = (...params) => {\r\n            let dimensions = window.getComputedStyle(self),\r\n                size = { width: dimensions.width, height: dimensions.height },\r\n                updateCache = true,\r\n                callback;\r\n            params.forEach((value) => {\r\n                if (typeof value === 'string') {\r\n                    size = value;\r\n                } else if (typeof value === 'object') {\r\n                    size = Object.assign(size, value);\r\n                } else if (typeof value === 'boolean') {\r\n                    updateCache = value;\r\n                } else if (typeof value === 'function') {\r\n                    callback = value;\r\n                }\r\n            });\r\n\r\n            let values = jsPanel.pOsize(self, size);\r\n            self.style.width = values.width;\r\n            self.style.height = values.height;\r\n\r\n            // check whether self has docked panels -> reposition docked panels\r\n            if (self.slaves && self.slaves.size > 0) {\r\n                self.slaves.forEach((slave) => {\r\n                    slave.reposition();\r\n                });\r\n            }\r\n\r\n            if (updateCache) {\r\n                self.saveCurrentDimensions();\r\n            }\r\n            self.status = 'normalized';\r\n            let smallifyBtn = self.controlbar.querySelector('.jsPanel-btn-smallify');\r\n            if (smallifyBtn) {\r\n                smallifyBtn.style.transform = 'rotate(0deg)';\r\n            }\r\n            if (callback) {\r\n                callback.call(self, self);\r\n            }\r\n            self.calcSizeFactors();\r\n            return self;\r\n        };\r\n        self.windowResizeHandler = (e) => {\r\n            if (e.target === window) {\r\n                // see https://bugs.jqueryui.com/ticket/7514\r\n                let status = self.status,\r\n                    onWindowResize = options.onwindowresize,\r\n                    left,\r\n                    top;\r\n                if (status === 'maximized' && onWindowResize) {\r\n                    self.maximize(false, true);\r\n                } else if (self.snapped && status !== 'minimized') {\r\n                    self.snap(self.snapped, true);\r\n                } else if (status === 'normalized' || status === 'smallified' || status === 'maximized') {\r\n                    if (typeof onWindowResize === 'function') {\r\n                        onWindowResize.call(self, e, self);\r\n                    } else {\r\n                        left = (window.innerWidth - self.offsetWidth) * self.hf;\r\n                        self.style.left = left <= 0 ? 0 : left + 'px';\r\n                        top = (window.innerHeight - self.offsetHeight) * self.vf;\r\n                        self.style.top = top <= 0 ? 0 : top + 'px';\r\n                    }\r\n                } else if (status === 'smallifiedmax' && onWindowResize) {\r\n                    self.maximize(false, true).smallify();\r\n                }\r\n\r\n                // check whether self has docked panels -> reposition docked panels as well\r\n                if (self.slaves && self.slaves.size > 0) {\r\n                    self.slaves.forEach((slave) => {\r\n                        slave.reposition();\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        self.setControls = (sel, cb) => {\r\n            self.header.querySelectorAll('.jsPanel-btn').forEach((item) => {\r\n                const btnClass = item.className.split('-'),\r\n                    btn = btnClass[btnClass.length - 1];\r\n                if (self.getAttribute(`data-btn${btn}`) !== 'hidden') {\r\n                    item.style.display = 'block';\r\n                }\r\n            });\r\n            sel.forEach((item) => {\r\n                const btn = self.controlbar.querySelector(item);\r\n                if (btn) {\r\n                    btn.style.display = 'none';\r\n                }\r\n            });\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setControlStatus = (ctrl, action = 'enable', cb) => {\r\n            const btn = self.controlbar.querySelector(`.jsPanel-btn-${ctrl}`);\r\n            switch (action) {\r\n                case 'disable':\r\n                    if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\r\n                        self.setAttribute(`data-btn${ctrl}`, 'disabled');\r\n                        btn.style.pointerEvents = 'none';\r\n                        btn.style.opacity = 0.4;\r\n                        btn.style.cursor = 'default';\r\n                    }\r\n                    break;\r\n                case 'hide':\r\n                    if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\r\n                        self.setAttribute(`data-btn${ctrl}`, 'hidden');\r\n                        btn.style.display = 'none';\r\n                    }\r\n                    break;\r\n                case 'show':\r\n                    if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\r\n                        self.setAttribute(`data-btn${ctrl}`, 'enabled');\r\n                        btn.style.display = 'block';\r\n                        btn.style.pointerEvents = 'auto';\r\n                        btn.style.opacity = 1;\r\n                        btn.style.cursor = 'pointer';\r\n                    }\r\n                    break;\r\n                case 'enable':\r\n                    if (self.getAttribute(`data-btn${ctrl}`) !== 'removed') {\r\n                        if (self.getAttribute(`data-btn${ctrl}`) === 'hidden') {\r\n                            btn.style.display = 'block';\r\n                        }\r\n                        self.setAttribute(`data-btn${ctrl}`, 'enabled');\r\n                        btn.style.pointerEvents = 'auto';\r\n                        btn.style.opacity = 1;\r\n                        btn.style.cursor = 'pointer';\r\n                    }\r\n                    break;\r\n                case 'remove':\r\n                    self.controlbar.removeChild(btn);\r\n                    self.setAttribute(`data-btn${ctrl}`, 'removed');\r\n                    break;\r\n            }\r\n\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setControlSize = (ctrlSize) => {\r\n            // does not work with Font Awesome webfont (only svg/js)\r\n            const size = ctrlSize.toLowerCase(),\r\n                icons = self.controlbar.querySelectorAll('.jsPanel-btn');\r\n            icons.forEach((icon) => {\r\n                ['jsPanel-btn-xl', 'jsPanel-btn-lg', 'jsPanel-btn-md', 'jsPanel-btn-sm', 'jsPanel-btn-xs'].forEach((item) => {\r\n                    icon.classList.remove(item);\r\n                });\r\n                icon.classList.add(`jsPanel-btn-${size}`);\r\n            });\r\n            // adjust font-size of title\r\n            if (size === 'xl') {\r\n                self.titlebar.style.fontSize = '1.5rem';\r\n            } else if (size === 'lg') {\r\n                self.titlebar.style.fontSize = '1.25rem';\r\n            } else if (size === 'md') {\r\n                self.titlebar.style.fontSize = '1.05rem';\r\n            } else if (size === 'sm') {\r\n                self.titlebar.style.fontSize = '.9rem';\r\n            } else if (size === 'xs') {\r\n                self.titlebar.style.fontSize = '.8rem';\r\n            }\r\n        };\r\n        self.setHeaderControls = (cb) => {\r\n            // add custom controls\r\n            if (self.options.headerControls.add) {\r\n                let customControls = self.options.headerControls.add;\r\n                if (!Array.isArray(customControls)) {\r\n                    // if options.addControls is not an array make it one\r\n                    customControls = [customControls];\r\n                }\r\n                customControls.forEach((ctrl) => {\r\n                    self.addControl(ctrl);\r\n                });\r\n            }\r\n            // get all control names including controls added with option.addControls\r\n            let controls = [],\r\n                ctrls = self.controlbar.querySelectorAll('.jsPanel-btn');\r\n            ctrls.forEach((ctrl) => {\r\n                let match = ctrl.className.match(/jsPanel-btn-[a-z0-9]{3,}/i),\r\n                    ctrlName = match[0].substring(12);\r\n                controls.push(ctrlName);\r\n            });\r\n            // normalize option headerControls and reset it accordingly\r\n            const option = jsPanel.pOheaderControls(options.headerControls);\r\n            options.headerControls = option;\r\n            // set status of controls\r\n            controls.forEach((item) => {\r\n                if (option[item]) {\r\n                    self.setControlStatus(item, option[item]);\r\n                }\r\n            });\r\n            // set size of controls\r\n            self.setControlSize(option.size);\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setHeaderLogo = (logo, cb) => {\r\n            let logos = [self.headerlogo],\r\n                minPanel = document.querySelector('#' + self.id + '-min');\r\n            if (minPanel) {\r\n                logos.push(minPanel.querySelector('.jsPanel-headerlogo'));\r\n            }\r\n\r\n            if (typeof logo === 'string') {\r\n                if (logo.substr(0, 1) !== '<') {\r\n                    // is assumed to be an img url\r\n                    logos.forEach((item) => {\r\n                        jsPanel.emptyNode(item);\r\n                        let img = document.createElement('img');\r\n                        img.src = logo;\r\n                        item.append(img);\r\n                    });\r\n                } else {\r\n                    logos.forEach((item) => {\r\n                        item.innerHTML = logo;\r\n                    });\r\n                }\r\n            } else {\r\n                // assumed to be a node object\r\n                logos.forEach((item) => {\r\n                    jsPanel.emptyNode(item);\r\n                    item.append(logo);\r\n                });\r\n            }\r\n            // images must not be draggable, otherwise dragit interactions locks\r\n            self.headerlogo.childNodes.forEach((logo) => {\r\n                if (logo.nodeName && logo.nodeName === 'IMG') {\r\n                    logo.setAttribute('draggable', 'false');\r\n                }\r\n            });\r\n\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setHeaderRemove = (cb) => {\r\n            self.removeChild(self.header);\r\n            self.content.classList.add('jsPanel-content-noheader');\r\n            ['close', 'maximize', 'normalize', 'minimize', 'smallify'].forEach((item) => {\r\n                self.setAttribute(`data-btn${item}`, 'removed');\r\n            });\r\n\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setHeaderTitle = (hdrTitle, cb) => {\r\n            let titles = [self.headertitle],\r\n                minPanel = document.querySelector('#' + self.id + '-min');\r\n            if (minPanel) {\r\n                titles.push(minPanel.querySelector('.jsPanel-title'));\r\n            }\r\n            if (typeof hdrTitle === 'string') {\r\n                titles.forEach((item) => {\r\n                    item.innerHTML = hdrTitle;\r\n                });\r\n            } else if (typeof hdrTitle === 'function') {\r\n                titles.forEach((item) => {\r\n                    jsPanel.emptyNode(item);\r\n                    item.innerHTML = hdrTitle();\r\n                });\r\n            } else {\r\n                // assumed to be a node object\r\n                titles.forEach((item) => {\r\n                    jsPanel.emptyNode(item);\r\n                    item.append(hdrTitle);\r\n                });\r\n            }\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.setIconfont = (font, panel = self, cb) => {\r\n            if (font) {\r\n                let classArray, textArray;\r\n                if (font === 'fa' || font === 'far' || font === 'fal' || font === 'fas' || font === 'fad') {\r\n                    classArray = [\r\n                        `${font} fa-window-close`,\r\n                        `${font} fa-window-maximize`,\r\n                        `${font} fa-window-restore`,\r\n                        `${font} fa-window-minimize`,\r\n                        `${font} fa-chevron-up`,\r\n                    ];\r\n                } else if (font === 'material-icons') {\r\n                    classArray = [font, font, font, font, font, font];\r\n                    textArray = ['close', 'fullscreen', 'fullscreen_exit', 'call_received', 'expand_less'];\r\n                } else if (Array.isArray(font)) {\r\n                    classArray = [\r\n                        `custom-control-icon ${font[4]}`,\r\n                        `custom-control-icon ${font[3]}`,\r\n                        `custom-control-icon ${font[2]}`,\r\n                        `custom-control-icon ${font[1]}`,\r\n                        `custom-control-icon ${font[0]}`,\r\n                    ];\r\n                } else if (font === 'bootstrap' || font === 'glyphicon') {\r\n                    classArray = [\r\n                        'glyphicon glyphicon-remove',\r\n                        'glyphicon glyphicon-fullscreen',\r\n                        'glyphicon glyphicon-resize-full',\r\n                        'glyphicon glyphicon-minus',\r\n                        'glyphicon glyphicon-chevron-up',\r\n                    ];\r\n                } else {\r\n                    return panel;\r\n                }\r\n                panel.querySelectorAll('.jsPanel-controlbar .jsPanel-btn').forEach((item) => {\r\n                    jsPanel.emptyNode(item).innerHTML = '<span></span>';\r\n                });\r\n                Array.prototype.slice\r\n                    .call(panel.querySelectorAll('.jsPanel-controlbar .jsPanel-btn > span'))\r\n                    .reverse()\r\n                    .forEach((item, i) => {\r\n                        item.className = classArray[i];\r\n                        if (font === 'material-icons') {\r\n                            item.textContent = textArray[i];\r\n                        }\r\n                    });\r\n            }\r\n            if (cb) {\r\n                cb.call(panel, panel);\r\n            }\r\n            return panel;\r\n        };\r\n        self.addToolbar = (place, tb, cb) => {\r\n            if (place === 'header') {\r\n                place = self.headertoolbar;\r\n            } else if (place === 'footer') {\r\n                place = self.footer;\r\n            }\r\n\r\n            if (typeof tb === 'string') {\r\n                place.innerHTML = tb;\r\n            } else if (Array.isArray(tb)) {\r\n                tb.forEach((item) => {\r\n                    if (typeof item === 'string') {\r\n                        place.innerHTML += item;\r\n                    } else {\r\n                        place.append(item);\r\n                    }\r\n                });\r\n            } else if (typeof tb === 'function') {\r\n                let tool = tb.call(self, self);\r\n                if (typeof tool === 'string') {\r\n                    place.innerHTML = tool;\r\n                } else {\r\n                    place.append(tool);\r\n                }\r\n            } else {\r\n                place.append(tb);\r\n            }\r\n\r\n            place.classList.add('active');\r\n            if (cb) {\r\n                cb.call(self, self);\r\n            }\r\n            return self;\r\n        };\r\n        self.addCloseControl = () => {\r\n            let ctrl = document.createElement('button'),\r\n                colorContent = self.content.style.color;\r\n            ctrl.classList.add('jsPanel-addCloseCtrl');\r\n            ctrl.innerHTML = jsPanel.icons.close;\r\n            ctrl.style.color = colorContent;\r\n            if (self.options.rtl) {\r\n                ctrl.classList.add('rtl');\r\n            }\r\n            self.appendChild(ctrl);\r\n            jsPanel.pointerup.forEach((evt) => {\r\n                ctrl.addEventListener(evt, (e) => {\r\n                    e.preventDefault();\r\n                    // disable close for all mouse buttons but left\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    self.close(null, true);\r\n                });\r\n            });\r\n            // pointerdown handler needed to prevent side effect with resize handles\r\n            jsPanel.pointerdown.forEach((evt) => {\r\n                ctrl.addEventListener(evt, (e) => {\r\n                    e.preventDefault();\r\n                });\r\n            });\r\n            return self;\r\n        };\r\n        self.addControl = (obj) => {\r\n            // obj.name - string, the name of the control, results for example in \"jsPanel-btn jsPanel-btn-menu\"\r\n            // obj.html - string, the html of the control to add, for example \"<span class='fa fa-menu'></span>\"\r\n            // obj.handler - function(panel, control), the event handler to assign to the new control\r\n            // obj.position - number, the position within the controlbar where the control is to be added\r\n            if (!obj.html) {\r\n                return self;\r\n            }\r\n            if (!obj.position) {\r\n                obj.position = 1;\r\n            }\r\n\r\n            const count = self.controlbar.querySelectorAll('.jsPanel-btn').length;\r\n            let control = document.createElement('button');\r\n            control.innerHTML = obj.html;\r\n            control.className = `jsPanel-btn jsPanel-btn-${obj.name} jsPanel-btn-${options.headerControls.size}`;\r\n            control.style.color = self.header.style.color;\r\n            if (obj.position > count) {\r\n                // new control is the first from right (default ltr text-direction) or the first from left (if option rtl is used)\r\n                self.controlbar.append(control);\r\n            } else {\r\n                self.controlbar.insertBefore(control, self.querySelector(`.jsPanel-controlbar .jsPanel-btn:nth-child(${obj.position})`));\r\n            }\r\n            const ariaLabel = obj.ariaLabel || obj.name;\r\n            if (ariaLabel) {\r\n                control.setAttribute('aria-label', ariaLabel);\r\n            }\r\n\r\n            jsPanel.pointerup.forEach((evt) => {\r\n                control.addEventListener(evt, (e) => {\r\n                    e.preventDefault();\r\n                    if (e.button && e.button > 0) {\r\n                        return false;\r\n                    }\r\n                    obj.handler.call(self, self, control);\r\n                });\r\n            });\r\n            if (obj.afterInsert) {\r\n                obj.afterInsert.call(control, control);\r\n            }\r\n            return self;\r\n        };\r\n        self.setRtl = () => {\r\n            [self.header, self.content, self.footer].forEach((item) => {\r\n                item.dir = 'rtl';\r\n                if (options.rtl.lang) {\r\n                    item.lang = options.rtl.lang;\r\n                }\r\n            });\r\n        };\r\n\r\n        // option.id\r\n        self.id = options.id;\r\n        // option.paneltype classname\r\n        self.classList.add('jsPanel-' + options.paneltype);\r\n\r\n        // set z-index and paneltype class\r\n        if (options.paneltype === 'standard') {\r\n            self.style.zIndex = this.zi.next();\r\n        }\r\n\r\n        // option.container\r\n        panelContainer.append(self);\r\n        self.front(false, false); // just to ensure iframe code in self.front() works for very first panel as well, second false prevents onfronted callbacks to be executed\r\n        // option.theme\r\n        self.setTheme(options.theme);\r\n\r\n        // option.boxShadow\r\n        if (options.boxShadow) {\r\n            self.classList.add(`jsPanel-depth-${options.boxShadow}`);\r\n        }\r\n\r\n        /* option.header, option.iconfont, option.headerControls, option.headerLogo, option.headerTitle */\r\n        if (options.header) {\r\n            if (options.headerLogo) {\r\n                self.setHeaderLogo(options.headerLogo);\r\n            }\r\n            self.setIconfont(options.iconfont);\r\n            self.setHeaderTitle(options.headerTitle);\r\n            self.setHeaderControls(); // now handles controls added with option addControls as well\r\n\r\n            // compatibility code for IE11 due to flex bug - https://caniuse.com/#feat=flexbox\r\n            if (jsPanel.isIE) {\r\n                let bars = [self.headerbar, self.controlbar];\r\n                switch (self.options.headerControls.size) {\r\n                    case 'md':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '34px';\r\n                        });\r\n                        break;\r\n                    case 'xs':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '26px';\r\n                        });\r\n                        break;\r\n                    case 'sm':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '30px';\r\n                        });\r\n                        break;\r\n                    case 'lg':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '38px';\r\n                        });\r\n                        break;\r\n                    case 'xl':\r\n                        bars.forEach((bar) => {\r\n                            bar.style.height = '42px';\r\n                        });\r\n                        break;\r\n                }\r\n            }\r\n            // end - - - - - - - - -\r\n\r\n            if (options.header === 'auto-show-hide') {\r\n                let boxShadow = 'jsPanel-depth-' + options.boxShadow;\r\n                self.header.style.opacity = 0;\r\n                self.style.backgroundColor = 'transparent';\r\n                this.remClass(self, boxShadow);\r\n                this.setClass(self.content, boxShadow);\r\n                self.header.addEventListener('mouseenter', () => {\r\n                    self.header.style.opacity = 1;\r\n                    jsPanel.setClass(self, boxShadow);\r\n                    jsPanel.remClass(self.content, boxShadow);\r\n                });\r\n                self.header.addEventListener('mouseleave', () => {\r\n                    self.header.style.opacity = 0;\r\n                    jsPanel.remClass(self, boxShadow);\r\n                    jsPanel.setClass(self.content, boxShadow);\r\n                });\r\n            }\r\n        } else {\r\n            self.setHeaderRemove();\r\n            if (options.addCloseControl) {\r\n                self.addCloseControl();\r\n            }\r\n        }\r\n\r\n        // option.headerToolbar\r\n        if (options.headerToolbar) {\r\n            self.addToolbar(self.headertoolbar, options.headerToolbar);\r\n        }\r\n        // option.footerToolbar\r\n        if (options.footerToolbar) {\r\n            self.addToolbar(self.footer, options.footerToolbar);\r\n        }\r\n\r\n        // option.border\r\n        if (options.border) {\r\n            self.setBorder(options.border);\r\n        }\r\n        // option.borderRadius\r\n        if (options.borderRadius) {\r\n            self.setBorderRadius(options.borderRadius);\r\n        }\r\n\r\n        // option.content\r\n        if (options.content) {\r\n            if (typeof options.content === 'function') {\r\n                options.content.call(self, self);\r\n            } else if (typeof options.content === 'string') {\r\n                self.content.innerHTML = options.content;\r\n            } else {\r\n                self.content.append(options.content);\r\n            }\r\n        }\r\n\r\n        // option.contentAjax\r\n        if (options.contentAjax) {\r\n            this.ajax(options.contentAjax, self);\r\n        }\r\n\r\n        // option.contentFetch\r\n        if (options.contentFetch) {\r\n            this.fetch(options.contentFetch, self);\r\n        }\r\n\r\n        // option.contentOverflow\r\n        if (options.contentOverflow) {\r\n            const value = options.contentOverflow.split(' ');\r\n            if (value.length === 1) {\r\n                self.content.style.overflow = value[0];\r\n            } else if (value.length === 2) {\r\n                self.content.style.overflowX = value[0];\r\n                self.content.style.overflowY = value[1];\r\n            }\r\n        }\r\n\r\n        // option.autoclose -- should be before option.size\r\n        if (options.autoclose) {\r\n            if (typeof options.autoclose === 'number') {\r\n                options.autoclose = { time: options.autoclose + 'ms' };\r\n            } else if (typeof options.autoclose === 'string') {\r\n                options.autoclose = { time: options.autoclose };\r\n            }\r\n            let autoclose = Object.assign({}, jsPanel.defaultAutocloseConfig, options.autoclose);\r\n            if (autoclose.time && typeof autoclose.time === 'number') {\r\n                autoclose.time += 'ms';\r\n            }\r\n            let slider = self.progressbar.querySelector('div');\r\n            slider.addEventListener('animationend', (e) => {\r\n                e.stopPropagation();\r\n                self.progressbar.classList.remove('active');\r\n                self.close();\r\n            });\r\n            if (autoclose.progressbar) {\r\n                self.progressbar.classList.add('active');\r\n                if (autoclose.background) {\r\n                    if (jsPanel.themes.indexOf(autoclose.background) > -1) {\r\n                        self.progressbar.classList.add(autoclose.background + '-bg');\r\n                    } else if (jsPanel.colorNames[autoclose.background]) {\r\n                        self.progressbar.style.background = '#' + jsPanel.colorNames[autoclose.background];\r\n                    } else {\r\n                        self.progressbar.style.background = autoclose.background;\r\n                    }\r\n                } else {\r\n                    self.progressbar.classList.add('success-bg'); // default background for progressbar\r\n                }\r\n            }\r\n            slider.style.animation = `${autoclose.time} progressbar`;\r\n        }\r\n\r\n        // option.rtl\r\n        if (options.rtl) {\r\n            self.setRtl();\r\n        }\r\n        // option.size -- should be after option.theme\r\n        self.setSize();\r\n\r\n        // option.position\r\n        self.status = 'normalized';\r\n        // if option.position evaluates to false panel will not be positioned at all\r\n        if (options.position) {\r\n            this.position(self, options.position);\r\n        } else {\r\n            self.style.opacity = 1;\r\n        }\r\n        document.dispatchEvent(jspanelnormalized);\r\n        self.calcSizeFactors();\r\n\r\n        // option.animateIn\r\n        if (options.animateIn) {\r\n            // remove class again on animationend, otherwise opacity doesn't change when panel is dragged\r\n            self.addEventListener('animationend', () => {\r\n                this.remClass(self, options.animateIn);\r\n            });\r\n            this.setClass(self, options.animateIn);\r\n        }\r\n\r\n        // option.dragit AND option.resizeit AND option.syncMargins\r\n        if (options.syncMargins) {\r\n            let containment = this.pOcontainment(options.maximizedMargin);\r\n            if (options.dragit) {\r\n                options.dragit.containment = containment;\r\n                if (options.dragit.snap === true) {\r\n                    // options.dragit.snap must be object in order to set options.dragit.snap.containment = true;\r\n                    options.dragit.snap = jsPanel.defaultSnapConfig;\r\n                    options.dragit.snap.containment = true;\r\n                } else if (options.dragit.snap) {\r\n                    options.dragit.snap.containment = true;\r\n                }\r\n            }\r\n            if (options.resizeit) {\r\n                options.resizeit.containment = containment;\r\n            }\r\n        }\r\n\r\n        if (options.dragit) {\r\n            // callbacks must be array of function(s) in order to be able to dynamically add/remove callbacks (for example in extensions)\r\n            ['start', 'drag', 'stop'].forEach((item) => {\r\n                if (options.dragit[item]) {\r\n                    if (typeof options.dragit[item] === 'function') {\r\n                        options.dragit[item] = [options.dragit[item]];\r\n                    }\r\n                } else {\r\n                    options.dragit[item] = [];\r\n                }\r\n            });\r\n            self.drag(options.dragit);\r\n            // do not use self.options.dragit.stop.push() !!!\r\n            self.addEventListener(\r\n                'jspaneldragstop',\r\n                (e) => {\r\n                    if (e.panel === self) {\r\n                        self.calcSizeFactors();\r\n                    }\r\n                },\r\n                false\r\n            );\r\n        } else {\r\n            self.titlebar.style.cursor = 'default';\r\n        }\r\n\r\n        if (options.resizeit) {\r\n            // callbacks must be array of function(s) in order to be able to dynamically add/remove callbacks (for example in extensions)\r\n            ['start', 'resize', 'stop'].forEach((item) => {\r\n                if (options.resizeit[item]) {\r\n                    if (typeof options.resizeit[item] === 'function') {\r\n                        options.resizeit[item] = [options.resizeit[item]];\r\n                    }\r\n                } else {\r\n                    options.resizeit[item] = [];\r\n                }\r\n            });\r\n            self.sizeit(options.resizeit);\r\n            let startstatus = void 0;\r\n            // do not use self.options.resizeit.start.push() !!!\r\n            self.addEventListener(\r\n                'jspanelresizestart',\r\n                (e) => {\r\n                    if (e.panel === self) {\r\n                        startstatus = self.status;\r\n                    }\r\n                },\r\n                false\r\n            );\r\n            // do not use self.options.resizeit.stop.push() !!!\r\n            self.addEventListener(\r\n                'jspanelresizestop',\r\n                (e) => {\r\n                    if (e.panel === self) {\r\n                        if (\r\n                            (startstatus === 'smallified' || startstatus === 'smallifiedmax' || startstatus === 'maximized') &&\r\n                            parseFloat(self.style.height) > parseFloat(window.getComputedStyle(self.header).height)\r\n                        ) {\r\n                            self.setControls(['.jsPanel-btn-normalize']);\r\n                            self.status = 'normalized';\r\n                            document.dispatchEvent(jspanelnormalized);\r\n                            document.dispatchEvent(jspanelstatuschange);\r\n                            if (options.onstatuschange) {\r\n                                jsPanel.processCallbacks(self, options.onstatuschange, 'every');\r\n                            }\r\n                            self.calcSizeFactors();\r\n                        }\r\n                    }\r\n                },\r\n                false\r\n            );\r\n        }\r\n\r\n        // initialize self.currentData - must be after options position & size\r\n        self.saveCurrentDimensions(true);\r\n        self.saveCurrentPosition();\r\n\r\n        // option.setStatus\r\n        if (options.setStatus) {\r\n            if (options.setStatus === 'smallifiedmax') {\r\n                self.maximize().smallify();\r\n            } else if (options.setStatus === 'smallified') {\r\n                self.smallify();\r\n            } else {\r\n                // remove the char 'd' from end of string to get function name to call\r\n                self[options.setStatus.substr(0, options.setStatus.length - 1)]();\r\n            }\r\n        }\r\n\r\n        // front panel on mousedown\r\n        this.pointerdown.forEach((item) => {\r\n            self.addEventListener(\r\n                item,\r\n                (e) => {\r\n                    if (!e.target.closest('.jsPanel-btn-close') && !e.target.closest('.jsPanel-btn-minimize') && options.paneltype === 'standard') {\r\n                        self.front();\r\n                    }\r\n                },\r\n                false\r\n            );\r\n        });\r\n\r\n        // option onwindowresize\r\n        if (options.onwindowresize) {\r\n            // if container is 'window'\r\n            if (self.options.container === 'window') {\r\n                window.addEventListener('resize', self.windowResizeHandler, false);\r\n            }\r\n        }\r\n\r\n        // option onparentresize\r\n        if (options.onparentresize) {\r\n            let onResize = options.onparentresize,\r\n                parentPanel = self.isChildpanel();\r\n            if (parentPanel) {\r\n                const parentContainer = parentPanel.content;\r\n                let parentContainerSize = [];\r\n                self.parentResizeHandler = (e) => {\r\n                    // if resized panel is the parent panel of the one whose option onContentResize is set to true\r\n                    if (e.panel === parentPanel) {\r\n                        // get dimensions of parent panel's content section\r\n                        parentContainerSize[0] = parentContainer.offsetWidth;\r\n                        parentContainerSize[1] = parentContainer.offsetHeight;\r\n                        let status = self.status,\r\n                            left,\r\n                            top;\r\n                        if (status === 'maximized' && onResize) {\r\n                            self.maximize();\r\n                        } else if (self.snapped && status !== 'minimized') {\r\n                            self.snap(self.snapped, true);\r\n                        } else if (status === 'normalized' || status === 'smallified' || status === 'maximized') {\r\n                            if (typeof onResize === 'function') {\r\n                                onResize.call(self, self, {\r\n                                    width: parentContainerSize[0],\r\n                                    height: parentContainerSize[1],\r\n                                });\r\n                            } else {\r\n                                left = (parentContainerSize[0] - self.offsetWidth) * self.hf;\r\n                                self.style.left = left <= 0 ? 0 : left + 'px';\r\n                                top = (parentContainerSize[1] - self.offsetHeight) * self.vf;\r\n                                self.style.top = top <= 0 ? 0 : top + 'px';\r\n                            }\r\n                        } else if (status === 'smallifiedmax' && onResize) {\r\n                            self.maximize().smallify();\r\n                        }\r\n                    }\r\n                };\r\n                document.addEventListener('jspanelresize', self.parentResizeHandler, false);\r\n            }\r\n        }\r\n\r\n        // global callbacks\r\n        if (this.globalCallbacks) {\r\n            if (Array.isArray(this.globalCallbacks)) {\r\n                this.globalCallbacks.forEach((item) => {\r\n                    item.call(self, self);\r\n                });\r\n            } else {\r\n                this.globalCallbacks.call(self, self);\r\n            }\r\n        }\r\n\r\n        // option.callback\r\n        if (options.callback) {\r\n            if (Array.isArray(options.callback)) {\r\n                options.callback.forEach((item) => {\r\n                    item.call(self, self);\r\n                });\r\n            } else {\r\n                options.callback.call(self, self);\r\n            }\r\n        }\r\n\r\n        // constructor callback\r\n        if (cb) {\r\n            cb.call(self, self);\r\n        }\r\n\r\n        document.dispatchEvent(jspanelloaded);\r\n        return self;\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}