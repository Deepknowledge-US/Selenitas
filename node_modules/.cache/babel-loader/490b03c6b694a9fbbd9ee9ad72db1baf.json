{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\n\nimport * as React from 'react';\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nimport useCacheOptions from './hooks/useCacheOptions';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'tabIndex'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        filterSort = props.filterSort,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        tabIndex = props.tabIndex,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        direction = props.direction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        onClear = props.onClear,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"tabIndex\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"onClear\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = useRef(null);\n    var triggerRef = useRef(null);\n    var selectorRef = useRef(null);\n    var listRef = useRef(null);\n    var tokenWithEnter = useMemo(function () {\n      return (tokenSeparators || []).some(function (tokenSeparator) {\n        return ['\\n', '\\r\\n'].includes(tokenSeparator);\n      });\n    }, [tokenSeparators]);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        innerId = _useState2[0],\n        setInnerId = _useState2[1];\n\n    useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ======================== Mobile ========================\n\n    var _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mobile = _useState4[0],\n        setMobile = _useState4[1];\n\n    useEffect(function () {\n      // Only update on the client side\n      setMobile(isMobile());\n    }, []); // ============================== Ref ===============================\n\n    var selectorDomRef = useRef(null);\n    React.useImperativeHandle(ref, function () {\n      var _selectorRef$current, _selectorRef$current2, _listRef$current;\n\n      return {\n        focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n        blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n        scrollTo: (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo\n      };\n    }); // ============================= Value ==============================\n\n    var _useMergedState = useMergedState(defaultValue, {\n      value: value\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        mergedValue = _useMergedState2[0],\n        setMergedValue = _useMergedState2[1];\n    /** Unique raw values */\n\n\n    var _useMemo = useMemo(function () {\n      return toInnerValue(mergedValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [mergedValue, mergedLabelInValue]),\n        _useMemo2 = _slicedToArray(_useMemo, 2),\n        mergedRawValue = _useMemo2[0],\n        mergedValueMap = _useMemo2[1];\n    /** We cache a set of raw values to speed up check */\n\n\n    var rawValues = useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        activeValue = _useState6[0],\n        setActiveValue = _useState6[1];\n\n    var _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        innerSearchValue = _useState8[0],\n        setInnerSearchValue = _useState8[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && mergedValue !== undefined) {\n      mergedSearchValue = mergedValue;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, mergedValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, mergedValue]);\n    var mergedFlattenOptions = useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]);\n    var getValueOption = useCacheOptions(mergedFlattenOptions); // Display options for OptionList\n\n    var displayOptions = useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt[optionFilterProp] !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      if (filterSort && Array.isArray(filteredOptions)) {\n        return _toConsumableArray(filteredOptions).sort(filterSort);\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch, filterSort]);\n    var displayFlattenOptions = useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = useMemo(function () {\n      var tmpValues = mergedRawValue.map(function (val) {\n        var valueOptions = getValueOption([val]);\n        var displayValue = getLabeledValue(val, {\n          options: valueOptions,\n          prevValueMap: mergedValueMap,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, valueOptions)\n        });\n      });\n\n      if (!mode && tmpValues.length === 1 && tmpValues[0].value === null && tmpValues[0].label === null) {\n        return [];\n      }\n\n      return tmpValues;\n    }, [mergedValue, mergedOptions, mode]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var newValueOption = getValueOption([newValue]);\n      var outOption = findValueOption([newValue], newValueOption)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: newValueOption,\n          prevValueMap: mergedValueMap,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    }; // We need cache options here in case user update the option list\n\n\n    var _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        prevValueOptions = _useState10[0],\n        setPrevValueOptions = _useState10[1];\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var newRawValuesOptions = getValueOption(newRawValues);\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: newRawValuesOptions,\n        getLabeledValue: getLabeledValue,\n        prevValueMap: mergedValueMap,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, newRawValuesOptions, {\n          prevValueOptions: prevValueOptions\n        }); // We will cache option in case it removed by ajax\n\n        setPrevValueOptions(outOptions.map(function (option, index) {\n          var clone = _objectSpread({}, option);\n\n          Object.defineProperty(clone, '_INTERNAL_OPTION_VALUE_', {\n            get: function get() {\n              return newRawValues[index];\n            }\n          });\n          return clone;\n        }));\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setMergedValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState3 = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n        innerOpen = _useMergedState4[0],\n        setInnerOpen = _useMergedState4[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText, fromTyping, isCompositing) {\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Only triggered when menu is closed & mode is tags\n    // If menu is open, OptionList will take charge\n    // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n    var onSearchSubmit = function onSearchSubmit(searchText) {\n      // prevent empty tags from appearing when you click the Enter button\n      if (!searchText || !searchText.trim()) {\n        return;\n      }\n\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [searchText])));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true, 'input');\n      });\n      setInnerSearchValue('');\n    }; // Close dropdown when disabled change\n\n\n    useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false, false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which;\n\n      if (which === KeyCode.ENTER) {\n        // Do not submit form when type in the input\n        if (mode !== 'combobox') {\n          event.preventDefault();\n        } // We only manage open state here, close logic should handle by list component\n\n\n        if (!mergedOpen) {\n          onToggleOpen(true);\n        }\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current3;\n\n        (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false, false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var activeTimeoutIds = [];\n    useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n\n          cancelSetMockFocused();\n\n          if (!mobile && !popupElement.contains(document.activeElement)) {\n            var _selectorRef$current3;\n\n            (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        accessibilityIndex = _useState12[0],\n        setAccessibilityIndex = _useState12[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          _ref3$source = _ref3.source,\n          source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        containerWidth = _useState14[0],\n        setContainerWidth = _useState14[1];\n\n    var _useState15 = useState({}),\n        _useState16 = _slicedToArray(_useState15, 2),\n        forceUpdate = _useState16[1]; // We need force update here since popup dom is render async\n\n\n    function onPopupMouseEnter() {\n      forceUpdate({});\n    }\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = /*#__PURE__*/React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n      onMouseEnter: onPopupMouseEnter\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      if (onClear) {\n        onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false, false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = /*#__PURE__*/React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), /*#__PURE__*/React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSearchSubmit: onSearchSubmit,\n      onSelect: onInternalSelectionSelect,\n      tokenWithEnter: tokenWithEnter\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = /*#__PURE__*/React.forwardRef(Select);\n  return RefSelect;\n}","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/node_modules/rc-select/es/generate.js"],"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_slicedToArray","_objectWithoutProperties","React","useState","useRef","useEffect","useMemo","KeyCode","isMobile","classNames","useMergedState","Selector","SelectTrigger","INTERNAL_PROPS_MARK","toInnerValue","toOuterValues","removeLastEnabledValue","getUUID","TransBtn","useLock","useDelayReset","useLayoutEffect","getSeparatedContent","useSelectTriggerControl","useCacheDisplayValue","useCacheOptions","DEFAULT_OMIT_PROPS","generateSelector","config","defaultPrefixCls","prefixCls","OptionList","components","optionList","convertChildrenToData","flattenOptions","getLabeledValue","filterOptions","isValueDisabled","findValueOption","warningProps","fillOptionsWithMissingValue","omitDOMProps","Select","props","ref","_classNames2","_props$prefixCls","className","id","open","defaultOpen","options","children","mode","value","defaultValue","labelInValue","showSearch","inputValue","searchValue","filterOption","filterSort","_props$optionFilterPr","optionFilterProp","_props$autoClearSearc","autoClearSearchValue","onSearch","allowClear","clearIcon","showArrow","inputIcon","menuItemSelectedIcon","disabled","loading","defaultActiveFirstOption","_props$notFoundConten","notFoundContent","optionLabelProp","backfill","tabIndex","getInputElement","getPopupContainer","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","animation","transitionName","virtual","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","_props$showAction","showAction","direction","tokenSeparators","tagRender","onPopupScroll","onDropdownVisibleChange","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","onChange","onSelect","onDeselect","onClear","_props$internalProps","internalProps","restProps","useInternalProps","mark","domProps","forEach","prop","containerRef","triggerRef","selectorRef","listRef","tokenWithEnter","some","tokenSeparator","includes","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","_useState","_useState2","innerId","setInnerId","concat","mergedId","mergedOptionLabelProp","undefined","mergedLabelInValue","isMultiple","mergedShowSearch","_useState3","_useState4","mobile","setMobile","selectorDomRef","useImperativeHandle","_selectorRef$current","_selectorRef$current2","_listRef$current","focus","current","blur","scrollTo","_useMergedState","_useMergedState2","mergedValue","setMergedValue","_useMemo","combobox","_useMemo2","mergedRawValue","mergedValueMap","rawValues","Set","_useState5","_useState6","activeValue","setActiveValue","_useState7","_useState8","innerSearchValue","setInnerSearchValue","mergedSearchValue","mergedOptions","newOptions","mergedFlattenOptions","getValueOption","displayOptions","filteredOptions","every","opt","unshift","label","key","Array","isArray","sort","displayFlattenOptions","displayValues","tmpValues","map","val","valueOptions","displayValue","prevValueMap","length","triggerSelect","newValue","isSelect","source","newValueOption","outOption","skipTriggerSelect","selectValue","onRawSelect","onRawDeselect","_useState9","_useState10","prevValueOptions","setPrevValueOptions","triggerChange","newRawValues","skipTriggerChange","newRawValuesOptions","outValues","from","outValue","outOptions","option","index","clone","Object","defineProperty","get","onInternalSelect","_ref","selected","newRawValue","add","delete","String","onInternalOptionSelect","info","onInternalSelectionSelect","customizeInputElement","_useMergedState3","_useMergedState4","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","newOpen","nextOpen","getPopupElement","triggerSearch","searchText","fromTyping","isCompositing","ret","newSearchText","patchLabels","patchRawValues","item","find","_ref2","data","filter","onSearchSubmit","trim","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","preventDefault","BACKSPACE","removeInfo","removedValue","values","_len","arguments","rest","_key","_listRef$current2","apply","onInternalKeyUp","_len2","_key2","_listRef$current3","focusRef","onContainerFocus","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","splice","onInternalMouseDown","target","popupElement","contains","setTimeout","indexOf","document","activeElement","_selectorRef$current3","push","_len3","restArgs","_key3","_useState11","_useState12","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref3","_ref3$source","_useState13","_useState14","containerWidth","setContainerWidth","_useState15","_useState16","forceUpdate","onPopupMouseEnter","newWidth","Math","ceil","offsetWidth","popupNode","createElement","childrenAsData","multiple","height","itemHeight","onScroll","onMouseEnter","clearNode","onClearMouseDown","customizeIcon","mergedShowArrow","arrowNode","customizeIconProps","focused","process","env","NODE_ENV","mergedClassName","style","width","display","overflow","opacity","join","visible","empty","getTriggerDOMNode","domRef","inputElement","RefSelect","forwardRef"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\nimport * as React from 'react';\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nimport useCacheOptions from './hooks/useCacheOptions';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'tabIndex'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        filterSort = props.filterSort,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        tabIndex = props.tabIndex,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        direction = props.direction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        onClear = props.onClear,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"tabIndex\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"onClear\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = useRef(null);\n    var triggerRef = useRef(null);\n    var selectorRef = useRef(null);\n    var listRef = useRef(null);\n    var tokenWithEnter = useMemo(function () {\n      return (tokenSeparators || []).some(function (tokenSeparator) {\n        return ['\\n', '\\r\\n'].includes(tokenSeparator);\n      });\n    }, [tokenSeparators]);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        innerId = _useState2[0],\n        setInnerId = _useState2[1];\n\n    useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ======================== Mobile ========================\n\n    var _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mobile = _useState4[0],\n        setMobile = _useState4[1];\n\n    useEffect(function () {\n      // Only update on the client side\n      setMobile(isMobile());\n    }, []); // ============================== Ref ===============================\n\n    var selectorDomRef = useRef(null);\n    React.useImperativeHandle(ref, function () {\n      var _selectorRef$current, _selectorRef$current2, _listRef$current;\n\n      return {\n        focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n        blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n        scrollTo: (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo\n      };\n    }); // ============================= Value ==============================\n\n    var _useMergedState = useMergedState(defaultValue, {\n      value: value\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        mergedValue = _useMergedState2[0],\n        setMergedValue = _useMergedState2[1];\n    /** Unique raw values */\n\n\n    var _useMemo = useMemo(function () {\n      return toInnerValue(mergedValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [mergedValue, mergedLabelInValue]),\n        _useMemo2 = _slicedToArray(_useMemo, 2),\n        mergedRawValue = _useMemo2[0],\n        mergedValueMap = _useMemo2[1];\n    /** We cache a set of raw values to speed up check */\n\n\n    var rawValues = useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        activeValue = _useState6[0],\n        setActiveValue = _useState6[1];\n\n    var _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        innerSearchValue = _useState8[0],\n        setInnerSearchValue = _useState8[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && mergedValue !== undefined) {\n      mergedSearchValue = mergedValue;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, mergedValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, mergedValue]);\n    var mergedFlattenOptions = useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]);\n    var getValueOption = useCacheOptions(mergedFlattenOptions); // Display options for OptionList\n\n    var displayOptions = useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt[optionFilterProp] !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      if (filterSort && Array.isArray(filteredOptions)) {\n        return _toConsumableArray(filteredOptions).sort(filterSort);\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch, filterSort]);\n    var displayFlattenOptions = useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = useMemo(function () {\n      var tmpValues = mergedRawValue.map(function (val) {\n        var valueOptions = getValueOption([val]);\n        var displayValue = getLabeledValue(val, {\n          options: valueOptions,\n          prevValueMap: mergedValueMap,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, valueOptions)\n        });\n      });\n\n      if (!mode && tmpValues.length === 1 && tmpValues[0].value === null && tmpValues[0].label === null) {\n        return [];\n      }\n\n      return tmpValues;\n    }, [mergedValue, mergedOptions, mode]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var newValueOption = getValueOption([newValue]);\n      var outOption = findValueOption([newValue], newValueOption)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: newValueOption,\n          prevValueMap: mergedValueMap,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    }; // We need cache options here in case user update the option list\n\n\n    var _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        prevValueOptions = _useState10[0],\n        setPrevValueOptions = _useState10[1];\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var newRawValuesOptions = getValueOption(newRawValues);\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: newRawValuesOptions,\n        getLabeledValue: getLabeledValue,\n        prevValueMap: mergedValueMap,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, newRawValuesOptions, {\n          prevValueOptions: prevValueOptions\n        }); // We will cache option in case it removed by ajax\n\n        setPrevValueOptions(outOptions.map(function (option, index) {\n          var clone = _objectSpread({}, option);\n\n          Object.defineProperty(clone, '_INTERNAL_OPTION_VALUE_', {\n            get: function get() {\n              return newRawValues[index];\n            }\n          });\n          return clone;\n        }));\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setMergedValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState3 = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n        innerOpen = _useMergedState4[0],\n        setInnerOpen = _useMergedState4[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText, fromTyping, isCompositing) {\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Only triggered when menu is closed & mode is tags\n    // If menu is open, OptionList will take charge\n    // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n    var onSearchSubmit = function onSearchSubmit(searchText) {\n      // prevent empty tags from appearing when you click the Enter button\n      if (!searchText || !searchText.trim()) {\n        return;\n      }\n\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [searchText])));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true, 'input');\n      });\n      setInnerSearchValue('');\n    }; // Close dropdown when disabled change\n\n\n    useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false, false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which;\n\n      if (which === KeyCode.ENTER) {\n        // Do not submit form when type in the input\n        if (mode !== 'combobox') {\n          event.preventDefault();\n        } // We only manage open state here, close logic should handle by list component\n\n\n        if (!mergedOpen) {\n          onToggleOpen(true);\n        }\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current3;\n\n        (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false, false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var activeTimeoutIds = [];\n    useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n\n          cancelSetMockFocused();\n\n          if (!mobile && !popupElement.contains(document.activeElement)) {\n            var _selectorRef$current3;\n\n            (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        accessibilityIndex = _useState12[0],\n        setAccessibilityIndex = _useState12[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          _ref3$source = _ref3.source,\n          source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        containerWidth = _useState14[0],\n        setContainerWidth = _useState14[1];\n\n    var _useState15 = useState({}),\n        _useState16 = _slicedToArray(_useState15, 2),\n        forceUpdate = _useState16[1]; // We need force update here since popup dom is render async\n\n\n    function onPopupMouseEnter() {\n      forceUpdate({});\n    }\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = /*#__PURE__*/React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n      onMouseEnter: onPopupMouseEnter\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      if (onClear) {\n        onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false, false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = /*#__PURE__*/React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), /*#__PURE__*/React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSearchSubmit: onSearchSubmit,\n      onSelect: onInternalSelectionSelect,\n      tokenWithEnter: tokenWithEnter\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = /*#__PURE__*/React.forwardRef(Select);\n  return RefSelect;\n}"]},"metadata":{},"sourceType":"module"}