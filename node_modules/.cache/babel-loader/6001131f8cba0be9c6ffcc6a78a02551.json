{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport copy from 'copy-to-clipboard';\nimport omit from \"rc-util/es/omit\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport ResizeObserver from 'rc-resize-observer';\nimport { configConsumerProps, ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport devWarning from '../_util/devWarning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport { isStyleSupport } from '../_util/styleChecker';\nimport Tooltip from '../tooltip';\nimport Typography from './Typography';\nimport Editable from './Editable';\nimport measure from './util';\nvar isLineClampSupport = isStyleSupport('webkitLineClamp');\nvar isTextOverflowSupport = isStyleSupport('textOverflow');\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref[\"delete\"],\n      strong = _ref.strong,\n      keyboard = _ref.keyboard;\n  var currentContent = content;\n\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  return currentContent;\n}\n\nvar ELLIPSIS_STR = '...';\n\nvar Base = /*#__PURE__*/function (_React$Component) {\n  _inherits(Base, _React$Component);\n\n  var _super = _createSuper(Base);\n\n  function Base() {\n    var _this;\n\n    _classCallCheck(this, Base);\n\n    _this = _super.apply(this, arguments);\n    _this.contentRef = /*#__PURE__*/React.createRef();\n    _this.state = {\n      edit: false,\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false\n    };\n\n    _this.getPrefixCls = function () {\n      var customizePrefixCls = _this.props.prefixCls;\n      var getPrefixCls = _this.context.getPrefixCls;\n      return getPrefixCls('typography', customizePrefixCls);\n    }; // =============== Expand ===============\n\n\n    _this.onExpandClick = function (e) {\n      var _a;\n\n      var _this$getEllipsis = _this.getEllipsis(),\n          onExpand = _this$getEllipsis.onExpand;\n\n      _this.setState({\n        expanded: true\n      });\n\n      (_a = onExpand) === null || _a === void 0 ? void 0 : _a(e);\n    }; // ================ Edit ================\n\n\n    _this.onEditClick = function (e) {\n      e.preventDefault();\n\n      _this.triggerEdit(true);\n    };\n\n    _this.onEditChange = function (value) {\n      var _this$getEditable = _this.getEditable(),\n          onChange = _this$getEditable.onChange;\n\n      onChange === null || onChange === void 0 ? void 0 : onChange(value);\n\n      _this.triggerEdit(false);\n    };\n\n    _this.onEditCancel = function () {\n      var _a, _b;\n\n      (_b = (_a = _this.getEditable()).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);\n\n      _this.triggerEdit(false);\n    }; // ================ Copy ================\n\n\n    _this.onCopyClick = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          children = _this$props.children,\n          copyable = _this$props.copyable;\n\n      var copyConfig = _extends({}, _typeof(copyable) === 'object' ? copyable : null);\n\n      if (copyConfig.text === undefined) {\n        copyConfig.text = String(children);\n      }\n\n      copy(copyConfig.text || '');\n\n      _this.setState({\n        copied: true\n      }, function () {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy();\n        }\n\n        _this.copyId = window.setTimeout(function () {\n          _this.setState({\n            copied: false\n          });\n        }, 3000);\n      });\n    };\n\n    _this.setEditRef = function (node) {\n      _this.editIcon = node;\n    };\n\n    _this.triggerEdit = function (edit) {\n      var _this$getEditable2 = _this.getEditable(),\n          onStart = _this$getEditable2.onStart;\n\n      if (edit && onStart) {\n        onStart();\n      }\n\n      _this.setState({\n        edit: edit\n      }, function () {\n        if (!edit && _this.editIcon) {\n          _this.editIcon.focus();\n        }\n      });\n    }; // ============== Ellipsis ==============\n\n\n    _this.resizeOnNextFrame = function () {\n      raf.cancel(_this.rafId);\n      _this.rafId = raf(function () {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        _this.syncEllipsis();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Base, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        clientRendered: true\n      });\n      this.resizeOnNextFrame();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var children = this.props.children;\n      var ellipsis = this.getEllipsis();\n      var prevEllipsis = this.getEllipsis(prevProps);\n\n      if (children !== prevProps.children || ellipsis.rows !== prevEllipsis.rows) {\n        this.resizeOnNextFrame();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearTimeout(this.copyId);\n      raf.cancel(this.rafId);\n    }\n  }, {\n    key: \"getEditable\",\n    value: function getEditable(props) {\n      var edit = this.state.edit;\n\n      var _ref2 = props || this.props,\n          editable = _ref2.editable;\n\n      if (!editable) return {\n        editing: edit\n      };\n      return _extends({\n        editing: edit\n      }, _typeof(editable) === 'object' ? editable : null);\n    }\n  }, {\n    key: \"getEllipsis\",\n    value: function getEllipsis(props) {\n      var _ref3 = props || this.props,\n          ellipsis = _ref3.ellipsis;\n\n      if (!ellipsis) return {};\n      return _extends({\n        rows: 1,\n        expandable: false\n      }, _typeof(ellipsis) === 'object' ? ellipsis : null);\n    }\n  }, {\n    key: \"canUseCSSEllipsis\",\n    value: function canUseCSSEllipsis() {\n      var clientRendered = this.state.clientRendered;\n      var _this$props2 = this.props,\n          editable = _this$props2.editable,\n          copyable = _this$props2.copyable;\n\n      var _this$getEllipsis2 = this.getEllipsis(),\n          rows = _this$getEllipsis2.rows,\n          expandable = _this$getEllipsis2.expandable,\n          suffix = _this$getEllipsis2.suffix,\n          onEllipsis = _this$getEllipsis2.onEllipsis,\n          tooltip = _this$getEllipsis2.tooltip;\n\n      if (suffix || tooltip) return false; // Can't use css ellipsis since we need to provide the place for button\n\n      if (editable || copyable || expandable || !clientRendered || onEllipsis) {\n        return false;\n      }\n\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n\n      return isLineClampSupport;\n    }\n  }, {\n    key: \"syncEllipsis\",\n    value: function syncEllipsis() {\n      var _this$state = this.state,\n          ellipsisText = _this$state.ellipsisText,\n          isEllipsis = _this$state.isEllipsis,\n          expanded = _this$state.expanded;\n\n      var _this$getEllipsis3 = this.getEllipsis(),\n          rows = _this$getEllipsis3.rows,\n          suffix = _this$getEllipsis3.suffix,\n          onEllipsis = _this$getEllipsis3.onEllipsis;\n\n      var children = this.props.children;\n      if (!rows || rows < 0 || !this.contentRef.current || expanded) return; // Do not measure if css already support ellipsis\n\n      if (this.canUseCSSEllipsis()) return;\n      devWarning(toArray(children).every(function (child) {\n        return typeof child === 'string';\n      }), 'Typography', '`ellipsis` should use string as children only.');\n\n      var _measure = measure(this.contentRef.current, {\n        rows: rows,\n        suffix: suffix\n      }, children, this.renderOperations(true), ELLIPSIS_STR),\n          content = _measure.content,\n          text = _measure.text,\n          ellipsis = _measure.ellipsis;\n\n      if (ellipsisText !== text || isEllipsis !== ellipsis) {\n        this.setState({\n          ellipsisText: text,\n          ellipsisContent: content,\n          isEllipsis: ellipsis\n        });\n\n        if (isEllipsis !== ellipsis && onEllipsis) {\n          onEllipsis(ellipsis);\n        }\n      }\n    }\n  }, {\n    key: \"renderExpand\",\n    value: function renderExpand(forceRender) {\n      var _this$getEllipsis4 = this.getEllipsis(),\n          expandable = _this$getEllipsis4.expandable,\n          symbol = _this$getEllipsis4.symbol;\n\n      var _this$state2 = this.state,\n          expanded = _this$state2.expanded,\n          isEllipsis = _this$state2.isEllipsis;\n      if (!expandable) return null; // force render expand icon for measure usage or it will cause dead loop\n\n      if (!forceRender && (expanded || !isEllipsis)) return null;\n      var expandContent;\n\n      if (symbol) {\n        expandContent = symbol;\n      } else {\n        expandContent = this.expandStr;\n      }\n\n      return /*#__PURE__*/React.createElement(\"a\", {\n        key: \"expand\",\n        className: \"\".concat(this.getPrefixCls(), \"-expand\"),\n        onClick: this.onExpandClick,\n        \"aria-label\": this.expandStr\n      }, expandContent);\n    }\n  }, {\n    key: \"renderEdit\",\n    value: function renderEdit() {\n      var editable = this.props.editable;\n      if (!editable) return;\n      var icon = editable.icon,\n          tooltip = editable.tooltip;\n      var title = toArray(tooltip)[0] || this.editStr;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"edit\",\n        title: tooltip === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        ref: this.setEditRef,\n        className: \"\".concat(this.getPrefixCls(), \"-edit\"),\n        onClick: this.onEditClick,\n        \"aria-label\": ariaLabel\n      }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n        role: \"button\"\n      })));\n    }\n  }, {\n    key: \"renderCopy\",\n    value: function renderCopy() {\n      var copied = this.state.copied;\n      var copyable = this.props.copyable;\n      if (!copyable) return;\n      var prefixCls = this.getPrefixCls();\n      var tooltips = copyable.tooltips;\n      var tooltipNodes = toArray(tooltips);\n\n      if (tooltipNodes.length === 0) {\n        tooltipNodes = [this.copyStr, this.copiedStr];\n      }\n\n      var title = copied ? tooltipNodes[1] : tooltipNodes[0];\n      var ariaLabel = typeof title === 'string' ? title : '';\n      var icons = toArray(copyable.icon);\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"copy\",\n        title: tooltips === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n        onClick: this.onCopyClick,\n        \"aria-label\": ariaLabel\n      }, copied ? icons[1] || /*#__PURE__*/React.createElement(CheckOutlined, null) : icons[0] || /*#__PURE__*/React.createElement(CopyOutlined, null)));\n    }\n  }, {\n    key: \"renderEditInput\",\n    value: function renderEditInput() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          className = _this$props3.className,\n          style = _this$props3.style;\n      var direction = this.context.direction;\n\n      var _this$getEditable3 = this.getEditable(),\n          maxLength = _this$getEditable3.maxLength,\n          autoSize = _this$getEditable3.autoSize,\n          onEnd = _this$getEditable3.onEnd;\n\n      return /*#__PURE__*/React.createElement(Editable, {\n        value: typeof children === 'string' ? children : '',\n        onSave: this.onEditChange,\n        onCancel: this.onEditCancel,\n        onEnd: onEnd,\n        prefixCls: this.getPrefixCls(),\n        className: className,\n        style: style,\n        direction: direction,\n        maxLength: maxLength,\n        autoSize: autoSize\n      });\n    }\n  }, {\n    key: \"renderOperations\",\n    value: function renderOperations(forceRenderExpanded) {\n      return [this.renderExpand(forceRenderExpanded), this.renderEdit(), this.renderCopy()].filter(function (node) {\n        return node;\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          ellipsisContent = _this$state3.ellipsisContent,\n          isEllipsis = _this$state3.isEllipsis,\n          expanded = _this$state3.expanded;\n\n      var _a = this.props,\n          component = _a.component,\n          children = _a.children,\n          className = _a.className,\n          type = _a.type,\n          disabled = _a.disabled,\n          style = _a.style,\n          restProps = __rest(_a, [\"component\", \"children\", \"className\", \"type\", \"disabled\", \"style\"]);\n\n      var direction = this.context.direction;\n\n      var _this$getEllipsis5 = this.getEllipsis(),\n          rows = _this$getEllipsis5.rows,\n          suffix = _this$getEllipsis5.suffix,\n          tooltip = _this$getEllipsis5.tooltip;\n\n      var prefixCls = this.getPrefixCls();\n      var textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard'].concat(_toConsumableArray(configConsumerProps)));\n      var cssEllipsis = this.canUseCSSEllipsis();\n      var cssTextOverflow = rows === 1 && cssEllipsis;\n      var cssLineClamp = rows && rows > 1 && cssEllipsis;\n      var textNode = children; // Only use js ellipsis when css ellipsis not support\n\n      if (rows && isEllipsis && !expanded && !cssEllipsis) {\n        var title = restProps.title;\n        var restContent = title || '';\n\n        if (!title && (typeof children === 'string' || typeof children === 'number')) {\n          restContent = String(children);\n        } // show rest content as title on symbol\n\n\n        restContent = restContent.slice(String(ellipsisContent || '').length); // We move full content to outer element to avoid repeat read the content by accessibility\n\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, ellipsisContent, /*#__PURE__*/React.createElement(\"span\", {\n          title: restContent,\n          \"aria-hidden\": \"true\"\n        }, ELLIPSIS_STR), suffix); // If provided tooltip, we need wrap with span to let Tooltip inject events\n\n        if (tooltip) {\n          textNode = /*#__PURE__*/React.createElement(Tooltip, {\n            title: tooltip === true ? children : tooltip\n          }, /*#__PURE__*/React.createElement(\"span\", null, textNode));\n        }\n      } else {\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, children, suffix);\n      }\n\n      textNode = wrapperDecorations(this.props, textNode);\n      return /*#__PURE__*/React.createElement(LocaleReceiver, {\n        componentName: \"Text\"\n      }, function (_ref4) {\n        var _classNames;\n\n        var edit = _ref4.edit,\n            copyStr = _ref4.copy,\n            copied = _ref4.copied,\n            expand = _ref4.expand;\n        _this2.editStr = edit;\n        _this2.copyStr = copyStr;\n        _this2.copiedStr = copied;\n        _this2.expandStr = expand;\n        return /*#__PURE__*/React.createElement(ResizeObserver, {\n          onResize: _this2.resizeOnNextFrame,\n          disabled: !rows\n        }, /*#__PURE__*/React.createElement(Typography, _extends({\n          className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), rows), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n          style: _extends(_extends({}, style), {\n            WebkitLineClamp: cssLineClamp ? rows : undefined\n          }),\n          component: component,\n          ref: _this2.contentRef,\n          direction: direction\n        }, textProps), textNode, _this2.renderOperations()));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getEditable4 = this.getEditable(),\n          editing = _this$getEditable4.editing;\n\n      if (editing) {\n        return this.renderEditInput();\n      }\n\n      return this.renderContent();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var children = nextProps.children,\n          editable = nextProps.editable;\n      devWarning(!editable || typeof children === 'string', 'Typography', 'When `editable` is enabled, the `children` should use string.');\n      return {};\n    }\n  }]);\n\n  return Base;\n}(React.Component);\n\nBase.contextType = ConfigContext;\nBase.defaultProps = {\n  children: ''\n};\nexport default Base;","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/node_modules/antd/es/typography/Base.js"],"names":["_defineProperty","_toConsumableArray","_typeof","_extends","_classCallCheck","_createClass","_inherits","_createSuper","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","toArray","copy","omit","EditOutlined","CheckOutlined","CopyOutlined","ResizeObserver","configConsumerProps","ConfigContext","LocaleReceiver","devWarning","TransButton","raf","isStyleSupport","Tooltip","Typography","Editable","measure","isLineClampSupport","isTextOverflowSupport","wrapperDecorations","_ref","content","mark","code","underline","del","strong","keyboard","currentContent","wrap","needed","tag","createElement","ELLIPSIS_STR","Base","_React$Component","_super","_this","apply","arguments","contentRef","createRef","state","edit","copied","ellipsisText","ellipsisContent","isEllipsis","expanded","clientRendered","getPrefixCls","customizePrefixCls","props","prefixCls","context","onExpandClick","_a","_this$getEllipsis","getEllipsis","onExpand","setState","onEditClick","preventDefault","triggerEdit","onEditChange","value","_this$getEditable","getEditable","onChange","onEditCancel","_b","onCancel","onCopyClick","_this$props","children","copyable","copyConfig","text","undefined","String","onCopy","copyId","window","setTimeout","setEditRef","node","editIcon","_this$getEditable2","onStart","focus","resizeOnNextFrame","cancel","rafId","syncEllipsis","key","componentDidMount","componentDidUpdate","prevProps","ellipsis","prevEllipsis","rows","componentWillUnmount","clearTimeout","_ref2","editable","editing","_ref3","expandable","canUseCSSEllipsis","_this$props2","_this$getEllipsis2","suffix","onEllipsis","tooltip","_this$state","_this$getEllipsis3","current","every","child","_measure","renderOperations","renderExpand","forceRender","_this$getEllipsis4","symbol","_this$state2","expandContent","expandStr","className","concat","onClick","renderEdit","icon","title","editStr","ariaLabel","ref","role","renderCopy","tooltips","tooltipNodes","copyStr","copiedStr","icons","renderEditInput","_this$props3","style","direction","_this$getEditable3","maxLength","autoSize","onEnd","onSave","forceRenderExpanded","filter","renderContent","_this2","_this$state3","component","type","disabled","restProps","_this$getEllipsis5","textProps","cssEllipsis","cssTextOverflow","cssLineClamp","textNode","restContent","slice","Fragment","componentName","_ref4","_classNames","expand","onResize","WebkitLineClamp","render","_this$getEditable4","getDerivedStateFromProps","nextProps","Component","contextType","defaultProps"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport copy from 'copy-to-clipboard';\nimport omit from \"rc-util/es/omit\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport ResizeObserver from 'rc-resize-observer';\nimport { configConsumerProps, ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport devWarning from '../_util/devWarning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport { isStyleSupport } from '../_util/styleChecker';\nimport Tooltip from '../tooltip';\nimport Typography from './Typography';\nimport Editable from './Editable';\nimport measure from './util';\nvar isLineClampSupport = isStyleSupport('webkitLineClamp');\nvar isTextOverflowSupport = isStyleSupport('textOverflow');\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref[\"delete\"],\n      strong = _ref.strong,\n      keyboard = _ref.keyboard;\n  var currentContent = content;\n\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  return currentContent;\n}\n\nvar ELLIPSIS_STR = '...';\n\nvar Base = /*#__PURE__*/function (_React$Component) {\n  _inherits(Base, _React$Component);\n\n  var _super = _createSuper(Base);\n\n  function Base() {\n    var _this;\n\n    _classCallCheck(this, Base);\n\n    _this = _super.apply(this, arguments);\n    _this.contentRef = /*#__PURE__*/React.createRef();\n    _this.state = {\n      edit: false,\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false\n    };\n\n    _this.getPrefixCls = function () {\n      var customizePrefixCls = _this.props.prefixCls;\n      var getPrefixCls = _this.context.getPrefixCls;\n      return getPrefixCls('typography', customizePrefixCls);\n    }; // =============== Expand ===============\n\n\n    _this.onExpandClick = function (e) {\n      var _a;\n\n      var _this$getEllipsis = _this.getEllipsis(),\n          onExpand = _this$getEllipsis.onExpand;\n\n      _this.setState({\n        expanded: true\n      });\n\n      (_a = onExpand) === null || _a === void 0 ? void 0 : _a(e);\n    }; // ================ Edit ================\n\n\n    _this.onEditClick = function (e) {\n      e.preventDefault();\n\n      _this.triggerEdit(true);\n    };\n\n    _this.onEditChange = function (value) {\n      var _this$getEditable = _this.getEditable(),\n          onChange = _this$getEditable.onChange;\n\n      onChange === null || onChange === void 0 ? void 0 : onChange(value);\n\n      _this.triggerEdit(false);\n    };\n\n    _this.onEditCancel = function () {\n      var _a, _b;\n\n      (_b = (_a = _this.getEditable()).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);\n\n      _this.triggerEdit(false);\n    }; // ================ Copy ================\n\n\n    _this.onCopyClick = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          children = _this$props.children,\n          copyable = _this$props.copyable;\n\n      var copyConfig = _extends({}, _typeof(copyable) === 'object' ? copyable : null);\n\n      if (copyConfig.text === undefined) {\n        copyConfig.text = String(children);\n      }\n\n      copy(copyConfig.text || '');\n\n      _this.setState({\n        copied: true\n      }, function () {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy();\n        }\n\n        _this.copyId = window.setTimeout(function () {\n          _this.setState({\n            copied: false\n          });\n        }, 3000);\n      });\n    };\n\n    _this.setEditRef = function (node) {\n      _this.editIcon = node;\n    };\n\n    _this.triggerEdit = function (edit) {\n      var _this$getEditable2 = _this.getEditable(),\n          onStart = _this$getEditable2.onStart;\n\n      if (edit && onStart) {\n        onStart();\n      }\n\n      _this.setState({\n        edit: edit\n      }, function () {\n        if (!edit && _this.editIcon) {\n          _this.editIcon.focus();\n        }\n      });\n    }; // ============== Ellipsis ==============\n\n\n    _this.resizeOnNextFrame = function () {\n      raf.cancel(_this.rafId);\n      _this.rafId = raf(function () {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        _this.syncEllipsis();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Base, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        clientRendered: true\n      });\n      this.resizeOnNextFrame();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var children = this.props.children;\n      var ellipsis = this.getEllipsis();\n      var prevEllipsis = this.getEllipsis(prevProps);\n\n      if (children !== prevProps.children || ellipsis.rows !== prevEllipsis.rows) {\n        this.resizeOnNextFrame();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearTimeout(this.copyId);\n      raf.cancel(this.rafId);\n    }\n  }, {\n    key: \"getEditable\",\n    value: function getEditable(props) {\n      var edit = this.state.edit;\n\n      var _ref2 = props || this.props,\n          editable = _ref2.editable;\n\n      if (!editable) return {\n        editing: edit\n      };\n      return _extends({\n        editing: edit\n      }, _typeof(editable) === 'object' ? editable : null);\n    }\n  }, {\n    key: \"getEllipsis\",\n    value: function getEllipsis(props) {\n      var _ref3 = props || this.props,\n          ellipsis = _ref3.ellipsis;\n\n      if (!ellipsis) return {};\n      return _extends({\n        rows: 1,\n        expandable: false\n      }, _typeof(ellipsis) === 'object' ? ellipsis : null);\n    }\n  }, {\n    key: \"canUseCSSEllipsis\",\n    value: function canUseCSSEllipsis() {\n      var clientRendered = this.state.clientRendered;\n      var _this$props2 = this.props,\n          editable = _this$props2.editable,\n          copyable = _this$props2.copyable;\n\n      var _this$getEllipsis2 = this.getEllipsis(),\n          rows = _this$getEllipsis2.rows,\n          expandable = _this$getEllipsis2.expandable,\n          suffix = _this$getEllipsis2.suffix,\n          onEllipsis = _this$getEllipsis2.onEllipsis,\n          tooltip = _this$getEllipsis2.tooltip;\n\n      if (suffix || tooltip) return false; // Can't use css ellipsis since we need to provide the place for button\n\n      if (editable || copyable || expandable || !clientRendered || onEllipsis) {\n        return false;\n      }\n\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n\n      return isLineClampSupport;\n    }\n  }, {\n    key: \"syncEllipsis\",\n    value: function syncEllipsis() {\n      var _this$state = this.state,\n          ellipsisText = _this$state.ellipsisText,\n          isEllipsis = _this$state.isEllipsis,\n          expanded = _this$state.expanded;\n\n      var _this$getEllipsis3 = this.getEllipsis(),\n          rows = _this$getEllipsis3.rows,\n          suffix = _this$getEllipsis3.suffix,\n          onEllipsis = _this$getEllipsis3.onEllipsis;\n\n      var children = this.props.children;\n      if (!rows || rows < 0 || !this.contentRef.current || expanded) return; // Do not measure if css already support ellipsis\n\n      if (this.canUseCSSEllipsis()) return;\n      devWarning(toArray(children).every(function (child) {\n        return typeof child === 'string';\n      }), 'Typography', '`ellipsis` should use string as children only.');\n\n      var _measure = measure(this.contentRef.current, {\n        rows: rows,\n        suffix: suffix\n      }, children, this.renderOperations(true), ELLIPSIS_STR),\n          content = _measure.content,\n          text = _measure.text,\n          ellipsis = _measure.ellipsis;\n\n      if (ellipsisText !== text || isEllipsis !== ellipsis) {\n        this.setState({\n          ellipsisText: text,\n          ellipsisContent: content,\n          isEllipsis: ellipsis\n        });\n\n        if (isEllipsis !== ellipsis && onEllipsis) {\n          onEllipsis(ellipsis);\n        }\n      }\n    }\n  }, {\n    key: \"renderExpand\",\n    value: function renderExpand(forceRender) {\n      var _this$getEllipsis4 = this.getEllipsis(),\n          expandable = _this$getEllipsis4.expandable,\n          symbol = _this$getEllipsis4.symbol;\n\n      var _this$state2 = this.state,\n          expanded = _this$state2.expanded,\n          isEllipsis = _this$state2.isEllipsis;\n      if (!expandable) return null; // force render expand icon for measure usage or it will cause dead loop\n\n      if (!forceRender && (expanded || !isEllipsis)) return null;\n      var expandContent;\n\n      if (symbol) {\n        expandContent = symbol;\n      } else {\n        expandContent = this.expandStr;\n      }\n\n      return /*#__PURE__*/React.createElement(\"a\", {\n        key: \"expand\",\n        className: \"\".concat(this.getPrefixCls(), \"-expand\"),\n        onClick: this.onExpandClick,\n        \"aria-label\": this.expandStr\n      }, expandContent);\n    }\n  }, {\n    key: \"renderEdit\",\n    value: function renderEdit() {\n      var editable = this.props.editable;\n      if (!editable) return;\n      var icon = editable.icon,\n          tooltip = editable.tooltip;\n      var title = toArray(tooltip)[0] || this.editStr;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"edit\",\n        title: tooltip === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        ref: this.setEditRef,\n        className: \"\".concat(this.getPrefixCls(), \"-edit\"),\n        onClick: this.onEditClick,\n        \"aria-label\": ariaLabel\n      }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n        role: \"button\"\n      })));\n    }\n  }, {\n    key: \"renderCopy\",\n    value: function renderCopy() {\n      var copied = this.state.copied;\n      var copyable = this.props.copyable;\n      if (!copyable) return;\n      var prefixCls = this.getPrefixCls();\n      var tooltips = copyable.tooltips;\n      var tooltipNodes = toArray(tooltips);\n\n      if (tooltipNodes.length === 0) {\n        tooltipNodes = [this.copyStr, this.copiedStr];\n      }\n\n      var title = copied ? tooltipNodes[1] : tooltipNodes[0];\n      var ariaLabel = typeof title === 'string' ? title : '';\n      var icons = toArray(copyable.icon);\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        key: \"copy\",\n        title: tooltips === false ? '' : title\n      }, /*#__PURE__*/React.createElement(TransButton, {\n        className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n        onClick: this.onCopyClick,\n        \"aria-label\": ariaLabel\n      }, copied ? icons[1] || /*#__PURE__*/React.createElement(CheckOutlined, null) : icons[0] || /*#__PURE__*/React.createElement(CopyOutlined, null)));\n    }\n  }, {\n    key: \"renderEditInput\",\n    value: function renderEditInput() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          className = _this$props3.className,\n          style = _this$props3.style;\n      var direction = this.context.direction;\n\n      var _this$getEditable3 = this.getEditable(),\n          maxLength = _this$getEditable3.maxLength,\n          autoSize = _this$getEditable3.autoSize,\n          onEnd = _this$getEditable3.onEnd;\n\n      return /*#__PURE__*/React.createElement(Editable, {\n        value: typeof children === 'string' ? children : '',\n        onSave: this.onEditChange,\n        onCancel: this.onEditCancel,\n        onEnd: onEnd,\n        prefixCls: this.getPrefixCls(),\n        className: className,\n        style: style,\n        direction: direction,\n        maxLength: maxLength,\n        autoSize: autoSize\n      });\n    }\n  }, {\n    key: \"renderOperations\",\n    value: function renderOperations(forceRenderExpanded) {\n      return [this.renderExpand(forceRenderExpanded), this.renderEdit(), this.renderCopy()].filter(function (node) {\n        return node;\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          ellipsisContent = _this$state3.ellipsisContent,\n          isEllipsis = _this$state3.isEllipsis,\n          expanded = _this$state3.expanded;\n\n      var _a = this.props,\n          component = _a.component,\n          children = _a.children,\n          className = _a.className,\n          type = _a.type,\n          disabled = _a.disabled,\n          style = _a.style,\n          restProps = __rest(_a, [\"component\", \"children\", \"className\", \"type\", \"disabled\", \"style\"]);\n\n      var direction = this.context.direction;\n\n      var _this$getEllipsis5 = this.getEllipsis(),\n          rows = _this$getEllipsis5.rows,\n          suffix = _this$getEllipsis5.suffix,\n          tooltip = _this$getEllipsis5.tooltip;\n\n      var prefixCls = this.getPrefixCls();\n      var textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard'].concat(_toConsumableArray(configConsumerProps)));\n      var cssEllipsis = this.canUseCSSEllipsis();\n      var cssTextOverflow = rows === 1 && cssEllipsis;\n      var cssLineClamp = rows && rows > 1 && cssEllipsis;\n      var textNode = children; // Only use js ellipsis when css ellipsis not support\n\n      if (rows && isEllipsis && !expanded && !cssEllipsis) {\n        var title = restProps.title;\n        var restContent = title || '';\n\n        if (!title && (typeof children === 'string' || typeof children === 'number')) {\n          restContent = String(children);\n        } // show rest content as title on symbol\n\n\n        restContent = restContent.slice(String(ellipsisContent || '').length); // We move full content to outer element to avoid repeat read the content by accessibility\n\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, ellipsisContent, /*#__PURE__*/React.createElement(\"span\", {\n          title: restContent,\n          \"aria-hidden\": \"true\"\n        }, ELLIPSIS_STR), suffix); // If provided tooltip, we need wrap with span to let Tooltip inject events\n\n        if (tooltip) {\n          textNode = /*#__PURE__*/React.createElement(Tooltip, {\n            title: tooltip === true ? children : tooltip\n          }, /*#__PURE__*/React.createElement(\"span\", null, textNode));\n        }\n      } else {\n        textNode = /*#__PURE__*/React.createElement(React.Fragment, null, children, suffix);\n      }\n\n      textNode = wrapperDecorations(this.props, textNode);\n      return /*#__PURE__*/React.createElement(LocaleReceiver, {\n        componentName: \"Text\"\n      }, function (_ref4) {\n        var _classNames;\n\n        var edit = _ref4.edit,\n            copyStr = _ref4.copy,\n            copied = _ref4.copied,\n            expand = _ref4.expand;\n        _this2.editStr = edit;\n        _this2.copyStr = copyStr;\n        _this2.copiedStr = copied;\n        _this2.expandStr = expand;\n        return /*#__PURE__*/React.createElement(ResizeObserver, {\n          onResize: _this2.resizeOnNextFrame,\n          disabled: !rows\n        }, /*#__PURE__*/React.createElement(Typography, _extends({\n          className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), rows), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n          style: _extends(_extends({}, style), {\n            WebkitLineClamp: cssLineClamp ? rows : undefined\n          }),\n          component: component,\n          ref: _this2.contentRef,\n          direction: direction\n        }, textProps), textNode, _this2.renderOperations()));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getEditable4 = this.getEditable(),\n          editing = _this$getEditable4.editing;\n\n      if (editing) {\n        return this.renderEditInput();\n      }\n\n      return this.renderContent();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var children = nextProps.children,\n          editable = nextProps.editable;\n      devWarning(!editable || typeof children === 'string', 'Typography', 'When `editable` is enabled, the `children` should use string.');\n      return {};\n    }\n  }]);\n\n  return Base;\n}(React.Component);\n\nBase.contextType = ConfigContext;\nBase.defaultProps = {\n  children: ''\n};\nexport default Base;"]},"metadata":{},"sourceType":"module"}