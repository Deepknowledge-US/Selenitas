{"ast":null,"code":"var _jsxFileName = \"/home/one/NIN/nin_0.3.2/src/components/D3/Histogram.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Hist = props => {\n  _s();\n\n  const [myRef, setMyRef] = useState( /*#__PURE__*/React.createRef());\n  const [dataset, setDataSet] = useState([100, 200, 300, 400, 500]);\n  useEffect(() => {\n    let size = 500;\n    let svg = d3.select(myRef.current).append('svg').attr('width', size).attr('height', size);\n    let rect_width = 95;\n    svg.selectAll('rect').data(dataset).enter().append('rect').attr('x', (d, i) => 5 + i * (rect_width + 5)).attr('y', d => size - d).attr('width', rect_width).attr('height', d => d).attr('fill', 'teal');\n  }, [dataset]);\n\n  const addNum = dataset => {\n    setDataSet(...dataset, 100);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNum,\n      children: \"push\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}; // class Histogram extends React.Component {\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\tthis.myRef = React.createRef();\n// \t\tthis.dataset = [100, 200, 300, 400, 500];\n// \t}\n// \tcomponentDidMount(){\n// \t\tlet size = 500;\n// \t\tlet svg = d3.select(this.myRef.current)\n// \t\t\t\t\t.append('svg')\n// \t\t\t\t\t.attr('width', size)\n// \t\t\t\t\t.attr('height', size);\n// \t\t\t\t\tlet rect_width = 95;\n// \t\tsvg.selectAll('rect')\n// \t\t\t.data(this.dataset)\n// \t\t\t.enter()\n// \t\t\t.append('rect')\n// \t\t\t.attr('x', (d, i) => 5 + i*(rect_width + 5))\n// \t\t\t.attr('y', d => size - d)\n// \t\t\t.attr('width', rect_width)\n// \t\t\t.attr('height', d => d)\n// \t\t\t.attr('fill', 'teal');\n// \t}\n// \trender(){\n// \t\treturn (\n// \t\t\t<div ref={this.myRef}>\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\n\n_s(Hist, \"e1kdrIMg39x1uUiCE6gsiFboM4I=\");\n\n_c = Hist;\nexport default Hist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hist\");","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/components/D3/Histogram.js"],"names":["React","useEffect","useState","d3","Hist","props","myRef","setMyRef","createRef","dataset","setDataSet","size","svg","select","current","append","attr","rect_width","selectAll","data","enter","d","i","addNum"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,eAAEF,KAAK,CAACQ,SAAN,EAAF,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAIU,IAAI,GAAG,GAAX;AACA,QAAIC,GAAG,GAAGT,EAAE,CAACU,MAAH,CAAUP,KAAK,CAACQ,OAAhB,EACNC,MADM,CACC,KADD,EAENC,IAFM,CAED,OAFC,EAEQL,IAFR,EAGNK,IAHM,CAGD,QAHC,EAGSL,IAHT,CAAV;AAIG,QAAIM,UAAU,GAAG,EAAjB;AACHL,IAAAA,GAAG,CAACM,SAAJ,CAAc,MAAd,EACEC,IADF,CACOV,OADP,EAEEW,KAFF,GAGEL,MAHF,CAGS,MAHT,EAIEC,IAJF,CAIO,GAJP,EAIY,CAACK,CAAD,EAAIC,CAAJ,KAAU,IAAIA,CAAC,IAAEL,UAAU,GAAG,CAAf,CAJ3B,EAKED,IALF,CAKO,GALP,EAKYK,CAAC,IAAIV,IAAI,GAAGU,CALxB,EAMEL,IANF,CAMO,OANP,EAMgBC,UANhB,EAOED,IAPF,CAOO,QAPP,EAOiBK,CAAC,IAAIA,CAPtB,EAQEL,IARF,CAQO,MARP,EAQe,MARf;AASC,GAhBO,EAgBL,CAACP,OAAD,CAhBK,CAAT;;AAmBA,QAAMc,MAAM,GAAId,OAAD,IAAa;AAC3BC,IAAAA,UAAU,CAAE,GAAGD,OAAL,EAAc,GAAd,CAAV;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAEc,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,GAAG,EAAEjB;AAAV;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAQA,CAnCD,C,CAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;GApEMF,I;;KAAAA,I;AAsEN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\n\n\nconst Hist = (props) => {\n\tconst [myRef, setMyRef] = useState( React.createRef() )\n\tconst [dataset, setDataSet] = useState([100, 200, 300, 400, 500])\n\n\tuseEffect( () => {\n\t\tlet size = 500;\n\t\tlet svg = d3.select(myRef.current)\n\t\t\t\t\t.append('svg')\n\t\t\t\t\t.attr('width', size)\n\t\t\t\t\t.attr('height', size);\n\t\t\t\t\tlet rect_width = 95;\n\t\tsvg.selectAll('rect')\n\t\t\t.data(dataset)\n\t\t\t.enter()\n\t\t\t.append('rect')\n\t\t\t.attr('x', (d, i) => 5 + i*(rect_width + 5))\n\t\t\t.attr('y', d => size - d)\n\t\t\t.attr('width', rect_width)\n\t\t\t.attr('height', d => d)\n\t\t\t.attr('fill', 'teal');\n\t\t}, [dataset]\n\t);\n\n\tconst addNum = (dataset) => {\n\t\tsetDataSet( ...dataset, 100 )\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<button onClick={addNum}>push</button>\n\t\t\t<div ref={myRef}>\n\t\t\t</div>\n\t\t\n\t\t</>\n\t);\n}\n\n\n// class Histogram extends React.Component {\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\tthis.myRef = React.createRef();\n// \t\tthis.dataset = [100, 200, 300, 400, 500];\n// \t}\n// \tcomponentDidMount(){\n// \t\tlet size = 500;\n// \t\tlet svg = d3.select(this.myRef.current)\n// \t\t\t\t\t.append('svg')\n// \t\t\t\t\t.attr('width', size)\n// \t\t\t\t\t.attr('height', size);\n// \t\t\t\t\tlet rect_width = 95;\n// \t\tsvg.selectAll('rect')\n// \t\t\t.data(this.dataset)\n// \t\t\t.enter()\n// \t\t\t.append('rect')\n// \t\t\t.attr('x', (d, i) => 5 + i*(rect_width + 5))\n// \t\t\t.attr('y', d => size - d)\n// \t\t\t.attr('width', rect_width)\n// \t\t\t.attr('height', d => d)\n// \t\t\t.attr('fill', 'teal');\n// \t}\n// \trender(){\n// \t\treturn (\n// \t\t\t<div ref={this.myRef}>\n// \t\t\t</div>\n// \t\t);\n// \t}\n \n// }\n\nexport default Hist;"]},"metadata":{},"sourceType":"module"}