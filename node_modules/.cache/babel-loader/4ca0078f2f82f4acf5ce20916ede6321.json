{"ast":null,"code":"var _jsxFileName = \"/home/one/NIN/nin_0.3.2/src/components/D3/Chart/Chart.js\";\nimport React from 'react';\nimport { scaleOrdinal, scaleLinear } from 'd3-scale'; // import { scaleOrdinal, scaleLinear, scaleTime } from 'd3-scale';\n// import { tsvParse } from 'd3-dsv';\n\nimport { schemeCategory10 } from 'd3-scale-chromatic'; // import { timeParse } from 'd3-time-format';\n\nimport { line as d3Line, curveBasis } from 'd3-shape';\nimport { min, max, extent } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\nimport './cssChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const svgWidth = 960;\n  const svgHeight = 500;\n  const margin = {\n    top: 20,\n    right: 80,\n    bottom: 30,\n    left: 50\n  };\n  const width = svgWidth - margin.left - margin.right;\n  const height = svgHeight - margin.top - margin.bottom; // console.log('W H',width,height)\n\n  const x = scaleLinear().range([0, width]);\n  const y = scaleLinear().range([height, 0]);\n  const z = scaleOrdinal(schemeCategory10);\n  const line = d3Line().curve(curveBasis).x(d => x(d.time)).y(d => y(d.value));\n  const values_1 = {\n    id: 'a_var_to_track',\n    values: [{\n      time: 1,\n      value: 63\n    }, {\n      time: 2,\n      value: 58\n    }, {\n      time: 3,\n      value: 53\n    }, {\n      time: 4,\n      value: 55\n    }, {\n      time: 5,\n      value: 64\n    }, {\n      time: 6,\n      value: 58\n    }, {\n      time: 7,\n      value: 57\n    }, {\n      time: 8,\n      value: 61\n    }, {\n      time: 9,\n      value: 69\n    }]\n  };\n  const values_2 = {\n    id: 'a_second_bar',\n    values: [{\n      time: 1,\n      value: 50 + Math.random() * 50\n    }, {\n      time: 2,\n      value: 50 + Math.random() * 50\n    }, {\n      time: 3,\n      value: 50 + Math.random() * 50\n    }, {\n      time: 4,\n      value: 50 + Math.random() * 50\n    }, {\n      time: 5,\n      value: 50 + Math.random() * 50\n    }, {\n      time: 6,\n      value: 50 + Math.random() * 50\n    }, {\n      time: 7,\n      value: 50 + Math.random() * 50\n    }, {\n      time: 8,\n      value: 50 + Math.random() * 50\n    }, {\n      time: 9,\n      value: 50 + Math.random() * 50\n    }]\n  };\n  const cities = [values_1, values_2];\n  console.log(cities);\n  x.domain([0, values_1.values.length]);\n  y.domain([min(cities, c => min(c.values, d => d.value)), max(cities, c => max(c.values, d => d.value))]);\n  z.domain(cities.map(c => c.id)); // console.log('x', x, '\\ny', y, '\\nz', z)\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: svgWidth,\n    height: svgHeight,\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${margin.left}, ${margin.top})`,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"axis axis--x\",\n        transform: `translate(0, ${height})`,\n        ref: node => select(node).call(axisBottom(x))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"axis axis--y\",\n        ref: node => select(node).call(axisLeft(y)),\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          transform: \"rotate(-90)\",\n          y: \"6\",\n          dy: \"0.71em\",\n          fill: \"#000\",\n          children: \"value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), cities.map(city => {\n        const [lastD] = city.values.slice(-1);\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"line\",\n            d: line(city.values),\n            style: {\n              stroke: z(city.id)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            transform: `translate(${x(lastD.time)}, ${y(lastD.value)})`,\n            x: 3,\n            dy: \"0.35em\",\n            style: {\n              font: '10px sans-serif'\n            },\n            children: city.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 8\n          }, this)]\n        }, city.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/components/D3/Chart/Chart.js"],"names":["React","scaleOrdinal","scaleLinear","schemeCategory10","line","d3Line","curveBasis","min","max","extent","axisBottom","axisLeft","select","Chart","props","svgWidth","svgHeight","margin","top","right","bottom","left","width","height","x","range","y","z","curve","d","time","value","values_1","id","values","values_2","Math","random","cities","console","log","domain","length","c","map","node","call","city","lastD","slice","stroke","font"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { scaleOrdinal, scaleLinear } from 'd3-scale';\n// import { scaleOrdinal, scaleLinear, scaleTime } from 'd3-scale';\n// import { tsvParse } from 'd3-dsv';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\n// import { timeParse } from 'd3-time-format';\nimport { line as d3Line, curveBasis } from 'd3-shape';\nimport { min, max, extent } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\n\n\nimport './cssChart.css';\n\n\nconst Chart = (props) => {\n\n\tconst svgWidth \t= 960;\n\tconst svgHeight = 500;\n\n\tconst margin \t= { top: 20, right: 80, bottom: 30, left: 50 };\n\tconst width \t= svgWidth - margin.left - margin.right;\n\tconst height \t= svgHeight - margin.top - margin.bottom;\n\n\t// console.log('W H',width,height)\n\tconst x \t\t= scaleLinear().range([0, width]);\n\tconst y \t\t= scaleLinear().range([height, 0]);\n\tconst z \t\t= scaleOrdinal(schemeCategory10);\n\n\tconst line = d3Line()\n\t\t.curve(curveBasis)\n\t\t.x(d => x(d.time))\n\t\t.y(d => y(d.value));\n\n\tconst values_1 = {\n\t\tid: 'a_var_to_track',\n\t\tvalues: [\n\t\t\t{time: 1, value:63},\n\t\t\t{time: 2, value:58},\n\t\t\t{time: 3, value:53},\n\t\t\t{time: 4, value:55},\n\t\t\t{time: 5, value:64},\n\t\t\t{time: 6, value:58},\n\t\t\t{time: 7, value:57},\n\t\t\t{time: 8, value:61},\n\t\t\t{time: 9, value:69},\n\t\t]\n\t}\n\n\tconst values_2 = {\n\t\tid: 'a_second_bar',\n\t\tvalues: [\n\t\t\t{time: 1, value: 50 + Math.random()*50},\n\t\t\t{time: 2, value: 50 + Math.random()*50},\n\t\t\t{time: 3, value: 50 + Math.random()*50},\n\t\t\t{time: 4, value: 50 + Math.random()*50},\n\t\t\t{time: 5, value: 50 + Math.random()*50},\n\t\t\t{time: 6, value: 50 + Math.random()*50},\n\t\t\t{time: 7, value: 50 + Math.random()*50},\n\t\t\t{time: 8, value: 50 + Math.random()*50},\n\t\t\t{time: 9, value: 50 + Math.random()*50},\n\t\t]\n\t}\n\n\tconst cities = [\n\t\tvalues_1,\n\t\tvalues_2\n\t]\n\n\tconsole.log(cities)\n\n\t\n\tx.domain( [0, values_1.values.length] );\n\n\n\ty.domain([\n\t\tmin(cities, c => min(c.values, d => d.value)),\n\t\tmax(cities, c => max(c.values, d => d.value)),\n\t]);\n\tz.domain(cities.map(c => c.id));\n\n\n\t// console.log('x', x, '\\ny', y, '\\nz', z)\n\n\treturn(\n\t\t<svg width={svgWidth} height={svgHeight}>\n\t\t\t<g transform={`translate(${margin.left}, ${margin.top})`}>\n\t\t\t\t<g\n\t\t\t\t\tclassName=\"axis axis--x\"\n\t\t\t\t\ttransform={`translate(0, ${height})`}\n\t\t\t\t\tref={node => select(node).call(axisBottom(x))}\n\t\t\t\t/>\n\t\t\t\t<g className=\"axis axis--y\" ref={node => select(node).call(axisLeft(y))}>\n\t\t\t\t\t<text transform=\"rotate(-90)\" y=\"6\" dy=\"0.71em\" fill=\"#000\">\n\t\t\t\t\t\tvalue\n\t\t\t\t\t</text>\n\t\t\t\t</g>\n\t\t\t\t{cities.map(city => {\n\t\t\t\t\tconst [lastD] = city.values.slice(-1);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<g className=\"city\" key={city.id}>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tclassName=\"line\"\n\t\t\t\t\t\t\t\td={line(city.values)}\n\t\t\t\t\t\t\t\tstyle={{ stroke: z(city.id) }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\ttransform={`translate(${x(lastD.time)}, ${y(lastD.value)})`}\n\t\t\t\t\t\t\t\tx={3}\n\t\t\t\t\t\t\t\tdy=\"0.35em\"\n\t\t\t\t\t\t\t\tstyle={{ font: '10px sans-serif' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{city.id}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</g>\n\t\t</svg>\n\t);\n};\n\nexport default Chart\n\n"]},"metadata":{},"sourceType":"module"}