{"ast":null,"code":"import _slicedToArray from\"/home/one/NIN/nin_0.3.2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useEffect,useReducer,useState}from'react';import Connection from'./Connection';import Publisher from'./Publisher';import Subscriber from'./Subscriber';import Receiver from'./Receiver';import mqtt from'mqtt';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var NewContext=/*#__PURE__*/createContext([]);var initialState={setupClicked:false};function changeState(state,action){switch(action.type){case'setup':return{setupClicked:true};default:return initialState;}}var HookMqtt=function HookMqtt(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),client=_useState2[0],setClient=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSubed=_useState4[0],setIsSub=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),payload=_useState6[0],setPayload=_useState6[1];var _useState7=useState('Connect'),_useState8=_slicedToArray(_useState7,2),connectStatus=_useState8[0],setConnectStatus=_useState8[1];var _useReducer=useReducer(changeState,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var mqttConnect=function mqttConnect(host,mqttOption){setConnectStatus('Connecting');setClient(mqtt.connect(host,mqttOption));};useEffect(function(){if(client){client.on('connect',function(){setConnectStatus('Connected');});client.on('error',function(err){console.error('Connection error: ',err);client.end();});client.on('reconnect',function(){setConnectStatus('Reconnecting');});client.on('message',function(topic,message){var payload={topic:topic,message:message.toString()};setPayload(payload);});}},[client]);var mqttDisconnect=function mqttDisconnect(){if(client){client.end(function(){setConnectStatus('Connect');});}};var mqttPublish=function mqttPublish(context){if(client){var topic=context.topic,qos=context.qos,_payload=context.payload;client.publish(topic,_payload,{qos:qos},function(error){if(error){console.log('Publish error: ',error);}});}};var mqttSub=function mqttSub(subscription){if(client){var topic=subscription.topic,qos=subscription.qos;client.subscribe(topic,{qos:qos},function(error){if(error){console.log('Subscribe to topics error',error);return;}setIsSub(true);});}};var mqttUnSub=function mqttUnSub(subscription){if(client){var topic=subscription.topic;client.unsubscribe(topic,function(error){if(error){console.log('Unsubscribe error',error);return;}setIsSub(false);});}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(NewContext.Provider,{value:{state:state,dispatch:dispatch},children:[/*#__PURE__*/_jsx(Connection,{connect:mqttConnect,disconnect:mqttDisconnect,connectBtn:connectStatus}),/*#__PURE__*/_jsx(Subscriber,{sub:mqttSub,unSub:mqttUnSub,showUnsub:isSubed}),/*#__PURE__*/_jsx(Publisher,{publish:mqttPublish}),/*#__PURE__*/_jsx(Receiver,{payload:payload,publish:mqttPublish})]})});};export default HookMqtt;","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/components/Hook/index.js"],"names":["React","createContext","useEffect","useReducer","useState","Connection","Publisher","Subscriber","Receiver","mqtt","NewContext","initialState","setupClicked","changeState","state","action","type","HookMqtt","client","setClient","isSubed","setIsSub","payload","setPayload","connectStatus","setConnectStatus","dispatch","mqttConnect","host","mqttOption","connect","on","err","console","error","end","topic","message","toString","mqttDisconnect","mqttPublish","context","qos","publish","log","mqttSub","subscription","subscribe","mqttUnSub","unsubscribe"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useReducer, useState } from 'react';\nimport Connection from './Connection';\nimport Publisher from './Publisher';\nimport Subscriber from './Subscriber';\nimport Receiver from './Receiver';\nimport mqtt from 'mqtt';\n\nexport const NewContext = createContext([])\nconst initialState = {\n\tsetupClicked: false,\n}\n\nfunction changeState(state, action) {\n\tswitch(action.type){\n\t\tcase 'setup':\n\t\t\treturn {\n\t\t\t\tsetupClicked: true\n\t\t\t};\n\t\tdefault:\n\t\t\treturn initialState\n\t}\n}\n\n\nconst HookMqtt = () => {\n\tconst [client, setClient] \t\t\t\t= useState(null);\n\tconst [isSubed, setIsSub] \t\t\t\t= useState(false);\n\tconst [payload, setPayload] \t\t\t= useState({});\n\tconst [connectStatus, setConnectStatus] = useState('Connect');\n\tconst [state, dispatch] \t\t\t\t= useReducer(changeState, initialState);\n\n\tconst mqttConnect = (host, mqttOption) => {\n\t\tsetConnectStatus('Connecting');\n\t\tsetClient(mqtt.connect(host, mqttOption));\n\t};\n\n\tuseEffect(() => {\n\t\tif (client) {\n\t\t\tclient.on('connect', () => {\n\t\t\t\tsetConnectStatus('Connected');\n\t\t\t});\n\t\t\tclient.on('error', (err) => {\n\t\t\t\tconsole.error('Connection error: ', err);\n\t\t\t\tclient.end();\n\t\t\t});\n\t\t\tclient.on('reconnect', () => {\n\t\t\t\tsetConnectStatus('Reconnecting');\n\t\t\t});\n\t\t\tclient.on('message', (topic, message) => {\n\t\t\t\tconst payload = { topic, message: message.toString() };\n\t\t\t\tsetPayload(payload);\n\t\t\t});\n\t\t}\n\t}, [client]);\n\n\tconst mqttDisconnect = () => {\n\t\tif (client) {\n\t\t\tclient.end(() => {\n\t\t\t\tsetConnectStatus('Connect');\n\t\t\t});\n\t\t}\n\t}\n\n\tconst mqttPublish = (context) => {\n\t\tif (client) {\n\t\t\tconst { topic, qos, payload } = context;\n\t\t\tclient.publish(topic, payload, { qos }, error => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log('Publish error: ', error);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tconst mqttSub = (subscription) => {\n\t\tif (client) {\n\t\t\tconst { topic, qos } = subscription;\n\t\t\tclient.subscribe(topic, { qos }, (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log('Subscribe to topics error', error)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tsetIsSub(true)\n\t\t\t});\n\t\t}\n\t};\n\n\tconst mqttUnSub = (subscription) => {\n\t\tif (client) {\n\t\t\tconst { topic } = subscription;\n\t\t\tclient.unsubscribe(topic, error => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log('Unsubscribe error', error)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tsetIsSub(false);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<NewContext.Provider value={{state, dispatch}}>\n\t\t\t\t<Connection connect={mqttConnect} disconnect={mqttDisconnect} connectBtn={connectStatus} />\n\t\t\t\t<Subscriber sub={mqttSub} unSub={mqttUnSub} showUnsub={isSubed} />\n\t\t\t\t<Publisher publish={mqttPublish} />\n\t\t\t\t<Receiver payload={payload} publish={mqttPublish} />\n\t\t\t</NewContext.Provider>\n\t\t</>\n\t);\n}\n\nexport default HookMqtt;"]},"metadata":{},"sourceType":"module"}