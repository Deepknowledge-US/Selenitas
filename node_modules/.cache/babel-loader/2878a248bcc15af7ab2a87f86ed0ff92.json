{"ast":null,"code":"var _jsxFileName = \"/home/one/NIN/nin_0.3.2/src/components/Body/Body.js\";\nimport React from 'react';\nimport './Body.css';\nimport HookMqtt from '../Hook/index'; // import Histogram from '../D3/Histogram'\n\nimport Chart from '../D3/Chart/Chart';\nimport dataTsv from '../D3/Chart/dataChart';\nimport { tsvParse } from 'd3-dsv';\nimport { timeParse } from 'd3-time-format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parseTime = timeParse('%Y%m%d'); // const data = tsvParse(dataTsv, (d, _, columns) => {\n// \td.date = parseTime(d.date);\n// \tfor (let i = 1, n = columns.length, c; i < n; ++i)\n// \t\td[(c = columns[i])] = +d[c];\n// \treturn d;\n// });\n\nconst data = [{\n  date: 20111002,\n  a_city: 71.2\n}, {\n  date: 20111002,\n  a_city: 71.2\n}, {\n  date: 20111002,\n  a_city: 71.2\n}, {\n  date: 20111002,\n  a_city: 60.8\n}, {\n  date: 20111002,\n  a_city: 66.9\n}, {\n  date: 20111002,\n  a_city: 71.2\n}, {\n  date: 20111002,\n  a_city: 71.2\n}, {\n  date: 20111002,\n  a_city: 66.9\n}, {\n  date: 20111002,\n  a_city: 60.8\n}, {\n  date: 20111002,\n  a_city: 66.9\n}, {\n  date: 20111002,\n  a_city: 66.9\n}, {\n  date: 20111002,\n  a_city: 60.8\n}];\n\nfunction BodyContent(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"body-div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        padding: 24,\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(HookMqtt, {\n        id: \"mqtt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_c = BodyContent;\nexport default BodyContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyContent\");","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/components/Body/Body.js"],"names":["React","HookMqtt","Chart","dataTsv","tsvParse","timeParse","parseTime","data","date","a_city","BodyContent","props","padding","minHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAqB,OAArB;AAGA,OAAO,YAAP;AACA,OAAOC,QAAP,MAA6B,eAA7B,C,CACA;;AACA,OAAOC,KAAP,MAA6B,mBAA7B;AAEA,OAAOC,OAAP,MAA6B,uBAA7B;AACA,SAAQC,QAAR,QAA6B,QAA7B;AACA,SAASC,SAAT,QAA6B,gBAA7B;;AAGA,MAAMC,SAAS,GAAGD,SAAS,CAAC,QAAD,CAA3B,C,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,IAAI,GAAG,CACT;AAACC,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CADS,EAET;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAFS,EAGT;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAHS,EAIT;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAJS,EAKT;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CALS,EAMT;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CANS,EAOT;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAPS,EAQT;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CARS,EAST;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CATS,EAUT;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAVS,EAWT;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAXS,EAYT;AAACD,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAZS,CAAb;;AAeA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,sBACI;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAI;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,SAAS,EAAE;AAA1B,OAA1C;AAAA,8BACR,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADQ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEN;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;KAXQG,W;AAaT,eAAeA,WAAf","sourcesContent":["import React    from 'react';\n\n\nimport './Body.css'\nimport HookMqtt         from '../Hook/index'\n// import Histogram from '../D3/Histogram'\nimport Chart            from '../D3/Chart/Chart'\n\nimport dataTsv          from '../D3/Chart/dataChart'\nimport {tsvParse}       from 'd3-dsv'\nimport { timeParse }    from 'd3-time-format';\n\n\nconst parseTime = timeParse('%Y%m%d');\n// const data = tsvParse(dataTsv, (d, _, columns) => {\n// \td.date = parseTime(d.date);\n// \tfor (let i = 1, n = columns.length, c; i < n; ++i)\n// \t\td[(c = columns[i])] = +d[c];\n// \treturn d;\n// });\n\nconst data = [\n    {date: 20111002, a_city:71.2 },\n    {date: 20111002, a_city:71.2 },\n    {date: 20111002, a_city:71.2 },\n    {date: 20111002, a_city:60.8 },\n    {date: 20111002, a_city:66.9 },\n    {date: 20111002, a_city:71.2 },\n    {date: 20111002, a_city:71.2 },\n    {date: 20111002, a_city:66.9 },\n    {date: 20111002, a_city:60.8 },\n    {date: 20111002, a_city:66.9 },\n    {date: 20111002, a_city:66.9 },\n    {date: 20111002, a_city:60.8 }\n]\n\nfunction BodyContent(props) {\n    return (\n        <div id=\"body-div\" >\n            {/* <div className = \"site-layout-background\" style = {{ padding: 24, minHeight: '100vh' }} > */}\n            <div className=\"container-fluid\" style = {{ padding: 24, minHeight: '100vh' }}>\n\t\t\t\t<HookMqtt id='mqtt' />\n                <Chart data={data} />\n\t\t\t</div>\n            {/* </div> */}\n        </div>\n    );\n}\n\nexport default BodyContent;"]},"metadata":{},"sourceType":"module"}