{"ast":null,"code":"'use strict';\n\nvar Transform = require('readable-stream').Transform;\n\nvar duplexify = require('duplexify');\n/* global FileReader */\n\n\nvar my;\nvar proxy;\nvar stream;\nvar isInitialized = false;\n\nfunction buildProxy() {\n  var proxy = new Transform();\n\n  proxy._write = function (chunk, encoding, next) {\n    my.sendSocketMessage({\n      data: chunk.buffer,\n      success: function () {\n        next();\n      },\n      fail: function () {\n        next(new Error());\n      }\n    });\n  };\n\n  proxy._flush = function socketEnd(done) {\n    my.closeSocket({\n      success: function () {\n        done();\n      }\n    });\n  };\n\n  return proxy;\n}\n\nfunction setDefaultOpts(opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost';\n  }\n\n  if (!opts.path) {\n    opts.path = '/';\n  }\n\n  if (!opts.wsOptions) {\n    opts.wsOptions = {};\n  }\n}\n\nfunction buildUrl(opts, client) {\n  var protocol = opts.protocol === 'alis' ? 'wss' : 'ws';\n  var url = protocol + '://' + opts.hostname + opts.path;\n\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path;\n  }\n\n  if (typeof opts.transformWsUrl === 'function') {\n    url = opts.transformWsUrl(url, opts, client);\n  }\n\n  return url;\n}\n\nfunction bindEventHandler() {\n  if (isInitialized) return;\n  isInitialized = true;\n  my.onSocketOpen(function () {\n    stream.setReadable(proxy);\n    stream.setWritable(proxy);\n    stream.emit('connect');\n  });\n  my.onSocketMessage(function (res) {\n    if (typeof res.data === 'string') {\n      var buffer = Buffer.from(res.data, 'base64');\n      proxy.push(buffer);\n    } else {\n      var reader = new FileReader();\n      reader.addEventListener('load', function () {\n        var data = reader.result;\n        if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, 'utf8');\n        proxy.push(data);\n      });\n      reader.readAsArrayBuffer(res.data);\n    }\n  });\n  my.onSocketClose(function () {\n    stream.end();\n    stream.destroy();\n  });\n  my.onSocketError(function (res) {\n    stream.destroy(res);\n  });\n}\n\nfunction buildStream(client, opts) {\n  opts.hostname = opts.hostname || opts.host;\n\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.');\n  }\n\n  var websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3 ? 'mqttv3.1' : 'mqtt';\n  setDefaultOpts(opts);\n  var url = buildUrl(opts, client);\n  my = opts.my;\n  my.connectSocket({\n    url: url,\n    protocols: websocketSubProtocol\n  });\n  proxy = buildProxy();\n  stream = duplexify.obj();\n  bindEventHandler();\n  return stream;\n}\n\nmodule.exports = buildStream;","map":{"version":3,"sources":["/home/one/node_modules/mqtt/lib/connect/ali.js"],"names":["Transform","require","duplexify","my","proxy","stream","isInitialized","buildProxy","_write","chunk","encoding","next","sendSocketMessage","data","buffer","success","fail","Error","_flush","socketEnd","done","closeSocket","setDefaultOpts","opts","hostname","path","wsOptions","buildUrl","client","protocol","url","port","transformWsUrl","bindEventHandler","onSocketOpen","setReadable","setWritable","emit","onSocketMessage","res","Buffer","from","push","reader","FileReader","addEventListener","result","ArrayBuffer","readAsArrayBuffer","onSocketClose","end","destroy","onSocketError","buildStream","host","websocketSubProtocol","protocolId","protocolVersion","connectSocket","protocols","obj","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,SAA3C;;AACA,IAAIE,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAvB;AAEA;;;AACA,IAAIE,EAAJ;AACA,IAAIC,KAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,aAAa,GAAG,KAApB;;AAEA,SAASC,UAAT,GAAuB;AACrB,MAAIH,KAAK,GAAG,IAAIJ,SAAJ,EAAZ;;AACAI,EAAAA,KAAK,CAACI,MAAN,GAAe,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAC9CR,IAAAA,EAAE,CAACS,iBAAH,CAAqB;AACnBC,MAAAA,IAAI,EAAEJ,KAAK,CAACK,MADO;AAEnBC,MAAAA,OAAO,EAAE,YAAY;AACnBJ,QAAAA,IAAI;AACL,OAJkB;AAKnBK,MAAAA,IAAI,EAAE,YAAY;AAChBL,QAAAA,IAAI,CAAC,IAAIM,KAAJ,EAAD,CAAJ;AACD;AAPkB,KAArB;AASD,GAVD;;AAWAb,EAAAA,KAAK,CAACc,MAAN,GAAe,SAASC,SAAT,CAAoBC,IAApB,EAA0B;AACvCjB,IAAAA,EAAE,CAACkB,WAAH,CAAe;AACbN,MAAAA,OAAO,EAAE,YAAY;AACnBK,QAAAA,IAAI;AACL;AAHY,KAAf;AAKD,GAND;;AAQA,SAAOhB,KAAP;AACD;;AAED,SAASkB,cAAT,CAAyBC,IAAzB,EAA+B;AAC7B,MAAI,CAACA,IAAI,CAACC,QAAV,EAAoB;AAClBD,IAAAA,IAAI,CAACC,QAAL,GAAgB,WAAhB;AACD;;AACD,MAAI,CAACD,IAAI,CAACE,IAAV,EAAgB;AACdF,IAAAA,IAAI,CAACE,IAAL,GAAY,GAAZ;AACD;;AAED,MAAI,CAACF,IAAI,CAACG,SAAV,EAAqB;AACnBH,IAAAA,IAAI,CAACG,SAAL,GAAiB,EAAjB;AACD;AACF;;AAED,SAASC,QAAT,CAAmBJ,IAAnB,EAAyBK,MAAzB,EAAiC;AAC/B,MAAIC,QAAQ,GAAGN,IAAI,CAACM,QAAL,KAAkB,MAAlB,GAA2B,KAA3B,GAAmC,IAAlD;AACA,MAAIC,GAAG,GAAGD,QAAQ,GAAG,KAAX,GAAmBN,IAAI,CAACC,QAAxB,GAAmCD,IAAI,CAACE,IAAlD;;AACA,MAAIF,IAAI,CAACQ,IAAL,IAAaR,IAAI,CAACQ,IAAL,KAAc,EAA3B,IAAiCR,IAAI,CAACQ,IAAL,KAAc,GAAnD,EAAwD;AACtDD,IAAAA,GAAG,GAAGD,QAAQ,GAAG,KAAX,GAAmBN,IAAI,CAACC,QAAxB,GAAmC,GAAnC,GAAyCD,IAAI,CAACQ,IAA9C,GAAqDR,IAAI,CAACE,IAAhE;AACD;;AACD,MAAI,OAAQF,IAAI,CAACS,cAAb,KAAiC,UAArC,EAAiD;AAC/CF,IAAAA,GAAG,GAAGP,IAAI,CAACS,cAAL,CAAoBF,GAApB,EAAyBP,IAAzB,EAA+BK,MAA/B,CAAN;AACD;;AACD,SAAOE,GAAP;AACD;;AAED,SAASG,gBAAT,GAA6B;AAC3B,MAAI3B,aAAJ,EAAmB;AAEnBA,EAAAA,aAAa,GAAG,IAAhB;AAEAH,EAAAA,EAAE,CAAC+B,YAAH,CAAgB,YAAY;AAC1B7B,IAAAA,MAAM,CAAC8B,WAAP,CAAmB/B,KAAnB;AACAC,IAAAA,MAAM,CAAC+B,WAAP,CAAmBhC,KAAnB;AACAC,IAAAA,MAAM,CAACgC,IAAP,CAAY,SAAZ;AACD,GAJD;AAMAlC,EAAAA,EAAE,CAACmC,eAAH,CAAmB,UAAUC,GAAV,EAAe;AAChC,QAAI,OAAOA,GAAG,CAAC1B,IAAX,KAAoB,QAAxB,EAAkC;AAChC,UAAIC,MAAM,GAAG0B,MAAM,CAACC,IAAP,CAAYF,GAAG,CAAC1B,IAAhB,EAAsB,QAAtB,CAAb;AACAT,MAAAA,KAAK,CAACsC,IAAN,CAAW5B,MAAX;AACD,KAHD,MAGO;AACL,UAAI6B,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AAC1C,YAAIhC,IAAI,GAAG8B,MAAM,CAACG,MAAlB;AAEA,YAAIjC,IAAI,YAAYkC,WAApB,EAAiClC,IAAI,GAAG2B,MAAM,CAACC,IAAP,CAAY5B,IAAZ,CAAP,CAAjC,KACKA,IAAI,GAAG2B,MAAM,CAACC,IAAP,CAAY5B,IAAZ,EAAkB,MAAlB,CAAP;AACLT,QAAAA,KAAK,CAACsC,IAAN,CAAW7B,IAAX;AACD,OAND;AAOA8B,MAAAA,MAAM,CAACK,iBAAP,CAAyBT,GAAG,CAAC1B,IAA7B;AACD;AACF,GAfD;AAiBAV,EAAAA,EAAE,CAAC8C,aAAH,CAAiB,YAAY;AAC3B5C,IAAAA,MAAM,CAAC6C,GAAP;AACA7C,IAAAA,MAAM,CAAC8C,OAAP;AACD,GAHD;AAKAhD,EAAAA,EAAE,CAACiD,aAAH,CAAiB,UAAUb,GAAV,EAAe;AAC9BlC,IAAAA,MAAM,CAAC8C,OAAP,CAAeZ,GAAf;AACD,GAFD;AAGD;;AAED,SAASc,WAAT,CAAsBzB,MAAtB,EAA8BL,IAA9B,EAAoC;AAClCA,EAAAA,IAAI,CAACC,QAAL,GAAgBD,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAAC+B,IAAtC;;AAEA,MAAI,CAAC/B,IAAI,CAACC,QAAV,EAAoB;AAClB,UAAM,IAAIP,KAAJ,CAAU,kDAAV,CAAN;AACD;;AAED,MAAIsC,oBAAoB,GACrBhC,IAAI,CAACiC,UAAL,KAAoB,QAArB,IAAmCjC,IAAI,CAACkC,eAAL,KAAyB,CAA5D,GACI,UADJ,GAEI,MAHN;AAKAnC,EAAAA,cAAc,CAACC,IAAD,CAAd;AAEA,MAAIO,GAAG,GAAGH,QAAQ,CAACJ,IAAD,EAAOK,MAAP,CAAlB;AACAzB,EAAAA,EAAE,GAAGoB,IAAI,CAACpB,EAAV;AACAA,EAAAA,EAAE,CAACuD,aAAH,CAAiB;AACf5B,IAAAA,GAAG,EAAEA,GADU;AAEf6B,IAAAA,SAAS,EAAEJ;AAFI,GAAjB;AAKAnD,EAAAA,KAAK,GAAGG,UAAU,EAAlB;AACAF,EAAAA,MAAM,GAAGH,SAAS,CAAC0D,GAAV,EAAT;AAEA3B,EAAAA,gBAAgB;AAEhB,SAAO5B,MAAP;AACD;;AAEDwD,MAAM,CAACC,OAAP,GAAiBT,WAAjB","sourcesContent":["'use strict'\n\nvar Transform = require('readable-stream').Transform\nvar duplexify = require('duplexify')\n\n/* global FileReader */\nvar my\nvar proxy\nvar stream\nvar isInitialized = false\n\nfunction buildProxy () {\n  var proxy = new Transform()\n  proxy._write = function (chunk, encoding, next) {\n    my.sendSocketMessage({\n      data: chunk.buffer,\n      success: function () {\n        next()\n      },\n      fail: function () {\n        next(new Error())\n      }\n    })\n  }\n  proxy._flush = function socketEnd (done) {\n    my.closeSocket({\n      success: function () {\n        done()\n      }\n    })\n  }\n\n  return proxy\n}\n\nfunction setDefaultOpts (opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost'\n  }\n  if (!opts.path) {\n    opts.path = '/'\n  }\n\n  if (!opts.wsOptions) {\n    opts.wsOptions = {}\n  }\n}\n\nfunction buildUrl (opts, client) {\n  var protocol = opts.protocol === 'alis' ? 'wss' : 'ws'\n  var url = protocol + '://' + opts.hostname + opts.path\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path\n  }\n  if (typeof (opts.transformWsUrl) === 'function') {\n    url = opts.transformWsUrl(url, opts, client)\n  }\n  return url\n}\n\nfunction bindEventHandler () {\n  if (isInitialized) return\n\n  isInitialized = true\n\n  my.onSocketOpen(function () {\n    stream.setReadable(proxy)\n    stream.setWritable(proxy)\n    stream.emit('connect')\n  })\n\n  my.onSocketMessage(function (res) {\n    if (typeof res.data === 'string') {\n      var buffer = Buffer.from(res.data, 'base64')\n      proxy.push(buffer)\n    } else {\n      var reader = new FileReader()\n      reader.addEventListener('load', function () {\n        var data = reader.result\n\n        if (data instanceof ArrayBuffer) data = Buffer.from(data)\n        else data = Buffer.from(data, 'utf8')\n        proxy.push(data)\n      })\n      reader.readAsArrayBuffer(res.data)\n    }\n  })\n\n  my.onSocketClose(function () {\n    stream.end()\n    stream.destroy()\n  })\n\n  my.onSocketError(function (res) {\n    stream.destroy(res)\n  })\n}\n\nfunction buildStream (client, opts) {\n  opts.hostname = opts.hostname || opts.host\n\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.')\n  }\n\n  var websocketSubProtocol =\n    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\n      ? 'mqttv3.1'\n      : 'mqtt'\n\n  setDefaultOpts(opts)\n\n  var url = buildUrl(opts, client)\n  my = opts.my\n  my.connectSocket({\n    url: url,\n    protocols: websocketSubProtocol\n  })\n\n  proxy = buildProxy()\n  stream = duplexify.obj()\n\n  bindEventHandler()\n\n  return stream\n}\n\nmodule.exports = buildStream\n"]},"metadata":{},"sourceType":"script"}