{"ast":null,"code":"var _jsxFileName = \"/home/one/NIN/nin_0.3.2/src/components/D3/Chart/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { scaleOrdinal, scaleLinear } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { line as d3Line, curveBasis } from 'd3-shape';\nimport { min, max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\nimport './cssChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  _s();\n\n  const svgWidth = 800;\n  const svgHeight = 500;\n  const margin = {\n    top: 20,\n    right: 80,\n    bottom: 30,\n    left: 50\n  };\n  const width = svgWidth - margin.left - margin.right;\n  const height = svgHeight - margin.top - margin.bottom;\n  const x = scaleLinear().range([0, width]);\n  const y = scaleLinear().range([height, 0]);\n  const z = scaleOrdinal(schemeCategory10);\n  const line = d3Line().curve(curveBasis).x(d => x(d.time)).y(d => y(d.value));\n  const [data, updateData] = useState(props.data);\n  x.domain([min(data, c => min(c.values, d => d.time)), max(data, c => max(c.values, d => d.time))]);\n  y.domain([min(data, c => min(c.values, d => d.value)), max(data, c => max(c.values, d => d.value))]);\n  z.domain(data.map(c => c.id)); // const [minX1, setMinX1 ] = useState(x.domain()[0])\n\n  const [maxX1, setMaxX1] = useState(x.domain()[1]);\n\n  const newPoint = () => {\n    const lastElement = data[1].values[data[1].values.length - 1];\n    const newTime = lastElement.time + 1;\n    const newValue = Math.random() * 10;\n    const newItem1 = {\n      time: newTime,\n      value: newValue\n    };\n    const newItem2 = {\n      time: newTime,\n      value: lastElement.value + newValue\n    };\n    data[0].values.push(newItem1);\n    data[1].values.push(newItem2);\n    console.log(newTime);\n    setMaxX1(newTime);\n    updateData(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: svgWidth,\n      height: svgHeight,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: `translate(${margin.left}, ${margin.top})`,\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"axis axis--x\",\n          transform: `translate(0, ${height})`,\n          ref: node => select(node).call(axisBottom(x))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"axis axis--y\",\n          ref: node => select(node).call(axisLeft(y)),\n          children: /*#__PURE__*/_jsxDEV(\"text\", {\n            transform: \"rotate(-90)\",\n            y: \"6\",\n            dy: \"0.71em\",\n            fill: \"#000\",\n            children: \"value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), data.map(trackedVar => {\n          const [lastD] = trackedVar.values.slice(-1);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"trackedVar\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"line\",\n              d: line(trackedVar.values),\n              style: {\n                stroke: z(trackedVar.id)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              transform: `translate(${x(lastD.time)}, ${y(lastD.value)})`,\n              x: 3,\n              dy: \"0.35em\",\n              style: {\n                font: '10px sans-serif'\n              },\n              children: trackedVar.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this)]\n          }, trackedVar.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 8\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: newPoint,\n      children: \"New Point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Chart, \"TV1drWjl9W8JXPKw3Yatx/VOzp8=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/components/D3/Chart/Chart.js"],"names":["React","useState","useEffect","scaleOrdinal","scaleLinear","schemeCategory10","line","d3Line","curveBasis","min","max","axisBottom","axisLeft","select","Chart","props","svgWidth","svgHeight","margin","top","right","bottom","left","width","height","x","range","y","z","curve","d","time","value","data","updateData","domain","c","values","map","id","maxX1","setMaxX1","newPoint","lastElement","length","newTime","newValue","Math","random","newItem1","newItem2","push","console","log","node","call","trackedVar","lastD","slice","stroke","font"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { scaleOrdinal, scaleLinear } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { line as d3Line, curveBasis } from 'd3-shape';\nimport { min, max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\n\nimport './cssChart.css';\n\n\nconst Chart = (props) => {\n\n\tconst svgWidth \t= 800;\n\tconst svgHeight = 500;\n\n\tconst margin \t= { top: 20, right: 80, bottom: 30, left: 50 };\n\tconst width \t= svgWidth - margin.left - margin.right;\n\tconst height \t= svgHeight - margin.top - margin.bottom;\n\n\tconst x \t\t= scaleLinear().range([0, width]);\n\tconst y \t\t= scaleLinear().range([height, 0]);\n\tconst z \t\t= scaleOrdinal(schemeCategory10);\n\n\tconst line = d3Line()\n\t\t.curve(curveBasis)\n\t\t.x(d => x(d.time))\n\t\t.y(d => y(d.value));\n\n\tconst [data, updateData] = useState(props.data);\n\t\n\n\tx.domain([\n\t\tmin(data, c => min(c.values, d => d.time)),\n\t\tmax(data, c => max(c.values, d => d.time)),\n\t]);\n\ty.domain([\n\t\tmin(data, c => min(c.values, d => d.value)),\n\t\tmax(data, c => max(c.values, d => d.value)),\n\t]);\n\tz.domain(data.map(c => c.id));\n\n\t// const [minX1, setMinX1 ] = useState(x.domain()[0])\n\tconst [maxX1, setMaxX1 ] = useState(x.domain()[1]);\n\n\tconst newPoint = () => {\n\t\tconst lastElement  \t= data[1].values[data[1].values.length -1];\n\t\tconst newTime  \t\t= lastElement.time + 1;\n\n\t\tconst newValue \t\t= Math.random() * 10;\n\t\tconst newItem1 \t\t= {time: newTime, value: newValue};\n\t\tconst newItem2 \t\t= {time: newTime, value: lastElement.value + newValue };\n\n\t\tdata[0].values.push(newItem1);\n\t\tdata[1].values.push(newItem2);\n\n\t\tconsole.log(newTime)\n\t\tsetMaxX1(newTime);\n\t\tupdateData(data);\n\t};\n\n\n\treturn(\n\t\t<>\n\t\t\t<svg width={svgWidth} height={svgHeight}>\n\t\t\t\t<g transform={`translate(${margin.left}, ${margin.top})`}>\n\t\t\t\t\t<g\n\t\t\t\t\t\tclassName=\"axis axis--x\"\n\t\t\t\t\t\ttransform={`translate(0, ${height})`}\n\t\t\t\t\t\tref={node => select(node).call(axisBottom(x))}\n\t\t\t\t\t/>\n\t\t\t\t\t<g className=\"axis axis--y\" ref={node => select(node).call(axisLeft(y))}>\n\t\t\t\t\t\t<text transform=\"rotate(-90)\" y=\"6\" dy=\"0.71em\" fill=\"#000\">\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t</text>\n\t\t\t\t\t</g>\n\t\t\t\t\t{data.map(trackedVar => {\n\t\t\t\t\t\tconst [lastD] = trackedVar.values.slice(-1);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<g className=\"trackedVar\" key={trackedVar.id}>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName=\"line\"\n\t\t\t\t\t\t\t\t\td={line(trackedVar.values)}\n\t\t\t\t\t\t\t\t\tstyle={{ stroke: z(trackedVar.id) }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\ttransform={`translate(${x(lastD.time)}, ${y(lastD.value)})`}\n\t\t\t\t\t\t\t\t\tx={3}\n\t\t\t\t\t\t\t\t\tdy=\"0.35em\"\n\t\t\t\t\t\t\t\t\tstyle={{ font: '10px sans-serif' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{trackedVar.id}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</g>\n\t\t\t</svg>\n\n\t\t\t<button onClick={newPoint} >New Point</button>\n\t\t</>\n\t);\n};\n\nexport default Chart\n\n"]},"metadata":{},"sourceType":"module"}