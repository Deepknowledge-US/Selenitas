{"ast":null,"code":"'use strict';\n/**\n * Validate a topic to see if it's valid or not.\n * A topic is valid if it follow below rules:\n * - Rule #1: If any part of the topic is not `+` or `#`, then it must not contain `+` and '#'\n * - Rule #2: Part `#` must be located at the end of the mailbox\n *\n * @param {String} topic - A topic\n * @returns {Boolean} If the topic is valid, returns true. Otherwise, returns false.\n */\n\nfunction validateTopic(topic) {\n  var parts = topic.split('/');\n\n  for (var i = 0; i < parts.length; i++) {\n    if (parts[i] === '+') {\n      continue;\n    }\n\n    if (parts[i] === '#') {\n      // for Rule #2\n      return i === parts.length - 1;\n    }\n\n    if (parts[i].indexOf('+') !== -1 || parts[i].indexOf('#') !== -1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Validate an array of topics to see if any of them is valid or not\n  * @param {Array} topics - Array of topics\n * @returns {String} If the topics is valid, returns null. Otherwise, returns the invalid one\n */\n\n\nfunction validateTopics(topics) {\n  if (topics.length === 0) {\n    return 'empty_topic_list';\n  }\n\n  for (var i = 0; i < topics.length; i++) {\n    if (!validateTopic(topics[i])) {\n      return topics[i];\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  validateTopics: validateTopics\n};","map":{"version":3,"sources":["/home/one/node_modules/mqtt/lib/validations.js"],"names":["validateTopic","topic","parts","split","i","length","indexOf","validateTopics","topics","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,aAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIF,KAAK,CAACE,CAAD,CAAL,KAAa,GAAjB,EAAsB;AACpB;AACD;;AAED,QAAIF,KAAK,CAACE,CAAD,CAAL,KAAa,GAAjB,EAAsB;AACpB;AACA,aAAOA,CAAC,KAAKF,KAAK,CAACG,MAAN,GAAe,CAA5B;AACD;;AAED,QAAIH,KAAK,CAACE,CAAD,CAAL,CAASE,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAA3B,IAAgCJ,KAAK,CAACE,CAAD,CAAL,CAASE,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAA/D,EAAkE;AAChE,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,cAAT,CAAyBC,MAAzB,EAAiC;AAC/B,MAAIA,MAAM,CAACH,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAO,kBAAP;AACD;;AACD,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,MAAM,CAACH,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAI,CAACJ,aAAa,CAACQ,MAAM,CAACJ,CAAD,CAAP,CAAlB,EAA+B;AAC7B,aAAOI,MAAM,CAACJ,CAAD,CAAb;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,cAAc,EAAEA;AADD,CAAjB","sourcesContent":["'use strict'\n\n/**\n * Validate a topic to see if it's valid or not.\n * A topic is valid if it follow below rules:\n * - Rule #1: If any part of the topic is not `+` or `#`, then it must not contain `+` and '#'\n * - Rule #2: Part `#` must be located at the end of the mailbox\n *\n * @param {String} topic - A topic\n * @returns {Boolean} If the topic is valid, returns true. Otherwise, returns false.\n */\nfunction validateTopic (topic) {\n  var parts = topic.split('/')\n\n  for (var i = 0; i < parts.length; i++) {\n    if (parts[i] === '+') {\n      continue\n    }\n\n    if (parts[i] === '#') {\n      // for Rule #2\n      return i === parts.length - 1\n    }\n\n    if (parts[i].indexOf('+') !== -1 || parts[i].indexOf('#') !== -1) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Validate an array of topics to see if any of them is valid or not\n  * @param {Array} topics - Array of topics\n * @returns {String} If the topics is valid, returns null. Otherwise, returns the invalid one\n */\nfunction validateTopics (topics) {\n  if (topics.length === 0) {\n    return 'empty_topic_list'\n  }\n  for (var i = 0; i < topics.length; i++) {\n    if (!validateTopic(topics[i])) {\n      return topics[i]\n    }\n  }\n  return null\n}\n\nmodule.exports = {\n  validateTopics: validateTopics\n}\n"]},"metadata":{},"sourceType":"script"}