{"ast":null,"code":"var _jsxFileName = \"/home/one/NIN/nin_0.3.2/src/App.js\";\n// // import React from 'react';\n// import React from 'react';\n// import Page from './components/Page/Page'\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n// import 'antd/dist/antd.css';\n// import 'jspanel4/es6module/extensions/modal/jspanel.modal';\n// import 'jspanel4/dist/jspanel.min.css';\n// // import CreatePanel from './components/CreatePanel/CreatePanel'\n// const App = () => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<Page />\n// \t\t</div>\n// \t);\n// }\n// export default App;\nimport React, { Component, lazy, Suspense } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsPanel } from 'jspanel4/es6module/jspanel';\nimport 'jspanel4/es6module/extensions/modal/jspanel.modal';\nimport 'jspanel4/dist/jspanel.min.css'; // Normal components\n\nimport Clock from './components/clock';\nimport ActionButton from './components/ActionButton';\nimport CreatePortal from './components/createPortal'; // jsPanel default options\n\nimport jsPanelOptions from './jsPanelOptions'; // lazy loaded components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayName = /*#__PURE__*/lazy(_c = () => import('./components/DisplayName'));\n_c2 = DisplayName;\nconst Countries = /*#__PURE__*/lazy(_c3 = () => import('./components/Countries'));\n_c4 = Countries;\nconst TodoApp = /*#__PURE__*/lazy(_c5 = () => import('./components/Todo/TodoApp'));\n_c6 = TodoApp;\nconst SampleUsers = /*#__PURE__*/lazy(_c7 = () => import('./components/SampleUsers'));\n_c8 = SampleUsers;\nconst RandomImage = /*#__PURE__*/lazy(_c9 = () => import('./components/RandomImage')); // Top level React component\n\n_c10 = RandomImage;\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.createJsPanel = (action, comp, modal = false) => {\n      // keep Main component refrence\n      const app = this; // check if its already mounted, bring it to front\n\n      if (app.state.panels[action]) {\n        return app.state.panels[action]['panel'].front(() => {\n          app.state.panels[action]['panel'].resize({\n            height: 'auto'\n          });\n          app.state.panels[action]['panel'].reposition('center-top 0 20%');\n        });\n      }\n\n      const options = { ...jsPanelOptions,\n        headerTitle: action,\n        onclosed: () => {\n          // remove closed jsPanel and its mounted component from state\n          const appPanels = app.state.panels;\n\n          if (appPanels[action]) {\n            delete appPanels[action];\n            app.setState({\n              panels: { ...appPanels\n              }\n            });\n          }\n        }\n      }; // create jsPanel\n\n      const panel = modal ? jsPanel.modal.create(options) : jsPanel.create(options); // save panel and compponent (this will be mounted later inside panel body) reference inside state\n\n      app.setState({\n        panels: { ...app.state.panels,\n          [action]: {\n            panel,\n            comp\n          }\n        }\n      });\n    };\n\n    this.state = {\n      panels: {}\n    };\n  }\n\n  renderJsPanlesInsidePortal() {\n    const panels = this.state.panels;\n    return Object.keys(panels).map(action => {\n      const jsPanel = panels[action].panel;\n      const Comp = panels[action].comp;\n      const node = document.getElementById(`${jsPanel.id}-node`);\n      let counter = 0;\n      if (!Comp) return null;\n      return /*#__PURE__*/_jsxDEV(CreatePortal, {\n        rootNode: node,\n        children: Array.isArray(Comp) ? Comp.map(C => /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-info\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 70\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(C, {\n            jsPanel: jsPanel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, `${jsPanel.id}-${counter++}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-info\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Comp, {\n            jsPanel: jsPanel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, jsPanel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    const jsPanels = Object.keys(this.state.panels);\n    const actionButtonProps = {\n      className: 'btn btn-outline-primary ml-2 mb-2',\n      handleClick: this.createJsPanel\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row bg-dark text-white shadow p-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"jsPanel with react\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(ActionButton, { ...actionButtonProps,\n              title: \"Simple Example\",\n              comp: DisplayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, { ...actionButtonProps,\n              title: \" Countries List\",\n              comp: Countries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, { ...actionButtonProps,\n              title: \"Todo App\",\n              comp: TodoApp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, { ...actionButtonProps,\n              title: \"Sample Users\",\n              comp: SampleUsers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, { ...actionButtonProps,\n              title: \"Random Image\",\n              comp: RandomImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, { ...actionButtonProps,\n              title: \"Modal Example\",\n              comp: Clock,\n              modal: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, { ...actionButtonProps,\n              title: \"Multiple Components\",\n              comp: [Clock, DisplayName, RandomImage, Countries]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), jsPanels.length > 0 && this.renderJsPanlesInsidePortal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"DisplayName$lazy\");\n$RefreshReg$(_c2, \"DisplayName\");\n$RefreshReg$(_c3, \"Countries$lazy\");\n$RefreshReg$(_c4, \"Countries\");\n$RefreshReg$(_c5, \"TodoApp$lazy\");\n$RefreshReg$(_c6, \"TodoApp\");\n$RefreshReg$(_c7, \"SampleUsers$lazy\");\n$RefreshReg$(_c8, \"SampleUsers\");\n$RefreshReg$(_c9, \"RandomImage$lazy\");\n$RefreshReg$(_c10, \"RandomImage\");","map":{"version":3,"sources":["/home/one/NIN/nin_0.3.2/src/App.js"],"names":["React","Component","lazy","Suspense","jsPanel","Clock","ActionButton","CreatePortal","jsPanelOptions","DisplayName","Countries","TodoApp","SampleUsers","RandomImage","App","constructor","createJsPanel","action","comp","modal","app","state","panels","front","resize","height","reposition","options","headerTitle","onclosed","appPanels","setState","panel","create","renderJsPanlesInsidePortal","Object","keys","map","Comp","node","document","getElementById","id","counter","Array","isArray","C","render","jsPanels","actionButtonProps","className","handleClick","length"],"mappings":"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","sourcesContent":["\n// // import React from 'react';\n// import React from 'react';\n// import Page from './components/Page/Page'\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n// import 'antd/dist/antd.css';\n// import 'jspanel4/es6module/extensions/modal/jspanel.modal';\n// import 'jspanel4/dist/jspanel.min.css';\n\n// // import CreatePanel from './components/CreatePanel/CreatePanel'\n\n\n// const App = () => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<Page />\n// \t\t</div>\n// \t);\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { Component, lazy, Suspense } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsPanel } from 'jspanel4/es6module/jspanel';\nimport 'jspanel4/es6module/extensions/modal/jspanel.modal';\nimport 'jspanel4/dist/jspanel.min.css';\n\n// Normal components\nimport Clock from './components/clock';\nimport ActionButton from './components/ActionButton';\nimport CreatePortal from './components/createPortal';\n\n// jsPanel default options\nimport jsPanelOptions from './jsPanelOptions';\n\n// lazy loaded components\nconst DisplayName = lazy(() => import('./components/DisplayName'));\nconst Countries = lazy(() => import('./components/Countries'));\nconst TodoApp = lazy(() => import('./components/Todo/TodoApp'));\nconst SampleUsers = lazy(() => import('./components/SampleUsers'));\nconst RandomImage = lazy(() => import('./components/RandomImage'));\n\n// Top level React component\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      panels: {}\n    };\n  }\n\n  createJsPanel = (action, comp, modal = false) => {\n    // keep Main component refrence\n    const app = this;\n    // check if its already mounted, bring it to front\n    if (app.state.panels[action]) {\n      return app.state.panels[action]['panel'].front(() => {\n        app.state.panels[action]['panel'].resize({\n          height: 'auto'\n        });\n        app.state.panels[action]['panel'].reposition('center-top 0 20%');\n      });\n    }\n\n    const options = {\n      ...jsPanelOptions,\n      headerTitle: action,\n      onclosed: () => {\n        // remove closed jsPanel and its mounted component from state\n        const appPanels = app.state.panels;\n        if (appPanels[action]) {\n          delete appPanels[action];\n          app.setState({ panels: { ...appPanels } });\n        }\n      }\n    };\n    // create jsPanel\n    const panel = modal ? jsPanel.modal.create(options) : jsPanel.create(options);\n    // save panel and compponent (this will be mounted later inside panel body) reference inside state\n    app.setState({ panels: { ...app.state.panels, [action]: { panel, comp } } });\n  };\n\n  renderJsPanlesInsidePortal() {\n    const panels = this.state.panels;\n    return Object.keys(panels).map(action => {\n      const jsPanel = panels[action].panel;\n      const Comp = panels[action].comp;\n      const node = document.getElementById(`${jsPanel.id}-node`);\n      let counter = 0;\n      if (!Comp) return null;\n      return (\n        <CreatePortal rootNode={node} key={jsPanel.id}>\n          {Array.isArray(Comp) ? (\n            Comp.map(C => (\n              <Suspense key={`${jsPanel.id}-${counter++}`} fallback={<div className=\"alert alert-info\">Loading...</div>}>\n                <C jsPanel={jsPanel} />\n              </Suspense>\n            ))\n          ) : (\n            <Suspense fallback={<div className=\"alert alert-info\">Loading...</div>}>\n              <Comp jsPanel={jsPanel} />\n            </Suspense>\n          )}\n        </CreatePortal>\n      );\n    });\n  }\n\n  render() {\n    const jsPanels = Object.keys(this.state.panels);\n    const actionButtonProps = {\n      className: 'btn btn-outline-primary ml-2 mb-2',\n      handleClick: this.createJsPanel\n    };\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row bg-dark text-white shadow p-2\">\n          <div className=\"col-md-12\">\n            <h4 className=\"text-center\">jsPanel with react</h4>\n          </div>\n        </div>\n        <div className=\"row justify-content-center mt-4\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <ActionButton {...actionButtonProps} title=\"Simple Example\" comp={DisplayName} />\n              <ActionButton {...actionButtonProps} title=\" Countries List\" comp={Countries} />\n              <ActionButton {...actionButtonProps} title=\"Todo App\" comp={TodoApp} />\n              <ActionButton {...actionButtonProps} title=\"Sample Users\" comp={SampleUsers} />\n              <ActionButton {...actionButtonProps} title=\"Random Image\" comp={RandomImage} />\n              <ActionButton {...actionButtonProps} title=\"Modal Example\" comp={Clock} modal={true} />\n              <ActionButton {...actionButtonProps} title=\"Multiple Components\" comp={[Clock, DisplayName, RandomImage, Countries]} />\n            </div>\n          </div>\n        </div>\n        {jsPanels.length > 0 && this.renderJsPanlesInsidePortal()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}