{"version":3,"sources":["components/Header/Header.js","components/Mqtt/Connection.js","components/Mqtt/Receiver.js","components/Mqtt/index.js","components/Body/Body.js","components/Footer/Footer.js","components/ConnectionForm/ConnectionForm.js","components/Sidebar/Sidebar.js","components/Main/Page.js","components/CreatePanel/inputs.js","components/CreatePanel/CreatePanel.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContent","props","id","className","Connection","connect","disconnect","sub","connectBtn","unSub","showUnsub","Form","useForm","form","record","host","clientId","Math","random","toString","substr","port","topic","qos","ConnectionForm","layout","name","initialValues","onFinish","values","console","log","username","password","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","payload","retain","rejectUnauthorized","gutter","span","Item","label","offset","style","textAlign","type","htmlType","marginLeft","onClick","getFieldsValue","title","Receiver","useState","messages","setMessages","useEffect","size","bordered","dataSource","renderItem","item","Meta","description","message","QosOption","Menu","SubMenu","createContext","qosOption","value","HookMqtt","client","setClient","isSubed","setIsSub","setPayload","connectStatus","setConnectStatus","on","err","error","end","Provider","mqttOption","mqtt","subscription","subscribe","unsubscribe","BodyContent","padding","minHeight","FooterContent","Sider","Layout","SidebarContent","collapsed","collapseFunction","collapsible","onCollapse","e","theme","defaultSelectedKeys","mode","icon","ApartmentOutlined","TeamOutlined","Page","sendUpdate","window","param","document","getElementById","CreatePanel","order","items","ui_settings","width","height","x","y","panelDiv","createElement","forEach","itemName","currentValue","p_id","min","max","step","current","div","lbl","inp","rng","textContent","appendChild","oninput","this","createSlider","checked","createBoolean","jsPanel","create","headerLogo","headerTitle","panelSize","innerWidth","innerHeight","position","animateIn","onwindowresize","content","onbeforeclose","confirm","msg","App","Boolean","location","hostname","match","ReactDOM","render"],"mappings":"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","file":"static/js/main.e2b1a954.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css'\n\nfunction HeaderContent(props){\n    return (\n        <div id=\"header\" className = \"site-layout-background\" >\n            <div id=\"logo-div\"></div>\n            <h3>nin - Deepknowledge Group</h3>\n        </div>\n    );\n}\n\nexport default HeaderContent;","import React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\n\nconst Connection = ({ connect, disconnect, connectBtn, sub, unSub, showUnsub }) => {\n\tconst [form] = Form.useForm();\n\tconst record = {\n\t\thost    : '127.0.0.1',\n\t\tclientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n\t\tport    : 8083,\n\t\ttopic   : 'from_server/#',\n\t\tqos     : 0,\n\t};\n\tconst onFinish = (values) => {\n\t\tconsole.log('Connection onFinish')\n\t\tconst { host, port, clientId, topic, qos, username, password } = values;\n\t\tconst url = `ws://${host}:${port}/mqtt`;\n\t\tconst options = {\n\t\t\tkeepalive      : 30,\n\t\t\tprotocolId     : 'MQTT',\n\t\t\tprotocolVersion: 4,\n\t\t\tclean          : true,\n\t\t\treconnectPeriod: 1000,\n\t\t\tconnectTimeout : 30 * 1000,\n\t\t\twill: {\n\t\t\t\ttopic: 'WillMsg',\n\t\t\t\tpayload: 'Connection Closed abnormally..!',\n\t\t\t\tqos: 0,\n\t\t\t\tretain: false\n\t\t\t},\n\t\t\trejectUnauthorized: false\n\t\t};\n\t\toptions.clientId = clientId;\n\t\toptions.topic    = topic;\n\t\toptions.username = username;\n\t\toptions.password = password;\n\t\tconnect(url, options);\n\t\tsub({topic:topic, qos:0});\n\t};\n\n\n\t// const onFinish = (values) => {\n\t// \tconsole.log('Subscriber onFinish');\n\t// \tsub(values);\n\t// };\n\n\tconst handleUnsub = () => {\n\t\tconst values = form.getFieldsValue();\n\t\tunSub(values);\n\t\tdisconnect()\n\t};\n\n\n\tconst handleConnect = () => {\n\t\tconsole.log('Connection handleConnect')\n\t\tform.submit();\n\t};\n\n\tconst handleDisconnect = () => {\n\t\tdisconnect();\n\t};\n\n\tconst ConnectionForm = (\n\t\t<Form\n\t\t\tlayout=\"vertical\"\n\t\t\tname=\"basic\"\n\t\t\tform={form}\n\t\t\tinitialValues={record}\n\t\t\tonFinish={onFinish}\n\t\t>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Host\"\n\t\t\t\t\t\tname=\"host\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Port\"\n\t\t\t\t\t\tname=\"port\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Client ID\"\n\t\t\t\t\t\tname=\"clientId\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Topic\"\n\t\t\t\t\t\tname=\"topic\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8} offset={16} style={{ textAlign: 'right' }}>\n\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\tSubscribe\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowUnsub ?\n\t\t\t\t\t\t\t\t<Button type=\"danger\" style={{ marginLeft: '10px' }} onClick={handleUnsub}>\n\t\t\t\t\t\t\t\t\tUnsubscribe\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t)\n\n\treturn (\n\t\t<Card\n\t\t\ttitle=\"Connection\"\n\t\t\t// actions={[\n\t\t\t// \t<Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>,\n\t\t\t// \t<Button danger onClick={handleDisconnect}>Disconnect</Button>\n\t\t\t// ]}\n\t\t>\n\t\t\t{ConnectionForm}\n\t\t</Card>\n\t);\n}\n\nexport default Connection;\n","import React, { useEffect, useState } from 'react';\nimport { Card, List } from 'antd';\n\nconst Receiver = ({ payload }) => {\n  const [messages, setMessages] = useState([])\n\n  useEffect(() => {\n    if (payload.topic) {\n      setMessages(messages => [...messages, payload])\n    }\n  }, [payload])\n\n  const renderListItem = (item) => (\n    <List.Item>\n      <List.Item.Meta\n        title={item.topic}\n        description={item.message}\n      />\n    </List.Item>\n  )\n\n  return (\n    <Card\n      title=\"Receiver\"\n    >\n      <List\n        size=\"small\"\n        bordered\n        dataSource={messages}\n        renderItem={renderListItem}\n      />\n    </Card>\n  );\n}\n\nexport default Receiver;\n","import React, { createContext, useEffect, useState } from 'react';\nimport Connection from './Connection';\nimport Publisher from './Publisher';\nimport Subscriber from './Subscriber';\nimport Receiver from './Receiver';\nimport mqtt from 'mqtt';\n\nimport { ApartmentOutlined,\tTeamOutlined }  from '@ant-design/icons';\n\nimport {  Menu } from 'antd';\nconst {SubMenu} = Menu;\n\nexport const QosOption = createContext([])\nconst qosOption = [\n\t{\n\t\tlabel: '0',\n\t\tvalue: 0,\n\t}, {\n\t\tlabel: '1',\n\t\tvalue: 1,\n\t}, {\n\t\tlabel: '2',\n\t\tvalue: 2,\n\t},\n];\n\nconst HookMqtt = () => {\n\tconst [client, setClient] = useState(null);\n\tconst [isSubed, setIsSub] = useState(false);\n\tconst [payload, setPayload] = useState({});\n\tconst [connectStatus, setConnectStatus] = useState('Connect');\n\n\tconst mqttConnect = (host, mqttOption) => {\n\t\tsetConnectStatus('Connecting');\n\t\tsetClient(mqtt.connect(host, mqttOption));\n\t};\n\n\tuseEffect(() => {\n\t\tif (client) {\n\t\t\tclient.on('connect', () => {\n\t\t\t\tsetConnectStatus('Connected');\n\t\t\t});\n\t\t\tclient.on('error', (err) => {\n\t\t\t\tconsole.error('Connection error: ', err);\n\t\t\t\tclient.end();\n\t\t\t});\n\t\t\tclient.on('reconnect', () => {\n\t\t\t\tsetConnectStatus('Reconnecting');\n\t\t\t});\n\t\t\tclient.on('message', (topic, message) => {\n\t\t\t\tconst payload = { topic, message: message.toString() };\n\t\t\t\tsetPayload(payload);\n\t\t\t});\n\t\t}\n\t}, [client]);\n\n\tconst mqttDisconnect = () => {\n\t\tif (client) {\n\t\t\tclient.end(() => {\n\t\t\t\tsetConnectStatus('Connect');\n\t\t\t});\n\t\t}\n\t}\n\n\tconst mqttPublish = (context) => {\n\t\tif (client) {\n\t\t\tconst { topic, qos, payload } = context;\n\t\t\tclient.publish(topic, payload, { qos }, error => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log('Publish error: ', error);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tconst mqttSub = (subscription) => {\n\t\tif (client) {\n\t\t\tconst { topic, qos } = subscription;\n\t\t\tclient.subscribe(topic, { qos }, (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log('Subscribe to topics error', error)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tsetIsSub(true)\n\t\t\t});\n\t\t}\n\t};\n\n\tconst mqttUnSub = (subscription) => {\n\t\tif (client) {\n\t\t\tconst { topic } = subscription;\n\t\t\tclient.unsubscribe(topic, error => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log('Unsubscribe error', error)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tsetIsSub(false);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{/* <SubMenu   key = \"sub1\" icon = {<ApartmentOutlined />} title = \"Connection\">\n\t\t\t\t<QosOption.Provider value={qosOption}>\n\t\t\t\t\t<Connection\n\t\t\t\t\t\tconnect={mqttConnect}\n\t\t\t\t\t\tdisconnect={mqttDisconnect}\n\t\t\t\t\t\tconnectBtn={connectStatus}\n\t\t\t\t\t\tsub={mqttSub}\n\t\t\t\t\t\tunSub={mqttUnSub}\n\t\t\t\t\t\tshowUnsub={isSubed}\n\t\t\t\t\t/>\n\t\t\t\t</QosOption.Provider>\n\t\t\t</SubMenu>\n\t\t\t<SubMenu   key = \"sub2\" icon = {<ApartmentOutlined />} title = \"Connection\">\n\t\t\t\t<Receiver payload={payload}/>\t\t\n\t\t\t</SubMenu> */}\n\n\t\t\t<QosOption.Provider value={qosOption}>\n\t\t\t\t\t<Connection\n\t\t\t\t\t\tconnect={mqttConnect}\n\t\t\t\t\t\tdisconnect={mqttDisconnect}\n\t\t\t\t\t\tconnectBtn={connectStatus}\n\t\t\t\t\t\tsub={mqttSub}\n\t\t\t\t\t\tunSub={mqttUnSub}\n\t\t\t\t\t\tshowUnsub={isSubed}\n\t\t\t\t\t/>\n\t\t\t\t</QosOption.Provider>\n\t\t\t<Receiver payload={payload}/>\t\t\n\t\t</>\n\t);\n}\n\nexport default HookMqtt;\n","import React    from 'react';\n\n\nimport './Body.css'\nimport HookMqtt from '../Mqtt/index'\n\n\nfunction BodyContent(props) {\n    return (\n        <div id=\"body-div\" >\n            {/* <div className = \"site-layout-background\" style = {{ padding: 24, minHeight: '100vh' }} > */}\n            <div className=\"container-fluid\" style = {{ padding: 24, minHeight: '100vh' }}>\n\t\t\t\t{/* <HookMqtt id='mqtt' /> */}\n                doQuer\n\t\t\t</div>\n            {/* </div> */}\n        </div>\n    );\n}\n\nexport default BodyContent;","import React from 'react';\nimport './Footer.css'\n\nfunction FooterContent(props) {\n    return (\n        <div id=\"footer-div\">\n            <div>Item 1</div>\n            <div>Item 2</div>\n            <div>Item 3</div>\n            <div>Item 4</div>\n        </div>\n    );\n}\n\nexport default FooterContent;","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport AppendScript from '../../js/appendScript'\n\nimport './ConnectionForm.css'\nimport {onFinish, onFinishFailed} from './LogicConnectionForm'\n\n// import Paho from '../../js/pahoMqtt'\n\nconst layout = {\n\tlabelCol: \t{ span: 8, },\n\twrapperCol: { span: 16,\t},\n};\n\nconst tailLayout = {\n\twrapperCol: { offset: 8, span: 16, },\n};\n\nfunction ConnectionForm() {\n\n\t// AppendScript(\"https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.2/mqttws31.min.js\");\n\t// const s = new Paho.MQTT.Client('123.123.123.123', 8083, 123);\n\t// console.log(s)\n\n\treturn (\n\t\t<Form\n\t\t\t{...layout}\n\t\t\tid=\"connection-form\"\n\t\t\tname=\"connection-form\"\n\t\t\tinitialValues={{ remember: true, }}\n\t\t\tonFinish={onFinish}\n\t\t\tonFinishFailed={onFinishFailed}\n\t\t>\n\t\t\t<Form.Item\n\t\t\t\tlabel=\"IP\"\n\t\t\t\tname=\"ip\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: 'Ip value', // This message will be displayed when user try to submit the form with empty port field.\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input id=\"ip\" />\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\t\n\t\t\t\tlabel=\"Port\"\n\t\t\t\tname=\"port\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: 'Port number', // This message will be displayed when user try to submit the form with empty port field.\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input id=\"port\" />\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item id=\"form-button-div\" {...tailLayout}>\n\t\t\t\t<Button id=\"connect-button\" type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\tConnect\n\t\t\t\t</Button>\n\t\t\t\t<Button id=\"disconnect-button\" type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\tDiscon.\n\t\t\t\t</Button>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t);\n};\n\nexport default ConnectionForm","import React, { useState } from 'react';\n\nimport HookMqtt from '../Mqtt/index'\n\nimport { Layout, Menu }                     from 'antd';\nimport { ApartmentOutlined,\tTeamOutlined }  from '@ant-design/icons';\nimport ConnectionForm                       from '../ConnectionForm/ConnectionForm'\n\nimport './Sidebar.css'\n\nconst { Sider }     = Layout;\nconst { SubMenu }   = Menu;\n\n\nfunction SidebarContent(props) {\n\n    const [collapsed, collapseFunction] = useState(true);\n\n    const onCollapse = (e) => {\n\t\tconsole.log(collapsed);\n        collapseFunction(e);\n\t};\n\n    return(\n        <Sider id='sideBar' collapsible collapsed={collapsed} onCollapse={onCollapse}>\n            <Menu theme='dark' id=\"sidebar-menu\" defaultSelectedKeys = {['1']} mode = \"inline\">\n                <SubMenu   key = \"sub1\" icon = {<ApartmentOutlined />} title = \"Connection\">\n                    {/* <ConnectionForm /> */}\n                    <HookMqtt id='mqtt' />\n                </SubMenu>\n                <SubMenu   key = \"sub2\" icon = {<TeamOutlined />} title = \"A thing\">\n                    <Menu.Item key = \"6\">Team 10</Menu.Item>\n                    <Menu.Item key = \"8\">Team 20</Menu.Item>\n                </SubMenu>\n            </Menu>\n        </Sider>\n    );\n}\n\nexport default SidebarContent;\n\n","import React from 'react';\n\nimport { Layout }     from 'antd';\nimport HeaderContent  from './../Header/Header'\nimport BodyContent    from './../Body/Body'\nimport FooterContent  from './../Footer/Footer'\nimport SidebarContent from './../Sidebar/Sidebar'\n\nimport 'antd/dist/antd.css';\n\nfunction Page (props) {\n    return (\n        <Layout style={{ minHeight: '100vh' }} >\n            <SidebarContent />\n            <Layout className=\"site-layout\">\n                <HeaderContent />\n                <BodyContent />\n                <FooterContent />\n            </Layout>\n        </Layout> \n    );\n}\n\nexport default Page;","// import { jsPanel } from 'jspanel4/es6module/jspanel';\nimport 'jspanel4/es6module/extensions/modal/jspanel.modal';\nimport 'jspanel4/dist/jspanel.min.css';\nimport './CreatePanel.css'\n\n\nexport function sendUpdate(window, param, value ){\n    // // Publish a Message thet contains: update instruction + window title + param + new value\n    // var message = new Paho.MQTT.Message('Update/' + window + '/' + param + '/' + value);\n    // message.destinationName = 'from_client/evacuation/';\n    // message.qos = 0;\n    // client.send(message);\n\n    const mqtt = document.getElementById('mqtt')\n    console.log(window,param,value, mqtt)\n\n    // return(\n    //     <HookMqtt />\n    // );\n}\n\n// This function creates a new slider in a window\n// panelDiv is the element the new slider must be added to\n// window is the name of the window the parameter belongs to\n// p_id is the name of the parameter (label of the slider)\n// min slider value\n// max slider value\n// step determines the slider step\n// current It is used to give to the slider a initial value\nexport function createSlider(panelDiv, window, p_id,min,max,step,current){\n    let div = document.createElement('div');\n    let lbl = document.createElement('label');\n    let inp = document.createElement('input');\n    let rng = document.createElement('input');\n\n    lbl.textContent = p_id;\n\n    inp.type      = 'text';\n    inp.id        = p_id+'Input';\n    inp.className = 'slider_input';\n\n    rng.type  = 'range';\n    rng.id    = p_id+'Range';\n    rng.className = 'slider_range'\n    rng.min   = min;\n    rng.max   = max;\n    rng.step  = step;\n\n    rng.value = current;\n    inp.value = current;\n\n    div.className = 'slidecontainer';\n    div.appendChild(lbl);\n    div.appendChild(inp);\n    div.appendChild(rng);\n\n    // When the slider is moved, input value is updated and an mqtt message is sent\n    rng.oninput = function() {\n        inp.value = this.value;\n        sendUpdate(window, p_id, rng.value)\n    }\n    // The slider is updated when a new input is set\n    inp.oninput = function() {\n        rng.value = this.value;\n        sendUpdate(window, p_id, inp.value)\n    }\n    panelDiv.appendChild(div);\n};\n\n// This function creates a new checkbox input in a window\n// panelDiv is the element the new slider must be added to\n// window is the name of the window the parameter belongs to\n// p_id is the name of the parameter (label of the boolean)\n// current It is used to give to the checkbox a initial value\nexport function createBoolean(panelDiv, window, p_id, current){\n    let div = document.createElement('div');\n    let lbl = document.createElement('label');\n    let inp = document.createElement('input');\n\n    lbl.textContent = p_id;\n\n    inp.type        = 'checkbox';\n    inp.id          = p_id + 'Input';\n    inp.className   = 'boolean_input';\n    inp.value       = current;\n    \n    if (inp.value === 'true') { inp.checked = true; }\n\n    div.className = 'slidecontainer';\n    div.appendChild(lbl);\n    div.appendChild(inp);\n\n    inp.oninput = function() {\n        this.value = (this.value === 'true') ? 'false' : 'true'\n        sendUpdate(window, p_id, inp.value)\n    }\n    panelDiv.appendChild(div);\n};\n\n\n\n","import { jsPanel } from 'jspanel4/es6module/jspanel';\nimport 'jspanel4/es6module/extensions/modal/jspanel.modal';\nimport 'jspanel4/dist/jspanel.min.css';\nimport './CreatePanel.css'\nimport {createSlider, createBoolean} from './inputs'\n\n\nconst CreatePanel = (props) => {\n\t\n\tconst order  = props.order\n\tconst items  = props.ui_settings\n\tconst width  = props.width;\n\tconst height = props.height;\n\tconst title  = props.title;\n\tconst x      = props.x;\n\tconst y      = props.y;\n\n\tconst panelDiv = document.createElement('div');\n\tpanelDiv.className = 'panel_div';\n\tpanelDiv.id = title;\n\n\t// console.log(order)\n\t// createSlider(panelDiv, title, 'slide1', 0, 1, 0.1, 0.5)\n\n\torder.forEach(\n\t\t(itemName) => {\n\t\t\tconst item = items[itemName];\n\t\t\tconst currentValue = props[itemName];\n\n\t\t\tif (item.type === 'slider') \n\t\t\t{\n\t\t\t\tcreateSlider(panelDiv, title, itemName, item.min, item.max, item.step, currentValue)\n\t\t\t} \n\t\t\telse if (item.type === 'boolean') \n\t\t\t{\n\t\t\t\tcreateBoolean(panelDiv,title, itemName, currentValue)\n\t\t\t};\n\t\t}\n\t);\n\n\tconst newPanel = () => {\n\t\tif (document.getElementById(title)==null) {\n\t\t\tjsPanel.create({\n\t\t\t\ttheme: 'dark',\n\t\t\t\theaderLogo: '<i class=\"fad fa-home-heart ml-2\"></i>',\n\t\t\t\theaderTitle: title,\n\t\t\t\tpanelSize: {\n\t\t\t\t\twidth: () => { return Math.min(width, window.innerWidth*0.9);},\n\t\t\t\t\theight: () => { return Math.min(height, window.innerHeight*0.6);}\n\t\t\t\t},\n\t\t\t\tposition: 'left-top ' + x + ' ' + y,\n\t\t\t\tanimateIn: 'jsPanelFadeIn',\n\t\t\t\tonwindowresize: true,\n\t\t\t\tcontent: panelDiv,\n\t\t\t\t\t\n\t\t\t\tonbeforeclose: function() {\n\t\t\t\t\treturn window.confirm('Do you really want to close the ' + props.title + ' panel?');\n\t\t\t\t}\n\t\t\t});            \n\t\t}\n\t}\n\n\treturn(\n\t\t<div>{newPanel()}</div>\n\t)\n}\n\nexport default CreatePanel\n","\n// import React from 'react';\nimport React from 'react';\nimport Page from './components/Main/Page'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport 'jspanel4/es6module/extensions/modal/jspanel.modal';\nimport 'jspanel4/dist/jspanel.min.css';\n\nimport CreatePanel from './components/CreatePanel/CreatePanel'\n\nimport HookMqtt from './components/Mqtt/index'\n\n// This is used to test jsPanel\nconst msg = {\n\t\"order\": [\n\t\t\"num violents\",\n\t\t\"shooting?\",\n\t\t\"shoot noise\",\n\t\t\"attack prob\",\n\t\t\"success rate\",\n\t\t\"attacker speed\"\n\t],\n\t\"x\": 215,\n\t\"shoot noise\": 0.5,\n\t\"shooting?\": false,\n\t\"y\": 100,\n\t\"num violents\": 1,\n\t\"ui_settings\": {\n\t\t\"attacker speed\": {\n\t\t\t\"type\": \"slider\",\n\t\t\t\"max\": 3.5,\n\t\t\t\"min\": 0,\n\t\t\t\"step\": 0.01\n\t\t},\n\t\t\"attack prob\": {\n\t\t\t\"type\": \"slider\",\n\t\t\t\"max\": 1.000001,\n\t\t\t\"min\": 0,\n\t\t\t\"step\": 0.01\n\t\t},\n\t\t\"shooting?\": {\n\t\t\t\"type\": \"boolean\"\n\t\t},\n\t\t\"num violents\": {\n\t\t\t\"type\": \"slider\",\n\t\t\t\"max\": 10,\n\t\t\t\"min\": 0,\n\t\t\t\"step\": 1\n\t\t},\n\t\t\"shoot noise\": {\n\t\t\t\"type\": \"slider\",\n\t\t\t\"max\": 1.000001,\n\t\t\t\"min\": 0,\n\t\t\t\"step\": 0.01\n\t\t},\n\t\t\"success rate\": {\n\t\t\t\"type\": \"slider\",\n\t\t\t\"max\": 1.000001,\n\t\t\t\"min\": 0,\n\t\t\t\"step\": 0.01\n\t\t}\n\t},\n\t\"success rate\": 0.5,\n\t\"title\": \"violents\",\n\t\"width\": 200,\n\t\"num_items\": 6,\n\t\"attack prob\": 0.8,\n\t\"height\": 300,\n\t\"attacker speed\": 0.75\n}\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Page />\n\t\t\t<CreatePanel {...msg} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n","//\n// THIS IS NOT USED IN NIN YET\n//\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t.register(swUrl)\n\t.then(registration => {\n\t\tregistration.onupdatefound = () => {\n\t\t\tconst installingWorker = registration.installing;\n\t\t\tif (installingWorker == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t})\n\t.catch(error => {\n\t\tconsole.error('Error during service worker registration:', error);\n\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}