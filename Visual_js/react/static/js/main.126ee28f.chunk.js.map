{"version":3,"sources":["components/Header/Header.js","components/Hook/Connection.js","components/Hook/Publisher.js","components/Hook/Subscriber.js","components/CreatePanel/CreatePanelLogic.js","components/InputSlider/InputSlider.js","components/InputBoolean/InputBoolean.js","components/CreatePanel/CreatePanel.js","components/Hook/Receiver.js","components/Hook/index.js","components/Body/Body.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","components/Page/Page.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContent","props","id","className","Connection","connect","disconnect","connectBtn","Form","useForm","form","record","host","clientId","Math","random","toString","substr","port","topic","ConnectionForm","layout","name","initialValues","onFinish","values","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","payload","qos","retain","rejectUnauthorized","gutter","span","Item","label","type","onClick","submit","danger","title","Publisher","publish","PublishForm","useContext","QosOption","onChange","value","elements","document","getElementsByClassName","length","parentNode","removeChild","removeElementsByClass","fileName","target","files","dirName","split","console","log","min","max","defaultValue","Subscriber","sub","unSub","showUnsub","qosOptions","SubForm","htmlType","style","marginLeft","getFieldsValue","sendUpdate","windowTitle","param","pub","InputSlider","panelDiv","paramName","step","current","div","createElement","lbl","inp","rng","textContent","appendChild","oninput","this","InputBoolean","p_id","checked","CreatePanel","order","items","ui_settings","width","height","x","y","forEach","itemName","item","currentValue","createSlider","createBoolean","getElementById","jsPanel","create","theme","headerLogo","headerTitle","panelSize","window","innerWidth","innerHeight","position","animateIn","onwindowresize","content","onbeforeclose","confirm","Receiver","useState","messages","setMessages","useEffect","includes","jsonObject","JSON","parse","message","Object","entries","k","v","createWindow","size","bordered","dataSource","renderItem","Meta","description","maxHeight","overflow","createContext","qosOption","HookMqtt","client","setClient","isSubed","setIsSub","setPayload","connectStatus","setConnectStatus","on","err","error","end","mqttPublish","context","mqttOption","mqtt","Provider","subscription","subscribe","unsubscribe","BodyContent","padding","minHeight","Hook","FooterContent","Sider","Layout","SubMenu","Menu","SidebarContent","collapsed","collapseFunction","collapsible","onCollapse","e","defaultSelectedKeys","mode","icon","ApartmentOutlined","TeamOutlined","Page","App","Boolean","location","hostname","match","ReactDOM","render"],"mappings":"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","file":"static/js/main.126ee28f.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css'\n\nfunction HeaderContent(props){\n    return (\n        <div id=\"header\" className = \"site-layout-background\" >\n            <div id=\"logo-div\"></div>\n            <h3>nin - Deepknowledge Group</h3>\n        </div>\n    );\n}\n\nexport default HeaderContent;","import React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\n\nconst Connection = ({ connect, disconnect, connectBtn }) => {\n\tconst [form] = Form.useForm();\n\tconst record = {\n\t\thost: '127.0.0.1',\n\t\tclientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n\t\tport: 8083,\n\t\ttopic: 'from_client/#'\n\t};\n\tconst onFinish = (values) => {\n\t\tconst { host, port } = values;\n\t\tconst qos = 0;\n\t\tconst url = `ws://${host}:${port}/mqtt`;\n\t\tconst options = {\n\t\t\tkeepalive: 30,\n\t\t\tprotocolId: 'MQTT',\n\t\t\tprotocolVersion: 4,\n\t\t\tclean: true,\n\t\t\treconnectPeriod: 1000,\n\t\t\tconnectTimeout: 30 * 1000,\n\t\t\twill: {\n\t\t\t\ttopic: 'WillMsg',\n\t\t\t\tpayload: 'Connection Closed abnormally..!',\n\t\t\t\tqos: 0,\n\t\t\t\tretain: false\n\t\t\t},\n\t\t\trejectUnauthorized: false\n\t\t};\n\t\toptions.clientId = record.clientId;\n\t\t\n\t\tconnect(url, options);\n\t};\n\n\tconst handleConnect = () => {\n\t\tform.submit();\n\t};\n\n\tconst handleDisconnect = () => {\n\t\tdisconnect();\n\t};\n\n\tconst ConnectionForm = (\n\t\t<Form\n\t\t\tlayout=\"vertical\"\n\t\t\tname=\"basic\"\n\t\t\tform={form}\n\t\t\tinitialValues={record}\n\t\t\tonFinish={onFinish}\n\t\t>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Host\"\n\t\t\t\t\t\tname=\"host\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Port\"\n\t\t\t\t\t\tname=\"port\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\t\t\t\t\n\t\t\t\t\t<Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>\n\t\t\t\t\t<Button danger onClick={handleDisconnect}>Disconnect</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t)\n\n\treturn (\n\t\t<Card title=\"Connection\" >\n\t\t\t{ConnectionForm}\n\t\t</Card>\n\t);\n}\n\nexport default Connection;\n","import React, { useContext } from 'react';\nimport { Card, Form, Input, Row, Col, Button, Select, Slider } from 'antd';\nimport { QosOption } from './index'\n\nconst Publisher = ({ publish }) => {\n\tconst [form] = Form.useForm();\n\tconst qosOptions = useContext(QosOption);\n\n\tconst removeElementsByClass = (className) => {\n\t\tconst elements = document.getElementsByClassName(className);\n\t\twhile(elements.length > 0){\n\t\t\telements[0].parentNode.removeChild(elements[0]);\n\t\t}\n\t}\n\n\tconst modelLoad = (value) => {\n\t\t// New panels are created with class 'panel_div', we need to remove this elements before create new ones\n\t\tremoveElementsByClass('jsPanel')\n\n\t\t// In the Lua side, models must be created in a folder named as the model file and this folder must be placed inside the Resources folder\n\t\tconst fileName = value.target.files[0].name\n\t\tconst dirName = fileName.split('.')[0]\n\n\t\tconsole.log('Load:' + dirName + '/' + fileName)\n\n\t\tpublish({\n\t\t\ttopic: 'from_client',\n\t\t\tqos: 0,\n\t\t\tpayload: 'Load|' + dirName + '/' + fileName\n\t\t})\n\t};\n\n\tconst modelSetup = () => {\n\t\tpublish({\n\t\t\ttopic: 'from_client',\n\t\t\tqos: 0,\n\t\t\tpayload: 'Setup'\n\t\t})\n\t};\n\n\tconst modelStep = () => {\n\t\tpublish({\n\t\t\ttopic: 'from_client',\n\t\t\tqos: 0,\n\t\t\tpayload: 'Step'\n\t\t})\n\t};\n\n\tconst modelRun = () => {\n\t\tpublish({\n\t\t\ttopic: 'from_client',\n\t\t\tqos: 0,\n\t\t\tpayload: 'Run'\n\t\t})\n\t};\n\n\tconst modelSpeed = (value) => {\n\t\tpublish({\n\t\t\ttopic: 'from_client',\n\t\t\tqos: 0,\n\t\t\tpayload: 'Speed:'+value\n\t\t})\n\t};\n\n\tconst modelViewStats = () => {\n\t\tpublish({\n\t\t\ttopic: 'from_client',\n\t\t\tqos: 0,\n\t\t\tpayload: 'ToggleView:Stats'\n\t\t})\n\t};\n\n\tconst modelViewWindows = () => {\n\t\tpublish({\n\t\t\ttopic: 'from_client',\n\t\t\tqos: 0,\n\t\t\tpayload: 'ToggleView:Windows'\n\t\t})\n\t};\n\n\tconst modelViewFamilies = () => {\n\t\tpublish({\n\t\t\ttopic: 'from_client',\n\t\t\tqos: 0,\n\t\t\tpayload: 'ToggleView:Families'\n\t\t})\n\t};\n\n\tconst modelViewGrid = () => {\n\t\tpublish({\n\t\t\ttopic: 'from_client',\n\t\t\tqos: 0,\n\t\t\tpayload: 'ToggleView:Grid'\n\t\t})\n\t};\n\n\tconst PublishForm = (\n\t<Form\n\t\tlayout=\"vertical\"\n\t\tname=\"basic\"\n\t\tform={form}\n\t>\n\t\t<Row gutter={20}>\n\t\t\t<Col span={8} >\n\t\t\t\t<Input type='file' onChange={modelLoad}/>\n\t\t\t</Col>\n\t\t\t<Col span={8} >\n\t\t\t\t{/* <Button onClick={modelLoad}>\tLoad\t</Button> */}\n\t\t\t\t<Button onClick={modelSetup}>\tSetup\t</Button>\n\t\t\t\t<Button onClick={modelStep}>\tStep\t</Button>\n\t\t\t\t<Button onClick={modelRun}>\t\tRun\t\t</Button>\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<label>Speed:</label>\n\t\t\t\t<Slider min={1} max={10} defaultValue={10} onChange={modelSpeed} />\n\t\t\t</Col>\n\t\t\t<Col span={8} >\n\t\t\t\t<Button onClick={modelViewStats}> \tview Stats </Button>\n\t\t\t\t<Button onClick={modelViewWindows}> view Windows </Button>\n\t\t\t\t<Button onClick={modelViewFamilies}>view Families </Button>\n\t\t\t\t<Button onClick={modelViewGrid}> \tview Grid </Button>\n\t\t\t</Col>\n\t\t</Row>\n\t</Form>\n\t)\n\n\treturn (\n\t<Card\n\t\ttitle=\"Control Panel\"\n\t>\n\t\t{PublishForm}\n\t</Card>\n\t);\n}\n\nexport default Publisher;\n","import React, { useContext } from 'react';\nimport { Card, Form, Input, Row, Col, Button, Select } from 'antd';\nimport { QosOption } from './index'\n\nconst Subscriber = ({ sub, unSub, showUnsub }) => {\n\tconst [form] = Form.useForm();\n\tconst qosOptions = useContext(QosOption);\n\n\tconst record = {\n\t\ttopic: 'from_server/#',\n\t\tqos: 0,\n\t};\n\n\tconst onFinish = (values) => {\n\t\tsub(values);\n\t};\n\n\tconst handleUnsub = () => {\n\t\tconst values = form.getFieldsValue();\n\t\tunSub(values);\n\t};\n\n\tconst SubForm = (\n\t\t<Form\n\t\t\tlayout=\"vertical\"\n\t\t\tname=\"basic\"\n\t\t\tform={form}\n\t\t\tinitialValues={record}\n\t\t\tonFinish={onFinish}\n\t\t>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Topic\"\n\t\t\t\t\t\tname=\"topic\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"QoS\"\n\t\t\t\t\t\tname=\"qos\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Select options={qosOptions} />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col span={8} >\n\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\tSubscribe\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowUnsub ?\n\t\t\t\t\t\t\t\t<Button type=\"danger\" style={{ marginLeft: '10px' }} onClick={handleUnsub}>\n\t\t\t\t\t\t\t\t\tUnsubscribe\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t)\n\n\treturn (\n\t\t<Card >\n\t\t\t{SubForm}\n\t\t</Card>\n\t);\n}\n\nexport default Subscriber;\n","\nconst sendUpdate = (windowTitle, param, value, pub) => {\n    pub({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'Update/' + windowTitle + '/' + param + '/' + value\n    })\n}\n\n// const anyOtherFunction = ...\n\nexport {\n    sendUpdate,\n    // anyOtherFunction\n}","\n// This function creates a new slider in a window\n// panelDiv is the element the new slider must be added to\n// window is the name of the window the parameter belongs to\n// paramName is the name of the parameter (label of the slider)\n// min slider value\n// max slider value\n// step determines the slider step\n// current It is used to give to the slider a initial value\n\n\nconst InputSlider = (panelDiv, windowTitle, paramName,min,max,step,current, sendUpdate, pub) => {\n    let div = document.createElement('div');\n    let lbl = document.createElement('label');\n    let inp = document.createElement('input');\n    let rng = document.createElement('input');\n\n    lbl.textContent = paramName;\n\n    inp.type      = 'text';\n    inp.id        = paramName+'Input';\n    inp.className = 'slider_input';\n\n    rng.type  = 'range';\n    rng.id    = paramName+'Range';\n    rng.className = 'slider_range'\n    rng.min   = min;\n    rng.max   = max;\n    rng.step  = step;\n\n    rng.value = current;\n    inp.value = current;\n\n    div.className = 'slidecontainer';\n    div.appendChild(lbl);\n    div.appendChild(inp);\n    div.appendChild(rng);\n\n    // When the slider is moved, input value is updated\n    rng.oninput = function() {\n        inp.value = this.value;\n        sendUpdate(windowTitle, paramName, rng.value, pub)\n    }\n    // The slider is updated when a new input is set\n    inp.oninput = function() {\n        rng.value = this.value;\n        sendUpdate(windowTitle, paramName, inp.value, pub)\n    }\n    panelDiv.appendChild(div);\n};\n\n\nexport default InputSlider\n","// This function creates a new checkbox input in a window\n// panelDiv is the element the new slider must be added to\n// paramName is the name of the parameter (label of the boolean)\n// current It is used to give to the checkbox a initial value\nconst InputBoolean = (panelDiv, windowTitle, p_id, current, sendUpdate, pub) => {\n    let div = document.createElement('div');\n    let lbl = document.createElement('label');\n    let inp = document.createElement('input');\n\n    lbl.textContent = p_id;\n\n    inp.type        = 'checkbox';\n    inp.id          = p_id + 'Input';\n    inp.className   = 'boolean_input';\n    inp.value       = current;\n    \n    if (inp.value === 'true') { inp.checked = true; }\n\n    div.className = 'slidecontainer';\n    div.appendChild(lbl);\n    div.appendChild(inp);\n\n    inp.oninput = function() {\n        this.value = (this.value === 'true') ? 'false' : 'true'\n        sendUpdate(windowTitle, p_id, inp.value, pub)\n    }\n    panelDiv.appendChild(div);\n};\n\nexport default InputBoolean\n\n","import { jsPanel } from 'jspanel4/es6module/jspanel';\nimport 'jspanel4/es6module/extensions/modal/jspanel.modal';\nimport 'jspanel4/dist/jspanel.min.css';\nimport './CreatePanel.css'\nimport {sendUpdate} from './CreatePanelLogic'\n\nimport createSlider from '../InputSlider/InputSlider'\nimport createBoolean from '../InputBoolean/InputBoolean'\n\n\nconst CreatePanel = (props, pub) => {\n\t\n\tconst order  = props.order\n\tconst items  = props.ui_settings\n\tconst width  = props.width;\n\tconst height = props.height;\n\tconst title  = props.title;\n\tconst x      = props.x;\n\tconst y      = props.y;\n\n\tconst panelDiv = document.createElement('div');\n\tpanelDiv.className = 'panel_div';\n\tpanelDiv.id = title;\n\n\t// console.log(order)\n\t// createSlider(panelDiv, title, 'slide1', 0, 1, 0.1, 0.5)\n\n\torder.forEach(\n\t\t(itemName) => {\n\t\t\tconst item = items[itemName];\n\t\t\tconst currentValue = props[itemName];\n\n\t\t\tif (item.type === 'slider') \n\t\t\t{\n\t\t\t\tcreateSlider(panelDiv, title, itemName, item.min, item.max, item.step, currentValue, sendUpdate, pub)\n\t\t\t} \n\t\t\telse if (item.type === 'boolean') \n\t\t\t{\n\t\t\t\tcreateBoolean(panelDiv, title, itemName, currentValue, sendUpdate, pub)\n\t\t\t};\n\t\t}\n\t);\n\n\tconst newPanel = () => {\n\t\tif (document.getElementById(title)==null) {\n\t\t\tjsPanel.create({\n\t\t\t\ttheme: 'dark',\n\t\t\t\theaderLogo: '<i class=\"fad fa-home-heart ml-2\"></i>',\n\t\t\t\theaderTitle: title,\n\t\t\t\tpanelSize: {\n\t\t\t\t\twidth: () => { return Math.min(width, window.innerWidth*0.9);},\n\t\t\t\t\theight: () => { return Math.min(height, window.innerHeight*0.6);}\n\t\t\t\t},\n\t\t\t\tposition: 'left-top ' + x + ' ' + y,\n\t\t\t\tanimateIn: 'jsPanelFadeIn',\n\t\t\t\tonwindowresize: true,\n\t\t\t\tcontent: panelDiv,\n\t\t\t\t\t\n\t\t\t\tonbeforeclose: function() {\n\t\t\t\t\treturn window.confirm('Do you really want to close the ' + props.title + ' panel?');\n\t\t\t\t}\n\t\t\t});            \n\t\t}\n\t}\n\n\treturn(\n\t\t<div>{newPanel()}</div>\n\t)\n}\n\nexport default CreatePanel\n","import React, { useEffect, useState } from 'react';\nimport { Card, List } from 'antd';\nimport createWindow from '../CreatePanel/CreatePanel'\n\nconst Receiver = ({ payload, publish }) => {\n\tconst [messages, setMessages] = useState([])\n\n\tuseEffect(() => {\n\t\tif (payload.topic) {\n\t\t\tsetMessages(messages => [...messages, payload]);\n\t\t\tif (payload.topic.includes('panel_info') ) {\n\n\t\t\t\tconsole.log('--- start ---')\n\t\t\t\tconst jsonObject = JSON.parse(payload.message)\n\n\t\t\t\tfor (const [k,v] of Object.entries(jsonObject) ) {\n\t\t\t\t\tif (k == 'Monitor') {console.log('Creando ventana: ', k)}\n\t\t\t\t\tcreateWindow(v, publish)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('--- end ---')\n\t\t\t}\n\t\t}\n\t}, [payload])\n\n//\n\t// const [panels, setPanels] = useState( new Map() )\n\n\t// useEffect( () => {\n\t// \tfor (let panel of panels.keys()) {\n\t// \t\tconsole.log(panel);\n\t// \t}\n\t// }, [panels])\n//\n\n\tconst renderListItem = (item) => (\n\t\t<List.Item>\n\t\t\t<List.Item.Meta\n\t\t\t\ttitle={item.topic}\n\t\t\t\tdescription={item.message}\n\t\t\t/>\n\t\t</List.Item>\n\t)\n\n\treturn (\n\t\t<Card title=\"Receiver\">\n\t\t\t<List\n\t\t\t\tsize=\"small\"\n\t\t\t\tbordered\n\t\t\t\tdataSource={messages}\n\t\t\t\trenderItem={renderListItem}\n\t\t\t\tstyle={{maxHeight:'15em' ,overflow:'scroll'}}\n\t\t\t/>\n\t\t</Card>\n\t\t// <Card />\t\n\t);\n}\n\nexport default Receiver;\n","import React, { createContext, useEffect, useState } from 'react';\nimport Connection from './Connection';\nimport Publisher from './Publisher';\nimport Subscriber from './Subscriber';\nimport Receiver from './Receiver';\nimport mqtt from 'mqtt';\n\nexport const QosOption = createContext([])\nconst qosOption = [\n  {\n    label: '0',\n    value: 0,\n  }, {\n    label: '1',\n    value: 1,\n  }, {\n    label: '2',\n    value: 2,\n  },\n];\n\nconst HookMqtt = () => {\n  const [client, setClient] = useState(null);\n  const [isSubed, setIsSub] = useState(false);\n  const [payload, setPayload] = useState({});\n  const [connectStatus, setConnectStatus] = useState('Connect');\n\n  const mqttConnect = (host, mqttOption) => {\n    setConnectStatus('Connecting');\n    setClient(mqtt.connect(host, mqttOption));\n  };\n\n  useEffect(() => {\n    if (client) {\n      client.on('connect', () => {\n        setConnectStatus('Connected');\n      });\n      client.on('error', (err) => {\n        console.error('Connection error: ', err);\n        client.end();\n      });\n      client.on('reconnect', () => {\n        setConnectStatus('Reconnecting');\n      });\n      client.on('message', (topic, message) => {\n        const payload = { topic, message: message.toString() };\n        setPayload(payload);\n      });\n    }\n  }, [client]);\n\n  const mqttDisconnect = () => {\n    if (client) {\n      client.end(() => {\n        setConnectStatus('Connect');\n      });\n    }\n  }\n\n  const mqttPublish = (context) => {\n    if (client) {\n      const { topic, qos, payload } = context;\n      client.publish(topic, payload, { qos }, error => {\n        if (error) {\n          console.log('Publish error: ', error);\n        }\n      });\n    }\n  }\n\n  const mqttSub = (subscription) => {\n    if (client) {\n      const { topic, qos } = subscription;\n      client.subscribe(topic, { qos }, (error) => {\n        if (error) {\n          console.log('Subscribe to topics error', error)\n          return\n        }\n        setIsSub(true)\n      });\n    }\n  };\n\n  const mqttUnSub = (subscription) => {\n    if (client) {\n      const { topic } = subscription;\n      client.unsubscribe(topic, error => {\n        if (error) {\n          console.log('Unsubscribe error', error)\n          return\n        }\n        setIsSub(false);\n      });\n    }\n  };\n\n  return (\n    <>\n      <Connection connect={mqttConnect} disconnect={mqttDisconnect} connectBtn={connectStatus} />\n      <QosOption.Provider value={qosOption}>\n        <Subscriber sub={mqttSub} unSub={mqttUnSub} showUnsub={isSubed} />\n        <Publisher publish={mqttPublish} />\n      </QosOption.Provider>\n      <Receiver payload={payload} publish={mqttPublish} />\n    </>\n  );\n}\n\nexport default HookMqtt;","import React    from 'react';\n\n\nimport './Body.css'\nimport HookMqtt from '../Hook/index'\n\n\nfunction BodyContent(props) {\n    return (\n        <div id=\"body-div\" >\n            {/* <div className = \"site-layout-background\" style = {{ padding: 24, minHeight: '100vh' }} > */}\n            <div className=\"container-fluid\" style = {{ padding: 24, minHeight: '100vh' }}>\n\t\t\t\t<HookMqtt id='mqtt' />\n                final\n\t\t\t</div>\n            {/* </div> */}\n        </div>\n    );\n}\n\nexport default BodyContent;","import React from 'react';\nimport './Footer.css'\n\nfunction FooterContent(props) {\n    return (\n        <div id=\"footer-div\">\n            <div>Item 1</div>\n            <div>Item 2</div>\n            <div>Item 3</div>\n            <div>Item 4</div>\n        </div>\n    );\n}\n\nexport default FooterContent;","import React, { useState } from 'react';\n\nimport HookMqtt from '../Hook/index'\n\nimport { Layout, Menu }                     from 'antd';\nimport { ApartmentOutlined,\tTeamOutlined }  from '@ant-design/icons';\n\nimport './Sidebar.css'\n\nconst { Sider }     = Layout;\nconst { SubMenu }   = Menu;\n\n\nfunction SidebarContent(props) {\n\n    const [collapsed, collapseFunction] = useState(true);\n\n    const onCollapse = (e) => {\n\t\tconsole.log(collapsed);\n        collapseFunction(e);\n\t};\n\n    return(\n        <Sider id='sideBar' collapsible collapsed={collapsed} onCollapse={onCollapse}>\n            <Menu theme='dark' id=\"sidebar-menu\" defaultSelectedKeys = {['1']} mode = \"inline\">\n                <SubMenu   key = \"sub1\" icon = {<ApartmentOutlined />} title = \"Connection\">\n                    <HookMqtt id='mqtt' />\n                </SubMenu>\n                <SubMenu   key = \"sub2\" icon = {<TeamOutlined />} title = \"A thing\">\n                    <Menu.Item key = \"6\">Team 10</Menu.Item>\n                    <Menu.Item key = \"8\">Team 20</Menu.Item>\n                </SubMenu>\n            </Menu>\n        </Sider>\n    );\n}\n\nexport default SidebarContent;\n\n","import React from 'react';\n\nimport { Layout }     from 'antd';\nimport HeaderContent  from './../Header/Header'\nimport BodyContent    from './../Body/Body'\nimport FooterContent  from './../Footer/Footer'\nimport SidebarContent from './../Sidebar/Sidebar'\n\nimport 'antd/dist/antd.css';\n\nfunction Page (props) {\n    return (\n        <Layout style={{ minHeight: '100vh' }} >\n            <SidebarContent />\n            <Layout className=\"site-layout\">\n                <HeaderContent />\n                <BodyContent />\n                <FooterContent />\n            </Layout>\n        </Layout> \n    );\n}\n\nexport default Page;","\n// import React from 'react';\nimport React from 'react';\nimport Page from './components/Page/Page'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport 'jspanel4/es6module/extensions/modal/jspanel.modal';\nimport 'jspanel4/dist/jspanel.min.css';\n\nimport CreatePanel from './components/CreatePanel/CreatePanel'\n\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Page />\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n","//\n// THIS IS NOT USED IN NIN YET\n//\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t.register(swUrl)\n\t.then(registration => {\n\t\tregistration.onupdatefound = () => {\n\t\t\tconst installingWorker = registration.installing;\n\t\t\tif (installingWorker == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t})\n\t.catch(error => {\n\t\tconsole.error('Error during service worker registration:', error);\n\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}