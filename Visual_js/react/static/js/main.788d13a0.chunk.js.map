{"version":3,"sources":["components/Header/Header.js","components/Mqtt/Connection/Connection.js","components/Mqtt/Publisher/publisherLogic.js","components/Mqtt/Publisher/Publisher.js","components/Mqtt/Subscriber/Subscriber.js","components/CreatePanel/CreatePanelLogic.js","components/InputSlider/InputSlider.js","components/InputBoolean/InputBoolean.js","components/CreatePanel/CreatePanel.js","components/D3/Chart/Chart.js","components/Mqtt/Receiver/Receiver.js","components/Mqtt/index.js","components/Body/Body.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","components/Page/Page.js","App.js","index.js"],"names":["HeaderContent","props","id","className","Connection","connect","disconnect","connectBtn","Form","useForm","form","record","host","clientId","Math","random","toString","substr","port","topic","ConnectionForm","layout","name","initialValues","onFinish","values","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","payload","qos","retain","rejectUnauthorized","gutter","span","Item","label","type","onClick","submit","danger","title","modelLoad","value","publish","elements","document","getElementsByClassName","length","parentNode","removeChild","removeElementsByClass","fileName","target","files","split","Publisher","useContext","NewContext","dispatch","state","PublishForm","onChange","modelSetup","modelStep","modelRun","min","max","defaultValue","val","modelSpeed","modelViewStats","modelViewWindows","modelViewFamilies","modelViewGrid","Subscriber","sub","unSub","showUnsub","SubForm","withQos","htmlType","style","marginLeft","getFieldsValue","sendUpdate","windowTitle","param","pub","InputSlider","panelDiv","paramName","step","current","div","createElement","lbl","inp","rng","textContent","appendChild","oninput","this","InputBoolean","p_id","checked","CreatePanel","order","items","ui_settings","width","height","x","y","forEach","itemName","item","currentValue","createSlider","createBoolean","getElementById","jsPanel","create","theme","headerLogo","headerTitle","panelSize","window","innerWidth","innerHeight","position","animateIn","onwindowresize","content","onbeforeclose","confirm","Chart","margin","scaleLinear","range","z","scaleOrdinal","schemeCategory10","line","d3Line","curve","curveBasis","d","time","useState","data","domain","c","map","transform","ref","node","select","call","axisBottom","axisLeft","dy","fill","trackedVar","slice","lastD","stroke","font","Receiver","init","setInit","setMessages","monitors","setmonitors","useEffect","setupClicked","topicOption","jsonObj","Object","entries","k","v","createWindow","keys","targetVar","newInput","push","jsonObject","JSON","parse","message","messages","key","newMonitor","createContext","initialState","changeState","action","HookMqtt","client","setClient","isSubed","setIsSub","setPayload","connectStatus","setConnectStatus","useReducer","on","err","console","error","end","mqttPublish","context","log","Provider","mqttOption","mqtt","subscription","subscribe","unsubscribe","BodyContent","padding","minHeight","FooterContent","Sider","Layout","SubMenu","Menu","SidebarContent","collapsed","collapseFunction","collapsible","onCollapse","e","defaultSelectedKeys","mode","icon","ApartmentOutlined","TeamOutlined","Page","App","ReactDOM","render"],"mappings":"ocAYeA,MATf,SAAuBC,GACnB,OACI,sBAAKC,GAAG,SAASC,UAAY,yBAA7B,UACI,qBAAKD,GAAG,aACR,+D,qEC8EGE,EAlFI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC1C,EAAeC,IAAKC,UAAbC,EAAP,oBACMC,EAAS,CACdC,KAAM,YACNC,SAAS,aAAD,OAAeC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAC5DC,KAAM,KACNC,MAAO,iBAkCFC,EACL,eAAC,IAAD,CACCC,OAAO,WACPC,KAAK,QACLZ,KAAMA,EACNa,cAAeZ,EACfa,SAtCe,SAACC,GACjB,IAAQb,EAAea,EAAfb,KAAMM,EAASO,EAATP,KAERQ,EAAG,eAAWd,EAAX,YAAmBM,EAAnB,SACHS,EAAU,CACfC,UAAW,GACXC,WAAY,OACZC,gBAAiB,EACjBC,OAAO,EACPC,gBAAiB,IACjBC,eAAgB,IAChBC,KAAM,CACLf,MAAO,UACPgB,QAAS,kCACTC,IAAK,EACLC,QAAQ,GAETC,oBAAoB,GAErBX,EAAQd,SAAWF,EAAOE,SAE1BR,EAAQqB,EAAKC,IAYb,UAOC,eAAC,IAAD,CAAKY,OAAQ,GAAb,UACC,cAAC,IAAD,CAAKC,KAAM,EAAX,SACC,cAAC,IAAKC,KAAN,CACCC,MAAM,OACNpB,KAAK,OAFN,SAIC,cAAC,IAAD,QAGF,cAAC,IAAD,CAAKkB,KAAM,EAAX,SACC,cAAC,IAAKC,KAAN,CACCC,MAAM,OACNpB,KAAK,OAFN,SAIC,cAAC,IAAD,WAIH,cAAC,IAAD,CAAKiB,OAAQ,GAAb,SACC,eAAC,IAAD,CAAKC,KAAM,EAAX,UACC,cAAC,IAAD,CAAQG,KAAK,UAAUC,QApCL,WACrBlC,EAAKmC,UAmCF,SAAgDtC,IAChD,cAAC,IAAD,CAAQuC,QAAM,EAACF,QAjCM,WACxBtC,KAgCG,gCAMJ,OACC,cAAC,IAAD,CAAMyC,MAAM,aAAZ,SACE3B,K,SCzES4B,EAAY,SAACC,EAAOC,IAPH,SAAC/C,GAE3B,IADA,IAAMgD,EAAWC,SAASC,uBAAuBlD,GAC3CgD,EAASG,OAAS,GACpBH,EAAS,GAAGI,WAAWC,YAAYL,EAAS,IAMhDM,CAAsB,WAGtB,IAAMC,EAAYT,EAAMU,OAAOC,MAAM,GAAGtC,KAIxC4B,EAAQ,CACJ/B,MAAO,cACPiB,IAAK,EACLD,QAAS,QANIuB,EAASG,MAAM,KAAK,GAMJ,IAAMH,KCkC5BI,EArCG,SAAC,GAAiB,IAAfZ,EAAc,EAAdA,QACpB,EAAe1C,IAAKC,UAAbC,EAAP,oBACA,EAA0BqD,qBAAWC,GAAvBC,GAAd,EAAOC,MAAP,EAAcD,UAERE,EACL,cAAC,IAAD,CAAM9C,OAAO,WAAWC,KAAK,QAAQZ,KAAMA,EAA3C,SACC,eAAC,IAAD,CAAK6B,OAAQ,GAAb,UACC,cAAC,IAAD,CAAKC,KAAM,EAAX,SACC,cAAC,IAAD,CAAOG,KAAK,OAAOyB,SAAU,SAACnB,GAAD,OAAWD,EAAUC,EAAMC,QAEzD,eAAC,IAAD,CAAKV,KAAM,EAAX,UAEC,cAAC,IAAD,CAAQI,QAAS,kBDLI,SAACM,EAASe,GAChCA,EAAS,CAACtB,KAAM,UAChBO,EAAQ,CACJ/B,MAAO,cACPiB,IAAK,EACLD,QAAS,UCASkC,CAAWnB,EAAQe,IAAxC,qBACA,cAAC,IAAD,CAAQrB,QAAS,kBDGG,SAACM,GACtBA,EAAQ,CACJ/B,MAAO,cACPiB,IAAK,EACLD,QAAS,SCPSmC,CAAUpB,IAA/B,uBACA,cAAC,IAAD,CAAQN,QAAS,kBDUE,SAACM,GACrBA,EAAQ,CACJ/B,MAAO,cACPiB,IAAK,EACLD,QAAS,QCdSoC,CAASrB,IAA9B,uBACA,uBACA,uBACA,2CACA,cAAC,IAAD,CAAQsB,IAAK,EAAGC,IAAK,GAAIC,aAAc,GAAIN,SAAU,SAACO,GAAD,ODchC,SAAC1B,EAAMC,GAC7BA,EAAQ,CACJ/B,MAAO,cACPiB,IAAK,EACLD,QAAS,SAAUc,IClBsC2B,CAAWD,EAAIzB,SAE5E,eAAC,IAAD,CAAKV,KAAM,EAAX,UACC,cAAC,IAAD,CAAQI,QAAS,kBDmBQ,SAACM,GAC3BA,EAAQ,CACJ/B,MAAO,cACPiB,IAAK,EACLD,QAAS,qBCvBS0C,CAAe3B,IAApC,6BACA,cAAC,IAAD,CAAQN,QAAS,kBD0BU,SAACM,GAC7BA,EAAQ,CACJ/B,MAAO,cACPiB,IAAK,EACLD,QAAS,uBC9BS2C,CAAiB5B,IAAtC,8BACA,cAAC,IAAD,CAAQN,QAAS,kBDiCW,SAACM,GAC9BA,EAAQ,CACJ/B,MAAO,cACPiB,IAAK,EACLD,QAAS,wBCrCS4C,CAAkB7B,IAAvC,6BACA,cAAC,IAAD,CAAQN,QAAS,kBDwCO,SAACM,GAC1BA,EAAQ,CACJ/B,MAAO,cACPiB,IAAK,EACLD,QAAS,oBC5CS6C,CAAc9B,IAAnC,qCAMJ,OACC,cAAC,IAAD,CAAMH,MAAM,gBAAZ,SACEoB,KCkBWc,EA/DI,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACjC,EAAe5E,IAAKC,UAAbC,EAAP,oBAEMC,EAAS,CACdQ,MAAO,gBACPiB,IAAK,GAcAiD,EACL,eAAC,IAAD,CACChE,OAAO,WACPC,KAAK,QACLZ,KAAMA,EACNa,cAAeZ,EACfa,SAjBe,SAACC,GACjB,IAAM6D,EAAU7D,EAChB6D,EAAQlD,IAAMzB,EAAOyB,IACrB8C,EAAII,IASJ,UAOC,cAAC,IAAD,CAAK/C,OAAQ,GAAb,SACC,cAAC,IAAD,CAAKC,KAAM,EAAX,SACC,cAAC,IAAKC,KAAN,CACCC,MAAM,QACNpB,KAAK,QAFN,SAIC,cAAC,IAAD,UAIH,cAAC,IAAD,UACC,cAAC,IAAD,CAAKkB,KAAM,EAAX,SACC,eAAC,IAAKC,KAAN,WACC,cAAC,IAAD,CAAQE,KAAK,UAAU4C,SAAS,SAAhC,uBAICH,EACC,cAAC,IAAD,CAAQzC,KAAK,SAAS6C,MAAO,CAAEC,WAAY,QAAU7C,QA/BxC,WACnB,IAAMnB,EAASf,EAAKgF,iBACpBP,EAAM1D,IA6BA,yBAGE,eAQT,OACC,cAAC,IAAD,UACE4D,K,0BC5DEM,G,qBAAa,SAACC,EAAaC,EAAO5C,EAAO6C,GAC3CA,EAAI,CACA3E,MAAO,cACPiB,IAAK,EACLD,QAAS,UAAYyD,EAAc,IAAMC,EAAQ,IAAM5C,MC+ChD8C,EAzCK,SAACC,EAAUJ,EAAaK,EAAUzB,EAAIC,EAAIyB,EAAKC,EAASR,EAAYG,GACpF,IAAIM,EAAMhD,SAASiD,cAAc,OAC7BC,EAAMlD,SAASiD,cAAc,SAC7BE,EAAMnD,SAASiD,cAAc,SAC7BG,EAAMpD,SAASiD,cAAc,SAEjCC,EAAIG,YAAcR,EAElBM,EAAI5D,KAAY,OAChB4D,EAAIrG,GAAY+F,EAAU,QAC1BM,EAAIpG,UAAY,eAEhBqG,EAAI7D,KAAQ,QACZ6D,EAAItG,GAAQ+F,EAAU,QACtBO,EAAIrG,UAAY,eAChBqG,EAAIhC,IAAQA,EACZgC,EAAI/B,IAAQA,EACZ+B,EAAIN,KAAQA,EAEZM,EAAIvD,MAAQkD,EACZI,EAAItD,MAAQkD,EAEZC,EAAIjG,UAAY,iBAChBiG,EAAIM,YAAYJ,GAChBF,EAAIM,YAAYH,GAChBH,EAAIM,YAAYF,GAGhBA,EAAIG,QAAU,WACVJ,EAAItD,MAAQ2D,KAAK3D,MACjB0C,EAAWC,EAAaK,EAAWO,EAAIvD,MAAO6C,IAGlDS,EAAII,QAAU,WACVH,EAAIvD,MAAQ2D,KAAK3D,MACjB0C,EAAWC,EAAaK,EAAWM,EAAItD,MAAO6C,IAElDE,EAASU,YAAYN,ICnBVS,EAzBM,SAACb,EAAUJ,EAAakB,EAAMX,EAASR,EAAYG,GACpE,IAAIM,EAAMhD,SAASiD,cAAc,OAC7BC,EAAMlD,SAASiD,cAAc,SAC7BE,EAAMnD,SAASiD,cAAc,SAEjCC,EAAIG,YAAcK,EAElBP,EAAI5D,KAAc,WAClB4D,EAAIrG,GAAc4G,EAAO,QACzBP,EAAIpG,UAAc,gBAClBoG,EAAItD,MAAckD,EAEA,SAAdI,EAAItD,QAAoBsD,EAAIQ,SAAU,GAE1CX,EAAIjG,UAAY,iBAChBiG,EAAIM,YAAYJ,GAChBF,EAAIM,YAAYH,GAEhBA,EAAII,QAAU,WACVC,KAAK3D,MAAwB,SAAf2D,KAAK3D,MAAoB,QAAU,OACjD0C,EAAWC,EAAakB,EAAMP,EAAItD,MAAO6C,IAE7CE,EAASU,YAAYN,IC4CVY,EA5DK,SAAC/G,EAAO6F,GAE3B,IAAMmB,EAAShH,EAAMgH,MACfC,EAASjH,EAAMkH,YACfC,EAASnH,EAAMmH,MACfC,EAASpH,EAAMoH,OACftE,EAAS9C,EAAM8C,MACfuE,EAASrH,EAAMqH,EACfC,EAAStH,EAAMsH,EAEfvB,EAAW5C,SAASiD,cAAc,OACxCL,EAAS7F,UAAY,YACrB6F,EAAS9F,GAAK6C,EAKdkE,EAAMO,SACL,SAACC,GACA,IAAMC,EAAOR,EAAMO,GACbE,EAAe1H,EAAMwH,GAET,WAAdC,EAAK/E,KAERiF,EAAa5B,EAAUjD,EAAO0E,EAAUC,EAAKlD,IAAKkD,EAAKjD,IAAKiD,EAAKxB,KAAMyB,EAAchC,EAAYG,GAE3E,YAAd4B,EAAK/E,MAEbkF,EAAc7B,EAAUjD,EAAO0E,EAAUE,EAAchC,EAAYG,MA2BtE,OACC,mCAtBoC,MAAhC1C,SAAS0E,eAAe/E,IAC3BgF,IAAQC,OAAO,CACdC,MAAO,OACPC,WAAY,yCACZC,YAAapF,EACbqF,UAAW,CACVhB,MAAO,WAAQ,OAAOtG,KAAK0D,IAAI4C,EAAyB,GAAlBiB,OAAOC,aAC7CjB,OAAQ,WAAQ,OAAOvG,KAAK0D,IAAI6C,EAA2B,GAAnBgB,OAAOE,eAEhDC,SAAU,YAAclB,EAAI,IAAMC,EAClCkB,UAAW,gBACXC,gBAAgB,EAChBC,QAAS3C,EAET4C,cAAe,WACd,OAAOP,OAAOQ,QAAQ,mCAAqC5I,EAAM8C,MAAQ,kB,iFCyB/D+F,G,OAzED,SAAC7I,GAEd,IAGM8I,EAAiB,GAAjBA,EAAkD,GAClD3B,EAJY,IAIQ2B,EADQ,GAE5B1B,EAJY,IAIU0B,EAFkB,GAIxCzB,EAAM0B,cAAcC,MAAM,CAAC,EAAG7B,IAC9BG,EAAMyB,cAAcC,MAAM,CAAC5B,EAAQ,IACnC6B,EAAMC,YAAaC,KAEnBC,EAAOC,cACXC,MAAMC,KACNlC,GAAE,SAAAmC,GAAC,OAAInC,EAAEmC,EAAEC,SACXnC,GAAE,SAAAkC,GAAC,OAAIlC,EAAEkC,EAAExG,UAEb,EAA2B0G,mBAAS1J,EAAM2J,MAA1C,mBAAOA,EAAP,UAeA,OAZAtC,EAAEuC,OAAO,CACRrF,YAAIoF,GAAM,SAAAE,GAAC,OAAItF,YAAIsF,EAAErI,QAAQ,SAAAgI,GAAC,OAAIA,EAAEC,WACpCjF,YAAImF,GAAM,SAAAE,GAAC,OAAIrF,YAAIqF,EAAErI,QAAQ,SAAAgI,GAAC,OAAIA,EAAEC,aAErCnC,EAAEsC,OAAO,CACRrF,YAAIoF,GAAM,SAAAE,GAAC,OAAItF,YAAIsF,EAAErI,QAAQ,SAAAgI,GAAC,OAAIA,EAAExG,YACpCwB,YAAImF,GAAM,SAAAE,GAAC,OAAIrF,YAAIqF,EAAErI,QAAQ,SAAAgI,GAAC,OAAIA,EAAExG,cAErCiG,EAAEW,OAAOD,EAAKG,KAAI,SAAAD,GAAC,OAAIA,EAAE5J,OAEpBqH,EAAEsC,SAAS,GAAKtC,EAAEsC,SAAS,IAAM,GAAKtC,EAAEsC,OAAO,CAAC,EAAE,IAGtD,mCACC,qBAAKzC,MAjCW,IAiCMC,OAhCN,IAgChB,SACC,oBAAG2C,UAAS,oBAAejB,EAAf,aAA+BA,EAA/B,KAAZ,UACC,mBACC5I,UAAU,eACV6J,UAAS,uBAAkB3C,EAAlB,KACT4C,IAAK,SAAAC,GAAI,OAAIC,YAAOD,GAAME,KAAKC,YAAW/C,OAE3C,mBAAGnH,UAAU,eAAe8J,IAAK,SAAAC,GAAI,OAAIC,YAAOD,GAAME,KAAKE,YAAS/C,KAApE,SACC,sBAAMyC,UAAU,cAAczC,EAAE,IAAIgD,GAAG,SAASC,KAAK,OAArD,qBAIAZ,EAAKG,KAAI,SAAAU,GACT,MAAgBA,EAAWhJ,OAAOiJ,OAAO,GAAlCC,EAAP,oBACA,OACC,oBAAGxK,UAAU,aAAb,UACC,sBACCA,UAAU,OACVsJ,EAAGJ,EAAKoB,EAAWhJ,QACnB+D,MAAO,CAAEoF,OAAQ1B,EAAEuB,EAAWvK,OAE/B,sBACC8J,UAAS,oBAAe1C,EAAEqD,EAAMjB,MAAvB,aAAiCnC,EAAEoD,EAAM1H,OAAzC,KACTqE,EAAG,EACHiD,GAAG,SACH/E,MAAO,CAAEqF,KAAM,mBAJhB,SAMEJ,EAAWvK,OAZiBuK,EAAWvK,gBC+ClC4K,G,OApGE,SAAC,GAA0B,IAAxB3I,EAAuB,EAAvBA,QAASe,EAAc,EAAdA,QAC5B,EAA6Ba,qBAAWC,GAAjCE,EAAP,EAAOA,MAAOD,EAAd,EAAcA,SACd,EAAgC0F,oBAAS,GAAzC,mBAAOoB,EAAP,KAAaC,EAAb,KACA,EAAgCrB,mBAAS,IAAzC,mBAAiBsB,GAAjB,WAUA,EAAgCtB,mBAAS,IAAzC,mBAAOuB,EAAP,KAAiBC,EAAjB,KAEAC,qBAAW,WACNlH,EAAMmH,eACTF,EAAY,IACZlH,EAAS,CAACtB,KAAM,eAEf,CAACuB,IAKJ,IAAMoH,EAAc,CAEnB,yBAA0B,SAACC,GAC1B,cAAoBC,OAAOC,QAAQF,GAAnC,eAA8C,CAAzC,0BAAOG,EAAP,KAASC,EAAT,KACM,YAAND,GACHE,EAAaD,EAAGzI,KAKnB,qBAAsB,SAACqI,GACtB,GAAqC,IAAjCC,OAAOK,KAAKX,GAAU5H,OAAc,CACvC0H,GAAQ,GAER,cAAoBQ,OAAOC,QAAQF,GAAnC,eAA8C,CAAzC,0BAAOG,EAAP,KAASC,EAAT,KACJT,EAASQ,GAAK,CAAC,CAAChC,KAAM,EAAGzG,MAAM0I,UAIhC,cAAoBH,OAAOC,QAAQF,GAAnC,eAA8C,CAAzC,0BAAOG,EAAP,KAASC,EAAT,KAEEG,EAAaZ,EAASQ,GAItBK,EAAY,CAACrC,KAFGoC,EAAUA,EAAUxI,OAAQ,GACnBoG,KAAO,EACJzG,MAAM0I,GACxCG,EAAUE,KAAKD,MAQnBX,qBAAU,WACT,GAAIjJ,EAAQhB,MAAO,CAClB,IAAM8K,EAAaC,KAAKC,MAAMhK,EAAQiK,SACtCnB,GAAY,SAAAoB,GAAQ,4BAAQA,GAAR,CAAkBlK,OAEtCmJ,EAAYnJ,EAAQhB,OAAO8K,MAE1B,CAAC9J,IAWJ,OACC,cAAC,IAAD,CAAMY,MAAM,WAAZ,SASGgI,GACD,qBAAK7K,GAAG,iBAAR,SACEsL,OAAOK,KAAKX,GAAUnB,KAAI,SAASuC,GACnC,IAAMC,EAAa,CAAC,CAACrM,GAAGoM,EAAK7K,OAAOyJ,EAASoB,KAC7C,OAAO,sBAAenM,UAAU,aAAzB,cAAuC,cAAC,EAAD,CAAOyJ,KAAM2C,IAApD,MAAUD,Y,kBC5FVtI,EAAawI,wBAAc,IAClCC,EAAe,CACpBpB,cAAc,GAGf,SAASqB,EAAYxI,EAAOyI,GAC3B,OAAOA,EAAOhK,MACb,IAAK,QACJ,MAAO,CACN0I,cAAc,GAEhB,QACC,OAAOoB,GAKV,IAwFeG,EAxFE,WAChB,MAAgCjD,mBAAS,MAAzC,mBAAOkD,EAAP,KAAeC,EAAf,KACA,EAAgCnD,oBAAS,GAAzC,mBAAOoD,EAAP,KAAgBC,EAAhB,KACA,EAAiCrD,mBAAS,IAA1C,mBAAOxH,EAAP,KAAgB8K,EAAhB,KACA,EAA0CtD,mBAAS,WAAnD,mBAAOuD,EAAP,KAAsBC,EAAtB,KACA,EAA8BC,qBAAWV,EAAaD,GAAtD,mBAAOvI,EAAP,KAAcD,EAAd,KAOAmH,qBAAU,WACLyB,IACHA,EAAOQ,GAAG,WAAW,WACpBF,EAAiB,gBAElBN,EAAOQ,GAAG,SAAS,SAACC,GACnBC,QAAQC,MAAM,qBAAsBF,GACpCT,EAAOY,SAERZ,EAAOQ,GAAG,aAAa,WACtBF,EAAiB,mBAElBN,EAAOQ,GAAG,WAAW,SAAClM,EAAOiL,GAC5B,IAAMjK,EAAU,CAAEhB,QAAOiL,QAASA,EAAQpL,YAC1CiM,EAAW9K,SAGX,CAAC0K,IAEJ,IAQMa,EAAc,SAACC,GACpB,GAAId,EAAQ,CACX,IAAQ1L,EAAwBwM,EAAxBxM,MAAOiB,EAAiBuL,EAAjBvL,IAAKD,EAAYwL,EAAZxL,QACpB0K,EAAO3J,QAAQ/B,EAAOgB,EAAS,CAAEC,QAAO,SAAAoL,GACnCA,GACHD,QAAQK,IAAI,kBAAmBJ,QAgCnC,OACC,mCACC,eAACxJ,EAAW6J,SAAZ,CAAqB5K,MAAO,CAACiB,QAAOD,YAApC,UACC,cAAC,EAAD,CAAY5D,QAxEK,SAACO,EAAMkN,GAC1BX,EAAiB,cACjBL,EAAUiB,IAAK1N,QAAQO,EAAMkN,KAsEOxN,WAhDd,WAClBuM,GACHA,EAAOY,KAAI,WACVN,EAAiB,eA6C6C5M,WAAY2M,IAC1E,cAAC,EAAD,CAAYhI,IA9BC,SAAC8I,GAChB,GAAInB,EAAQ,CACX,IAAQ1L,EAAe6M,EAAf7M,MAAOiB,EAAQ4L,EAAR5L,IACfyK,EAAOoB,UAAU9M,EAAO,CAAEiB,QAAO,SAACoL,GAC7BA,EACHD,QAAQK,IAAI,4BAA6BJ,GAG1CR,GAAS,QAsBiB7H,MAjBX,SAAC6I,GAClB,GAAInB,EAAQ,CACX,IAAQ1L,EAAU6M,EAAV7M,MACR0L,EAAOqB,YAAY/M,GAAO,SAAAqM,GACrBA,EACHD,QAAQK,IAAI,oBAAqBJ,GAGlCR,GAAS,QASmC5H,UAAW2H,IACvD,cAAC,EAAD,CAAW7J,QAASwK,IACpB,cAAC,EAAD,CAAUvL,QAASA,EAASe,QAASwK,UC1F1BS,MAVf,SAAqBlO,GACjB,OACI,qBAAKC,GAAG,WAAR,SACI,qBAAKC,UAAU,kBAAkBqF,MAAS,CAAE4I,QAAS,GAAIC,UAAW,SAApE,SACR,cAAC,EAAD,CAAUnO,GAAG,c,OCIFoO,MAXf,SAAuBrO,GACnB,OACI,sBAAKC,GAAG,aAAR,UACI,yCACA,yCACA,yCACA,6C,2BCAJqO,G,OAAcC,IAAdD,OACAE,EAAcC,IAAdD,QA2BOE,MAxBf,SAAwB1O,GAEpB,MAAsC0J,oBAAS,GAA/C,mBAAOiF,EAAP,KAAkBC,EAAlB,KAOA,OACI,cAACN,EAAD,CAAOrO,GAAG,UAAU4O,aAAW,EAACF,UAAWA,EAAWG,WANvC,SAACC,GACtBzB,QAAQK,IAAIgB,GACNC,EAAiBG,IAIjB,SACI,eAAC,IAAD,CAAM/G,MAAM,OAAO/H,GAAG,eAAe+O,oBAAuB,CAAC,KAAMC,KAAO,SAA1E,UACI,cAACT,EAAD,CAAwBU,KAAQ,cAACC,EAAA,EAAD,IAAuBrM,MAAQ,aAA/D,SACI,cAAC,EAAD,CAAU7C,GAAG,UADA,QAGjB,eAACuO,EAAD,CAAwBU,KAAQ,cAACE,EAAA,EAAD,IAAkBtM,MAAQ,UAA1D,UACI,cAAC,IAAKN,KAAN,qBAAiB,KACjB,cAAC,IAAKA,KAAN,qBAAiB,OAFJ,c,OCLlB6M,MAbf,SAAerP,GACX,OACI,eAAC,IAAD,CAAQuF,MAAO,CAAE6I,UAAW,SAA5B,UACI,cAAC,EAAD,IACA,eAAC,IAAD,CAAQlO,UAAU,cAAlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCEDoP,G,cARH,WACX,OACC,8BACC,cAAC,EAAD,QCTHC,IAASC,OAAO,cAAC,EAAD,IAASrM,SAAS0E,eAAe,W","file":"static/js/main.788d13a0.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css'\n\nfunction HeaderContent(props){\n    return (\n        <div id=\"header\" className = \"site-layout-background\" >\n            <div id=\"logo-div\"></div>\n            <h3>nin - Deepknowledge Group</h3>\n        </div>\n    );\n}\n\nexport default HeaderContent;","import React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\n\nconst Connection = ({ connect, disconnect, connectBtn }) => {\n\tconst [form] = Form.useForm();\n\tconst record = {\n\t\thost: '127.0.0.1',\n\t\tclientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n\t\tport: 8083,\n\t\ttopic: 'from_client/#'\n\t};\n\tconst onFinish = (values) => {\n\t\tconst { host, port } = values;\n\t\t// const qos = 0;\n\t\tconst url = `ws://${host}:${port}/mqtt`;\n\t\tconst options = {\n\t\t\tkeepalive: 30,\n\t\t\tprotocolId: 'MQTT',\n\t\t\tprotocolVersion: 4,\n\t\t\tclean: true,\n\t\t\treconnectPeriod: 1000,\n\t\t\tconnectTimeout: 30 * 1000,\n\t\t\twill: {\n\t\t\t\ttopic: 'WillMsg',\n\t\t\t\tpayload: 'Connection Closed abnormally..!',\n\t\t\t\tqos: 0,\n\t\t\t\tretain: false\n\t\t\t},\n\t\t\trejectUnauthorized: false\n\t\t};\n\t\toptions.clientId = record.clientId;\n\t\t\n\t\tconnect(url, options);\n\t};\n\n\tconst handleConnect = () => {\n\t\tform.submit();\n\t};\n\n\tconst handleDisconnect = () => {\n\t\tdisconnect();\n\t};\n\n\tconst ConnectionForm = (\n\t\t<Form\n\t\t\tlayout=\"vertical\"\n\t\t\tname=\"basic\"\n\t\t\tform={form}\n\t\t\tinitialValues={record}\n\t\t\tonFinish={onFinish}\n\t\t>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Host\"\n\t\t\t\t\t\tname=\"host\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Port\"\n\t\t\t\t\t\tname=\"port\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\t\t\t\t\n\t\t\t\t\t<Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>\n\t\t\t\t\t<Button danger onClick={handleDisconnect}>Disconnect</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t)\n\n\treturn (\n\t\t<Card title=\"Connection\" >\n\t\t\t{ConnectionForm}\n\t\t</Card>\n\t);\n}\n\nexport default Connection;\n","const removeElementsByClass = (className) => {\n    const elements = document.getElementsByClassName(className);\n    while(elements.length > 0){\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n\nexport const modelLoad = (value, publish) => {\n    // New panels are created with class 'panel_div', we need to remove this elements before create new ones\n    removeElementsByClass('jsPanel')\n\n    // In the Lua side, models must be created in a folder named as the model file and this folder must be placed inside the Resources folder\n    const fileName \t= value.target.files[0].name\n    const dirName \t= fileName.split('.')[0]\n\n    // At the moment, the separator is \"|\"\n    publish({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'Load|' + dirName + '/' + fileName\n    })\n};\n\nexport const modelSetup = (publish, dispatch) => {\n    dispatch({type: 'setup'});\n    publish({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'Setup'\n    });\n};\n\nexport const modelStep = (publish) => {\n    publish({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'Step'\n    })\n};\n\nexport const modelRun = (publish) => {\n    publish({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'Run'\n    })\n};\n\nexport const modelSpeed = (value,publish) => {\n    publish({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'Speed:'+ value\n    })\n};\n\nexport const modelViewStats = (publish) => {\n    publish({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'ToggleView:Stats'\n    })\n};\n\nexport const modelViewWindows = (publish) => {\n    publish({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'ToggleView:Windows'\n    })\n};\n\nexport const modelViewFamilies = (publish) => {\n    publish({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'ToggleView:Families'\n    })\n};\n\nexport const modelViewGrid = (publish) => {\n    publish({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'ToggleView:Grid'\n    })\n};\n","import React, { useContext } from 'react';\nimport { Card, Form, Input, Row, Col, Button, Slider } from 'antd';\nimport { NewContext} from '../index'\n\nimport {\n\tmodelLoad, \n\tmodelSetup,\n\tmodelStep,\n\tmodelRun,\n\tmodelSpeed,\n\tmodelViewStats,\n\tmodelViewWindows,\n\tmodelViewFamilies,\n\tmodelViewGrid,\n} from './publisherLogic' \n\nconst Publisher = ({ publish }) => {\n\tconst [form] = Form.useForm();\n\tconst {state, dispatch} = useContext(NewContext);\n\t\n\tconst PublishForm = (\n\t\t<Form layout=\"vertical\"\tname=\"basic\" form={form} >\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8} >\n\t\t\t\t\t<Input type='file' onChange={(value) => modelLoad(value,publish)}/>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8} >\n\t\t\t\t\t{/* <Button onClick={modelLoad}>\tLoad\t</Button> */}\n\t\t\t\t\t<Button onClick={()=>modelSetup(publish,dispatch)}>\tSetup\t</Button>\n\t\t\t\t\t<Button onClick={()=>modelStep(publish)}> \t\t\tStep\t</Button>\n\t\t\t\t\t<Button onClick={()=>modelRun(publish)}> \t\t\tRun \t</Button>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<label>Speed:</label>\n\t\t\t\t\t<Slider min={1} max={10} defaultValue={10} onChange={(val)=>modelSpeed(val,publish)} />\n\t\t\t\t</Col>\n\t\t\t\t<Col span={8} >\n\t\t\t\t\t<Button onClick={()=>modelViewStats(publish)}> \t  view Stats\t</Button>\n\t\t\t\t\t<Button onClick={()=>modelViewWindows(publish)}>  view Windows \t</Button>\n\t\t\t\t\t<Button onClick={()=>modelViewFamilies(publish)}> view Families\t</Button>\n\t\t\t\t\t<Button onClick={()=>modelViewGrid(publish)}> \t  view Grid \t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t)\n\n\treturn (\n\t\t<Card title=\"Control Panel\" >\n\t\t\t{PublishForm}\n\t\t</Card>\n\t);\n}\n\nexport default Publisher;\n","import React, { useContext } from 'react';\nimport { Card, Form, Input, Row, Col, Button, Select } from 'antd';\n\nconst Subscriber = ({ sub, unSub, showUnsub }) => {\n\tconst [form] = Form.useForm();\n\n\tconst record = {\n\t\ttopic: 'from_server/#',\n\t\tqos: 0,\n\t};\n\n\tconst onFinish = (values) => {\n\t\tconst withQos = values\n\t\twithQos.qos = record.qos\n\t\tsub(withQos);\n\t};\n\n\tconst handleUnsub = () => {\n\t\tconst values = form.getFieldsValue();\n\t\tunSub(values);\n\t};\n\n\tconst SubForm = (\n\t\t<Form\n\t\t\tlayout=\"vertical\"\n\t\t\tname=\"basic\"\n\t\t\tform={form}\n\t\t\tinitialValues={record}\n\t\t\tonFinish={onFinish}\n\t\t>\n\t\t\t<Row gutter={20}>\n\t\t\t\t<Col span={8}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Topic\"\n\t\t\t\t\t\tname=\"topic\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col span={8} >\n\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\tSubscribe\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowUnsub ?\n\t\t\t\t\t\t\t\t<Button type=\"danger\" style={{ marginLeft: '10px' }} onClick={handleUnsub}>\n\t\t\t\t\t\t\t\t\tUnsubscribe\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t)\n\n\treturn (\n\t\t<Card >\n\t\t\t{SubForm}\n\t\t</Card>\n\t);\n}\n\nexport default Subscriber;\n","\nconst sendUpdate = (windowTitle, param, value, pub) => {\n    pub({\n        topic: 'from_client',\n        qos: 0,\n        payload: 'Update/' + windowTitle + '/' + param + '/' + value\n    })\n}\n\n// const anyOtherFunction = ...\n\nexport {\n    sendUpdate,\n    // anyOtherFunction\n}","\n// This function creates a new slider in a window\n// panelDiv is the element the new slider must be added to\n// window is the name of the window the parameter belongs to\n// paramName is the name of the parameter (label of the slider)\n// min slider value\n// max slider value\n// step determines the slider step\n// current It is used to give to the slider a initial value\n\n\nconst InputSlider = (panelDiv, windowTitle, paramName,min,max,step,current, sendUpdate, pub) => {\n    let div = document.createElement('div');\n    let lbl = document.createElement('label');\n    let inp = document.createElement('input');\n    let rng = document.createElement('input');\n\n    lbl.textContent = paramName;\n\n    inp.type      = 'text';\n    inp.id        = paramName+'Input';\n    inp.className = 'slider_input';\n\n    rng.type  = 'range';\n    rng.id    = paramName+'Range';\n    rng.className = 'slider_range'\n    rng.min   = min;\n    rng.max   = max;\n    rng.step  = step;\n\n    rng.value = current;\n    inp.value = current;\n\n    div.className = 'slidecontainer';\n    div.appendChild(lbl);\n    div.appendChild(inp);\n    div.appendChild(rng);\n\n    // When the slider is moved, input value is updated\n    rng.oninput = function() {\n        inp.value = this.value;\n        sendUpdate(windowTitle, paramName, rng.value, pub)\n    }\n    // The slider is updated when a new input is set\n    inp.oninput = function() {\n        rng.value = this.value;\n        sendUpdate(windowTitle, paramName, inp.value, pub)\n    }\n    panelDiv.appendChild(div);\n};\n\n\nexport default InputSlider\n","// This function creates a new checkbox input in a window\n// panelDiv is the element the new slider must be added to\n// paramName is the name of the parameter (label of the boolean)\n// current It is used to give to the checkbox a initial value\nconst InputBoolean = (panelDiv, windowTitle, p_id, current, sendUpdate, pub) => {\n    let div = document.createElement('div');\n    let lbl = document.createElement('label');\n    let inp = document.createElement('input');\n\n    lbl.textContent = p_id;\n\n    inp.type        = 'checkbox';\n    inp.id          = p_id + 'Input';\n    inp.className   = 'boolean_input';\n    inp.value       = current;\n    \n    if (inp.value === 'true') { inp.checked = true; }\n\n    div.className = 'slidecontainer';\n    div.appendChild(lbl);\n    div.appendChild(inp);\n\n    inp.oninput = function() {\n        this.value = (this.value === 'true') ? 'false' : 'true'\n        sendUpdate(windowTitle, p_id, inp.value, pub)\n    }\n    panelDiv.appendChild(div);\n};\n\nexport default InputBoolean\n\n","import { jsPanel } from 'jspanel4/es6module/jspanel';\nimport 'jspanel4/es6module/extensions/modal/jspanel.modal';\nimport 'jspanel4/dist/jspanel.min.css';\nimport './CreatePanel.css'\nimport {sendUpdate} from './CreatePanelLogic'\n\nimport createSlider from '../InputSlider/InputSlider'\nimport createBoolean from '../InputBoolean/InputBoolean'\n\n\nconst CreatePanel = (props, pub) => {\n\t\n\tconst order  = props.order\n\tconst items  = props.ui_settings\n\tconst width  = props.width;\n\tconst height = props.height;\n\tconst title  = props.title;\n\tconst x      = props.x;\n\tconst y      = props.y;\n\n\tconst panelDiv = document.createElement('div');\n\tpanelDiv.className = 'panel_div';\n\tpanelDiv.id = title;\n\n\t// console.log(order)\n\t// createSlider(panelDiv, title, 'slide1', 0, 1, 0.1, 0.5)\n\n\torder.forEach(\n\t\t(itemName) => {\n\t\t\tconst item = items[itemName];\n\t\t\tconst currentValue = props[itemName];\n\n\t\t\tif (item.type === 'slider') \n\t\t\t{\n\t\t\t\tcreateSlider(panelDiv, title, itemName, item.min, item.max, item.step, currentValue, sendUpdate, pub)\n\t\t\t} \n\t\t\telse if (item.type === 'boolean') \n\t\t\t{\n\t\t\t\tcreateBoolean(panelDiv, title, itemName, currentValue, sendUpdate, pub)\n\t\t\t};\n\t\t}\n\t);\n\n\tconst newPanel = () => {\n\t\tif (document.getElementById(title)==null) {\n\t\t\tjsPanel.create({\n\t\t\t\ttheme: 'dark',\n\t\t\t\theaderLogo: '<i class=\"fad fa-home-heart ml-2\"></i>',\n\t\t\t\theaderTitle: title,\n\t\t\t\tpanelSize: {\n\t\t\t\t\twidth: () => { return Math.min(width, window.innerWidth*0.9);},\n\t\t\t\t\theight: () => { return Math.min(height, window.innerHeight*0.6);}\n\t\t\t\t},\n\t\t\t\tposition: 'left-top ' + x + ' ' + y,\n\t\t\t\tanimateIn: 'jsPanelFadeIn',\n\t\t\t\tonwindowresize: true,\n\t\t\t\tcontent: panelDiv,\n\t\t\t\t\t\n\t\t\t\tonbeforeclose: function() {\n\t\t\t\t\treturn window.confirm('Do you really want to close the ' + props.title + ' panel?');\n\t\t\t\t}\n\t\t\t});            \n\t\t}\n\t}\n\n\treturn(\n\t\t<div>{newPanel()}</div>\n\t)\n}\n\nexport default CreatePanel\n","import React, { useState } from 'react';\nimport { scaleOrdinal, scaleLinear } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { line as d3Line, curveBasis } from 'd3-shape';\nimport { min, max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\n\nimport './chart.css';\n\n\nconst Chart = (props) => {\n\n\tconst svgWidth \t= 500;\n\tconst svgHeight = 300;\n\n\tconst margin \t= { top: 20, right: 80, bottom: 30, left: 50 };\n\tconst width \t= svgWidth - margin.left - margin.right;\n\tconst height \t= svgHeight - margin.top - margin.bottom;\n\n\tconst x \t\t= scaleLinear().range([0, width]);\n\tconst y \t\t= scaleLinear().range([height, 0]);\n\tconst z \t\t= scaleOrdinal(schemeCategory10);\n\n\tconst line = d3Line()\n\t\t.curve(curveBasis)\n\t\t.x(d => x(d.time))\n\t\t.y(d => y(d.value));\n\n\tconst [data, updateData] = useState(props.data);\n\t\n\n\tx.domain([\n\t\tmin(data, c => min(c.values, d => d.time)),\n\t\tmax(data, c => max(c.values, d => d.time)),\n\t]);\n\ty.domain([\n\t\tmin(data, c => min(c.values, d => d.value)),\n\t\tmax(data, c => max(c.values, d => d.value)),\n\t]);\n\tz.domain(data.map(c => c.id));\n\n\tif ( y.domain()[0] - y.domain()[1] == 0 ) {y.domain([0,1])}\n\n\treturn(\n\t\t<>\n\t\t\t<svg width={svgWidth} height={svgHeight}>\n\t\t\t\t<g transform={`translate(${margin.left}, ${margin.top})`}>\n\t\t\t\t\t<g\n\t\t\t\t\t\tclassName=\"axis axis--x\"\n\t\t\t\t\t\ttransform={`translate(0, ${height})`}\n\t\t\t\t\t\tref={node => select(node).call(axisBottom(x))}\n\t\t\t\t\t/>\n\t\t\t\t\t<g className=\"axis axis--y\" ref={node => select(node).call(axisLeft(y))}>\n\t\t\t\t\t\t<text transform=\"rotate(-90)\" y=\"6\" dy=\"0.71em\" fill=\"#000\">\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t</text>\n\t\t\t\t\t</g>\n\t\t\t\t\t{data.map(trackedVar => {\n\t\t\t\t\t\tconst [lastD] = trackedVar.values.slice(-1);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<g className=\"trackedVar\" key={trackedVar.id}>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName=\"line\"\n\t\t\t\t\t\t\t\t\td={line(trackedVar.values)}\n\t\t\t\t\t\t\t\t\tstyle={{ stroke: z(trackedVar.id) }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\ttransform={`translate(${x(lastD.time)}, ${y(lastD.value)})`}\n\t\t\t\t\t\t\t\t\tx={3}\n\t\t\t\t\t\t\t\t\tdy=\"0.35em\"\n\t\t\t\t\t\t\t\t\tstyle={{ font: '10px sans-serif' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{trackedVar.id}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t</>\n\t);\n};\n\nexport default Chart\n\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Card, List } from 'antd';\nimport createWindow from '../../CreatePanel/CreatePanel'\nimport Chart from '../../D3/Chart/Chart'\nimport { NewContext } from '../index'\n\nimport './receiver.css'\n\nconst Receiver = ({ payload, publish }) => {\n\tconst {state, dispatch} \t  = useContext(NewContext);\n\tconst [init, setInit]         = useState(false);\n\tconst [messages, setMessages] = useState([]);\n\n\t// \"monitors\" is a Map of Array of Maps. Each one of this Arrays contains the information to build a graphical monitor.\n\t// This maps have two keys -> \"id\" is the name of the var we want to track and \"values\" are a list of maps, each one of them containing two keys -> time (x axis) and a value (y axis) associated to this time. \n\t// When component is created, \"monitors\" is an empty Array, but it will be populated with the mqtt messagges.\n\n\t// const monitors = { \n\t// \t\t'var_1':  [ {time: 0, value: 11}, {time: 1, value: 20}, ... ] ,\n\t// \t\t'var_2':  [ {time: 0, value: 11}, {time: 1, value: 20}, ... ]\n\t// };\n\tconst [monitors, setmonitors] = useState({});\n\n\tuseEffect( () => {\n\t\tif (state.setupClicked) {\n\t\t\tsetmonitors({});\n\t\t\tdispatch({type: 'unSetup'});\n\t\t}\n\t}, [state]);\n\n\t// At the moment, two posible topics:\n\t// - from_server/panel_info\n\t// - from_server/update\n\tconst topicOption = {\n\n\t\t'from_server/panel_info': (jsonObj) => {\n\t\t\tfor (const [k,v] of Object.entries(jsonObj) ) {\n\t\t\t\tif (k !== 'Monitor') {\n\t\t\t\t\tcreateWindow(v, publish)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'from_server/update': (jsonObj) => {\n\t\t\tif (Object.keys(monitors).length === 0) {\n\t\t\t\tsetInit(true)\n\n\t\t\t\tfor (const [k,v] of Object.entries(jsonObj) ) {\n\t\t\t\t\tmonitors[k] = [{time: 0, value:v}];\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tfor (const [k,v] of Object.entries(jsonObj) ) {\n\n\t\t\t\t\tconst targetVar \t= monitors[k];\n\n\t\t\t\t\tconst lastElement  \t= targetVar[targetVar.length -1];\n\t\t\t\t\tconst newTime  \t\t= lastElement.time + 1;\n\t\t\t\t\tconst newInput\t\t= {time: newTime, value:v};\n\t\t\t\t\ttargetVar.push(newInput)\t\n\t\t\t\t}\n\t\t\t\t// console.log(monitors['app_rescued'].length)\n\t\t\t}\t\t\t\n\t\t},\n\n\t}\n\n\tuseEffect(() => {\n\t\tif (payload.topic) {\n\t\t\tconst jsonObject = JSON.parse(payload.message);\n\t\t\tsetMessages(messages => [...messages, payload]);\n\n\t\t\ttopicOption[payload.topic](jsonObject);\n\t\t}\n\t}, [payload]);\n\n\tconst renderListItem = (item) => (\n\t\t<List.Item>\n\t\t\t<List.Item.Meta\n\t\t\t\ttitle={item.topic}\n\t\t\t\tdescription={item.message}\n\t\t\t/>\n\t\t</List.Item>\n\t);\n\n\treturn (\n\t\t<Card title=\"Receiver\">\n\t\t\t{/* When Uncommented, incoming MQTT messages are displayed */}\n\t\t\t{/* <List\n\t\t\t\tsize=\"small\"\n\t\t\t\tbordered\n\t\t\t\tdataSource={messages}\n\t\t\t\t// renderItem={renderListItem}\n\t\t\t\tstyle={{maxHeight:'15em' ,overflow:'scroll'}}\n\t\t\t/> */}\n\t\t\t{ init && \n\t\t\t\t<div id='allMonitorsDiv'>\n\t\t\t\t\t{Object.keys(monitors).map(function(key) {\n\t\t\t\t\t\tconst newMonitor = [{id:key, values:monitors[key]}]\n\t\t\t\t\t\treturn <div key={key} className='monitorDiv'> <Chart data={newMonitor} /> </div>;\n\t\t\t\t  \t})}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t</Card>\n\t);\n}\n\nexport default Receiver;\n","import React, { createContext, useEffect, useReducer, useState } from 'react';\nimport Connection from './Connection/Connection';\nimport Publisher from './Publisher/Publisher';\nimport Subscriber from './Subscriber/Subscriber';\nimport Receiver from './Receiver/Receiver';\nimport mqtt from 'mqtt';\n\nexport const NewContext = createContext([])\nconst initialState = {\n\tsetupClicked: false,\n}\n\nfunction changeState(state, action) {\n\tswitch(action.type){\n\t\tcase 'setup':\n\t\t\treturn {\n\t\t\t\tsetupClicked: true\n\t\t\t};\n\t\tdefault:\n\t\t\treturn initialState\n\t}\n}\n\n\nconst HookMqtt = () => {\n\tconst [client, setClient] \t\t\t\t= useState(null);\n\tconst [isSubed, setIsSub] \t\t\t\t= useState(false);\n\tconst [payload, setPayload] \t\t\t= useState({});\n\tconst [connectStatus, setConnectStatus] = useState('Connect');\n\tconst [state, dispatch] \t\t\t\t= useReducer(changeState, initialState);\n\n\tconst mqttConnect = (host, mqttOption) => {\n\t\tsetConnectStatus('Connecting');\n\t\tsetClient(mqtt.connect(host, mqttOption));\n\t};\n\n\tuseEffect(() => {\n\t\tif (client) {\n\t\t\tclient.on('connect', () => {\n\t\t\t\tsetConnectStatus('Connected');\n\t\t\t});\n\t\t\tclient.on('error', (err) => {\n\t\t\t\tconsole.error('Connection error: ', err);\n\t\t\t\tclient.end();\n\t\t\t});\n\t\t\tclient.on('reconnect', () => {\n\t\t\t\tsetConnectStatus('Reconnecting');\n\t\t\t});\n\t\t\tclient.on('message', (topic, message) => {\n\t\t\t\tconst payload = { topic, message: message.toString() };\n\t\t\t\tsetPayload(payload);\n\t\t\t});\n\t\t}\n\t}, [client]);\n\n\tconst mqttDisconnect = () => {\n\t\tif (client) {\n\t\t\tclient.end(() => {\n\t\t\t\tsetConnectStatus('Connect');\n\t\t\t});\n\t\t}\n\t}\n\n\tconst mqttPublish = (context) => {\n\t\tif (client) {\n\t\t\tconst { topic, qos, payload } = context;\n\t\t\tclient.publish(topic, payload, { qos }, error => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log('Publish error: ', error);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tconst mqttSub = (subscription) => {\n\t\tif (client) {\n\t\t\tconst { topic, qos } = subscription;\n\t\t\tclient.subscribe(topic, { qos }, (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log('Subscribe to topics error', error)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tsetIsSub(true)\n\t\t\t});\n\t\t}\n\t};\n\n\tconst mqttUnSub = (subscription) => {\n\t\tif (client) {\n\t\t\tconst { topic } = subscription;\n\t\t\tclient.unsubscribe(topic, error => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log('Unsubscribe error', error)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tsetIsSub(false);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<NewContext.Provider value={{state, dispatch}}>\n\t\t\t\t<Connection connect={mqttConnect} disconnect={mqttDisconnect} connectBtn={connectStatus} />\n\t\t\t\t<Subscriber sub={mqttSub} unSub={mqttUnSub} showUnsub={isSubed} />\n\t\t\t\t<Publisher publish={mqttPublish} />\n\t\t\t\t<Receiver payload={payload} publish={mqttPublish} />\n\t\t\t</NewContext.Provider>\n\t\t</>\n\t);\n}\n\nexport default HookMqtt;","import React    from 'react';\n\n\nimport './Body.css'\nimport HookMqtt from '../Mqtt/index'\n\nfunction BodyContent(props) {\n    return (\n        <div id=\"body-div\" >\n            <div className=\"container-fluid\" style = {{ padding: 24, minHeight: '100vh' }}>\n\t\t\t\t<HookMqtt id='mqtt' />\n\t\t\t</div>\n        </div>\n    );\n}\n\nexport default BodyContent;","import React from 'react';\nimport './Footer.css'\n\nfunction FooterContent(props) {\n    return (\n        <div id=\"footer-div\">\n            <div>Item 1</div>\n            <div>Item 2</div>\n            <div>Item 3</div>\n            <div>Item 4</div>\n        </div>\n    );\n}\n\nexport default FooterContent;","import React, { useState } from 'react';\n\nimport HookMqtt from '../Mqtt/index'\n\nimport { Layout, Menu }                     from 'antd';\nimport { ApartmentOutlined,\tTeamOutlined }  from '@ant-design/icons';\n\nimport './Sidebar.css'\n\nconst { Sider }     = Layout;\nconst { SubMenu }   = Menu;\n\n\nfunction SidebarContent(props) {\n\n    const [collapsed, collapseFunction] = useState(true);\n\n    const onCollapse = (e) => {\n\t\tconsole.log(collapsed);\n        collapseFunction(e);\n\t};\n\n    return(\n        <Sider id='sideBar' collapsible collapsed={collapsed} onCollapse={onCollapse}>\n            <Menu theme='dark' id=\"sidebar-menu\" defaultSelectedKeys = {['1']} mode = \"inline\">\n                <SubMenu   key = \"sub1\" icon = {<ApartmentOutlined />} title = \"Connection\">\n                    <HookMqtt id='mqtt' />\n                </SubMenu>\n                <SubMenu   key = \"sub2\" icon = {<TeamOutlined />} title = \"A thing\">\n                    <Menu.Item key = \"6\">Team 10</Menu.Item>\n                    <Menu.Item key = \"8\">Team 20</Menu.Item>\n                </SubMenu>\n            </Menu>\n        </Sider>\n    );\n}\n\nexport default SidebarContent;\n\n","import React from 'react';\n\nimport { Layout }     from 'antd';\nimport HeaderContent  from './../Header/Header'\nimport BodyContent    from './../Body/Body'\nimport FooterContent  from './../Footer/Footer'\nimport SidebarContent from './../Sidebar/Sidebar'\n\nimport 'antd/dist/antd.css';\n\nfunction Page (props) {\n    return (\n        <Layout style={{ minHeight: '100vh' }} >\n            <SidebarContent />\n            <Layout className=\"site-layout\">\n                <HeaderContent />\n                <BodyContent />\n                <FooterContent />\n            </Layout>\n        </Layout> \n    );\n}\n\nexport default Page;","\nimport React from 'react';\nimport Page from './components/Page/Page'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport 'jspanel4/dist/jspanel.min.css';\n\n\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Page />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}